{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sanje\\\\Downloads\\\\PROJECTS\\\\QuizSystem\\\\reactapp\\\\src\\\\components\\\\AIQuestionGenerator.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { buttonStyles } from './buttonStyles';\nimport { useToast, ToastContainer } from './Toast';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AIQuestionGenerator = ({\n  quizId,\n  onQuestionsGenerated\n}) => {\n  _s();\n  const [topic, setTopic] = useState('');\n  const [difficulty, setDifficulty] = useState('medium');\n  const [questionCount, setQuestionCount] = useState(5);\n  const [questionType, setQuestionType] = useState('MULTIPLE_CHOICE');\n  const [generating, setGenerating] = useState(false);\n  const [createNewQuiz, setCreateNewQuiz] = useState(true);\n  const [newQuizTitle, setNewQuizTitle] = useState('');\n  const [newQuizDescription, setNewQuizDescription] = useState('');\n  const [timeLimit, setTimeLimit] = useState(30);\n  const {\n    toasts,\n    addToast,\n    removeToast\n  } = useToast();\n  const generateQuestions = async () => {\n    if (!topic.trim()) {\n      addToast('Please enter a topic', 'error');\n      return;\n    }\n    setGenerating(true);\n    try {\n      // Simulate AI generation with realistic questions\n      const generatedQuestions = await simulateAIGeneration(topic, difficulty, questionCount, questionType);\n\n      // Save questions to localStorage (simulating API)\n      const existingQuestions = JSON.parse(localStorage.getItem('aiGeneratedQuestions') || '{}');\n      if (!existingQuestions[quizId]) {\n        existingQuestions[quizId] = [];\n      }\n      generatedQuestions.forEach(question => {\n        existingQuestions[quizId].push({\n          ...question,\n          id: Date.now() + Math.random(),\n          quizId: quizId\n        });\n      });\n      localStorage.setItem('aiGeneratedQuestions', JSON.stringify(existingQuestions));\n      addToast(`Generated ${questionCount} questions successfully!`, 'success');\n      onQuestionsGenerated(generatedQuestions);\n\n      // Reset form\n      setTopic('');\n      setQuestionCount(5);\n    } catch (error) {\n      addToast('Failed to generate questions. Please try again.', 'error');\n    } finally {\n      setGenerating(false);\n    }\n  };\n  const simulateAIGeneration = (topic, difficulty, count, type) => {\n    return new Promise(resolve => {\n      setTimeout(() => {\n        const questions = [];\n        for (let i = 0; i < count; i++) {\n          if (type === 'MULTIPLE_CHOICE') {\n            questions.push(generateMCQ(topic, difficulty, i + 1));\n          } else {\n            questions.push(generateTrueFalse(topic, difficulty, i + 1));\n          }\n        }\n        resolve(questions);\n      }, 2000); // Simulate API delay\n    });\n  };\n  const generateMCQ = (topic, difficulty, index) => {\n    var _templates$topicKey;\n    const templates = {\n      java: {\n        easy: [{\n          question: `What is the correct way to declare a variable in ${topic}?`,\n          options: [{\n            optionText: 'int x = 5;',\n            isCorrect: true\n          }, {\n            optionText: 'integer x = 5;',\n            isCorrect: false\n          }, {\n            optionText: 'var x = 5;',\n            isCorrect: false\n          }, {\n            optionText: 'x = 5;',\n            isCorrect: false\n          }]\n        }, {\n          question: `Which keyword is used to create a class in ${topic}?`,\n          options: [{\n            optionText: 'class',\n            isCorrect: true\n          }, {\n            optionText: 'Class',\n            isCorrect: false\n          }, {\n            optionText: 'new',\n            isCorrect: false\n          }, {\n            optionText: 'create',\n            isCorrect: false\n          }]\n        }],\n        medium: [{\n          question: `What is the output of System.out.println(\"Hello\".length()) in ${topic}?`,\n          options: [{\n            optionText: '5',\n            isCorrect: true\n          }, {\n            optionText: '4',\n            isCorrect: false\n          }, {\n            optionText: '6',\n            isCorrect: false\n          }, {\n            optionText: 'Error',\n            isCorrect: false\n          }]\n        }, {\n          question: `Which collection class allows duplicate elements in ${topic}?`,\n          options: [{\n            optionText: 'ArrayList',\n            isCorrect: true\n          }, {\n            optionText: 'HashSet',\n            isCorrect: false\n          }, {\n            optionText: 'TreeSet',\n            isCorrect: false\n          }, {\n            optionText: 'LinkedHashSet',\n            isCorrect: false\n          }]\n        }],\n        hard: [{\n          question: `What is the time complexity of HashMap get() operation in ${topic}?`,\n          options: [{\n            optionText: 'O(1) average case',\n            isCorrect: true\n          }, {\n            optionText: 'O(log n)',\n            isCorrect: false\n          }, {\n            optionText: 'O(n)',\n            isCorrect: false\n          }, {\n            optionText: 'O(nÂ²)',\n            isCorrect: false\n          }]\n        }]\n      },\n      python: {\n        easy: [{\n          question: `How do you create a list in ${topic}?`,\n          options: [{\n            optionText: 'my_list = []',\n            isCorrect: true\n          }, {\n            optionText: 'my_list = ()',\n            isCorrect: false\n          }, {\n            optionText: 'my_list = {}',\n            isCorrect: false\n          }, {\n            optionText: 'list my_list',\n            isCorrect: false\n          }]\n        }],\n        medium: [{\n          question: `What is the output of len(\"Python\") in ${topic}?`,\n          options: [{\n            optionText: '6',\n            isCorrect: true\n          }, {\n            optionText: '5',\n            isCorrect: false\n          }, {\n            optionText: '7',\n            isCorrect: false\n          }, {\n            optionText: 'Error',\n            isCorrect: false\n          }]\n        }],\n        hard: [{\n          question: `What is a decorator in ${topic}?`,\n          options: [{\n            optionText: 'A function that modifies another function',\n            isCorrect: true\n          }, {\n            optionText: 'A type of variable',\n            isCorrect: false\n          }, {\n            optionText: 'A loop construct',\n            isCorrect: false\n          }, {\n            optionText: 'An error handler',\n            isCorrect: false\n          }]\n        }]\n      }\n    };\n    const topicKey = topic.toLowerCase();\n    const difficultyQuestions = ((_templates$topicKey = templates[topicKey]) === null || _templates$topicKey === void 0 ? void 0 : _templates$topicKey[difficulty]) || templates.java[difficulty];\n    const template = difficultyQuestions[index % difficultyQuestions.length];\n    return {\n      questionText: template.question,\n      questionType: 'MULTIPLE_CHOICE',\n      options: template.options.map((opt, idx) => ({\n        ...opt,\n        id: Date.now() + idx\n      })),\n      difficulty: difficulty,\n      topic: topic\n    };\n  };\n  const generateTrueFalse = (topic, difficulty, index) => {\n    const statements = {\n      easy: [{\n        text: `${topic} is a programming language`,\n        correct: true\n      }, {\n        text: `Variables in ${topic} must be declared before use`,\n        correct: true\n      }, {\n        text: `${topic} supports object-oriented programming`,\n        correct: true\n      }],\n      medium: [{\n        text: `${topic} is compiled to bytecode`,\n        correct: topic.toLowerCase() === 'java'\n      }, {\n        text: `${topic} uses garbage collection for memory management`,\n        correct: true\n      }],\n      hard: [{\n        text: `${topic} supports multiple inheritance of classes`,\n        correct: topic.toLowerCase() === 'python'\n      }]\n    };\n    const difficultyStatements = statements[difficulty];\n    const statement = difficultyStatements[index % difficultyStatements.length];\n    return {\n      questionText: statement.text,\n      questionType: 'TRUE_FALSE',\n      options: [{\n        optionText: 'True',\n        isCorrect: statement.correct,\n        id: Date.now() + 1\n      }, {\n        optionText: 'False',\n        isCorrect: !statement.correct,\n        id: Date.now() + 2\n      }],\n      difficulty: difficulty,\n      topic: topic\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundColor: 'white',\n      borderRadius: '12px',\n      padding: '2rem',\n      marginBottom: '2rem',\n      boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)',\n      border: '2px solid #e5e7eb'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      style: {\n        fontSize: '1.5rem',\n        fontWeight: '700',\n        color: '#1f2937',\n        marginBottom: '1.5rem',\n        display: 'flex',\n        alignItems: 'center',\n        gap: '0.5rem'\n      },\n      children: \"\\uD83E\\uDD16 AI Question Generator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'grid',\n        gridTemplateColumns: 'repeat(2, 1fr)',\n        gap: '1rem',\n        marginBottom: '1.5rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            display: 'block',\n            marginBottom: '0.5rem',\n            fontWeight: '600',\n            color: '#374151'\n          },\n          children: \"Topic/Subject\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: topic,\n          onChange: e => setTopic(e.target.value),\n          placeholder: \"e.g., Java, Python, React, JavaScript\",\n          style: {\n            width: '100%',\n            padding: '0.75rem',\n            border: '1px solid #d1d5db',\n            borderRadius: '6px',\n            fontSize: '1rem'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            display: 'block',\n            marginBottom: '0.5rem',\n            fontWeight: '600',\n            color: '#374151'\n          },\n          children: \"Difficulty Level\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: difficulty,\n          onChange: e => setDifficulty(e.target.value),\n          style: {\n            width: '100%',\n            padding: '0.75rem',\n            border: '1px solid #d1d5db',\n            borderRadius: '6px',\n            fontSize: '1rem',\n            backgroundColor: 'white'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"easy\",\n            children: \"\\uD83D\\uDFE2 Easy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"medium\",\n            children: \"\\uD83D\\uDFE1 Medium\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"hard\",\n            children: \"\\uD83D\\uDD34 Hard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            display: 'block',\n            marginBottom: '0.5rem',\n            fontWeight: '600',\n            color: '#374151'\n          },\n          children: \"Number of Questions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: questionCount,\n          onChange: e => setQuestionCount(Math.max(1, Math.min(20, parseInt(e.target.value) || 1))),\n          min: \"1\",\n          max: \"20\",\n          style: {\n            width: '100%',\n            padding: '0.75rem',\n            border: '1px solid #d1d5db',\n            borderRadius: '6px',\n            fontSize: '1rem'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            display: 'block',\n            marginBottom: '0.5rem',\n            fontWeight: '600',\n            color: '#374151'\n          },\n          children: \"Question Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: questionType,\n          onChange: e => setQuestionType(e.target.value),\n          style: {\n            width: '100%',\n            padding: '0.75rem',\n            border: '1px solid #d1d5db',\n            borderRadius: '6px',\n            fontSize: '1rem',\n            backgroundColor: 'white'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"MULTIPLE_CHOICE\",\n            children: \"Multiple Choice\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"TRUE_FALSE\",\n            children: \"True/False\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: generateQuestions,\n      disabled: generating,\n      style: {\n        ...buttonStyles.primary,\n        width: '100%',\n        backgroundColor: generating ? '#9ca3af' : '#8b5cf6',\n        cursor: generating ? 'not-allowed' : 'pointer',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        gap: '0.5rem'\n      },\n      children: generating ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '20px',\n            height: '20px',\n            border: '2px solid #ffffff40',\n            borderTop: '2px solid #ffffff',\n            borderRadius: '50%',\n            animation: 'spin 1s linear infinite'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 13\n        }, this), \"Generating Questions...\"]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [\"\\u2728 Generate \", questionCount, \" Questions\"]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {\n      toasts: toasts,\n      removeToast: removeToast\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      children: `\n          @keyframes spin {\n            0% { transform: rotate(0deg); }\n            100% { transform: rotate(360deg); }\n          }\n        `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 217,\n    columnNumber: 5\n  }, this);\n};\n_s(AIQuestionGenerator, \"7iAdeHMhymu/a8dppMn+kta+QIM=\", false, function () {\n  return [useToast];\n});\n_c = AIQuestionGenerator;\nexport default AIQuestionGenerator;\nvar _c;\n$RefreshReg$(_c, \"AIQuestionGenerator\");","map":{"version":3,"names":["React","useState","buttonStyles","useToast","ToastContainer","jsxDEV","_jsxDEV","Fragment","_Fragment","AIQuestionGenerator","quizId","onQuestionsGenerated","_s","topic","setTopic","difficulty","setDifficulty","questionCount","setQuestionCount","questionType","setQuestionType","generating","setGenerating","createNewQuiz","setCreateNewQuiz","newQuizTitle","setNewQuizTitle","newQuizDescription","setNewQuizDescription","timeLimit","setTimeLimit","toasts","addToast","removeToast","generateQuestions","trim","generatedQuestions","simulateAIGeneration","existingQuestions","JSON","parse","localStorage","getItem","forEach","question","push","id","Date","now","Math","random","setItem","stringify","error","count","type","Promise","resolve","setTimeout","questions","i","generateMCQ","generateTrueFalse","index","_templates$topicKey","templates","java","easy","options","optionText","isCorrect","medium","hard","python","topicKey","toLowerCase","difficultyQuestions","template","length","questionText","map","opt","idx","statements","text","correct","difficultyStatements","statement","style","backgroundColor","borderRadius","padding","marginBottom","boxShadow","border","children","fontSize","fontWeight","color","display","alignItems","gap","fileName","_jsxFileName","lineNumber","columnNumber","gridTemplateColumns","value","onChange","e","target","placeholder","width","max","min","parseInt","onClick","disabled","primary","cursor","justifyContent","height","borderTop","animation","_c","$RefreshReg$"],"sources":["C:/Users/sanje/Downloads/PROJECTS/QuizSystem/reactapp/src/components/AIQuestionGenerator.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { buttonStyles } from './buttonStyles';\nimport { useToast, ToastContainer } from './Toast';\n\nconst AIQuestionGenerator = ({ quizId, onQuestionsGenerated }) => {\n  const [topic, setTopic] = useState('');\n  const [difficulty, setDifficulty] = useState('medium');\n  const [questionCount, setQuestionCount] = useState(5);\n  const [questionType, setQuestionType] = useState('MULTIPLE_CHOICE');\n  const [generating, setGenerating] = useState(false);\n  const [createNewQuiz, setCreateNewQuiz] = useState(true);\n  const [newQuizTitle, setNewQuizTitle] = useState('');\n  const [newQuizDescription, setNewQuizDescription] = useState('');\n  const [timeLimit, setTimeLimit] = useState(30);\n  const { toasts, addToast, removeToast } = useToast();\n\n  const generateQuestions = async () => {\n    if (!topic.trim()) {\n      addToast('Please enter a topic', 'error');\n      return;\n    }\n\n    setGenerating(true);\n    \n    try {\n      // Simulate AI generation with realistic questions\n      const generatedQuestions = await simulateAIGeneration(topic, difficulty, questionCount, questionType);\n      \n      // Save questions to localStorage (simulating API)\n      const existingQuestions = JSON.parse(localStorage.getItem('aiGeneratedQuestions') || '{}');\n      if (!existingQuestions[quizId]) {\n        existingQuestions[quizId] = [];\n      }\n      \n      generatedQuestions.forEach(question => {\n        existingQuestions[quizId].push({\n          ...question,\n          id: Date.now() + Math.random(),\n          quizId: quizId\n        });\n      });\n      \n      localStorage.setItem('aiGeneratedQuestions', JSON.stringify(existingQuestions));\n      \n      addToast(`Generated ${questionCount} questions successfully!`, 'success');\n      onQuestionsGenerated(generatedQuestions);\n      \n      // Reset form\n      setTopic('');\n      setQuestionCount(5);\n      \n    } catch (error) {\n      addToast('Failed to generate questions. Please try again.', 'error');\n    } finally {\n      setGenerating(false);\n    }\n  };\n\n  const simulateAIGeneration = (topic, difficulty, count, type) => {\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        const questions = [];\n        \n        for (let i = 0; i < count; i++) {\n          if (type === 'MULTIPLE_CHOICE') {\n            questions.push(generateMCQ(topic, difficulty, i + 1));\n          } else {\n            questions.push(generateTrueFalse(topic, difficulty, i + 1));\n          }\n        }\n        \n        resolve(questions);\n      }, 2000); // Simulate API delay\n    });\n  };\n\n  const generateMCQ = (topic, difficulty, index) => {\n    const templates = {\n      java: {\n        easy: [\n          {\n            question: `What is the correct way to declare a variable in ${topic}?`,\n            options: [\n              { optionText: 'int x = 5;', isCorrect: true },\n              { optionText: 'integer x = 5;', isCorrect: false },\n              { optionText: 'var x = 5;', isCorrect: false },\n              { optionText: 'x = 5;', isCorrect: false }\n            ]\n          },\n          {\n            question: `Which keyword is used to create a class in ${topic}?`,\n            options: [\n              { optionText: 'class', isCorrect: true },\n              { optionText: 'Class', isCorrect: false },\n              { optionText: 'new', isCorrect: false },\n              { optionText: 'create', isCorrect: false }\n            ]\n          }\n        ],\n        medium: [\n          {\n            question: `What is the output of System.out.println(\"Hello\".length()) in ${topic}?`,\n            options: [\n              { optionText: '5', isCorrect: true },\n              { optionText: '4', isCorrect: false },\n              { optionText: '6', isCorrect: false },\n              { optionText: 'Error', isCorrect: false }\n            ]\n          },\n          {\n            question: `Which collection class allows duplicate elements in ${topic}?`,\n            options: [\n              { optionText: 'ArrayList', isCorrect: true },\n              { optionText: 'HashSet', isCorrect: false },\n              { optionText: 'TreeSet', isCorrect: false },\n              { optionText: 'LinkedHashSet', isCorrect: false }\n            ]\n          }\n        ],\n        hard: [\n          {\n            question: `What is the time complexity of HashMap get() operation in ${topic}?`,\n            options: [\n              { optionText: 'O(1) average case', isCorrect: true },\n              { optionText: 'O(log n)', isCorrect: false },\n              { optionText: 'O(n)', isCorrect: false },\n              { optionText: 'O(nÂ²)', isCorrect: false }\n            ]\n          }\n        ]\n      },\n      python: {\n        easy: [\n          {\n            question: `How do you create a list in ${topic}?`,\n            options: [\n              { optionText: 'my_list = []', isCorrect: true },\n              { optionText: 'my_list = ()', isCorrect: false },\n              { optionText: 'my_list = {}', isCorrect: false },\n              { optionText: 'list my_list', isCorrect: false }\n            ]\n          }\n        ],\n        medium: [\n          {\n            question: `What is the output of len(\"Python\") in ${topic}?`,\n            options: [\n              { optionText: '6', isCorrect: true },\n              { optionText: '5', isCorrect: false },\n              { optionText: '7', isCorrect: false },\n              { optionText: 'Error', isCorrect: false }\n            ]\n          }\n        ],\n        hard: [\n          {\n            question: `What is a decorator in ${topic}?`,\n            options: [\n              { optionText: 'A function that modifies another function', isCorrect: true },\n              { optionText: 'A type of variable', isCorrect: false },\n              { optionText: 'A loop construct', isCorrect: false },\n              { optionText: 'An error handler', isCorrect: false }\n            ]\n          }\n        ]\n      }\n    };\n\n    const topicKey = topic.toLowerCase();\n    const difficultyQuestions = templates[topicKey]?.[difficulty] || templates.java[difficulty];\n    const template = difficultyQuestions[index % difficultyQuestions.length];\n    \n    return {\n      questionText: template.question,\n      questionType: 'MULTIPLE_CHOICE',\n      options: template.options.map((opt, idx) => ({\n        ...opt,\n        id: Date.now() + idx\n      })),\n      difficulty: difficulty,\n      topic: topic\n    };\n  };\n\n  const generateTrueFalse = (topic, difficulty, index) => {\n    const statements = {\n      easy: [\n        { text: `${topic} is a programming language`, correct: true },\n        { text: `Variables in ${topic} must be declared before use`, correct: true },\n        { text: `${topic} supports object-oriented programming`, correct: true }\n      ],\n      medium: [\n        { text: `${topic} is compiled to bytecode`, correct: topic.toLowerCase() === 'java' },\n        { text: `${topic} uses garbage collection for memory management`, correct: true }\n      ],\n      hard: [\n        { text: `${topic} supports multiple inheritance of classes`, correct: topic.toLowerCase() === 'python' }\n      ]\n    };\n\n    const difficultyStatements = statements[difficulty];\n    const statement = difficultyStatements[index % difficultyStatements.length];\n    \n    return {\n      questionText: statement.text,\n      questionType: 'TRUE_FALSE',\n      options: [\n        { optionText: 'True', isCorrect: statement.correct, id: Date.now() + 1 },\n        { optionText: 'False', isCorrect: !statement.correct, id: Date.now() + 2 }\n      ],\n      difficulty: difficulty,\n      topic: topic\n    };\n  };\n\n  return (\n    <div style={{\n      backgroundColor: 'white',\n      borderRadius: '12px',\n      padding: '2rem',\n      marginBottom: '2rem',\n      boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)',\n      border: '2px solid #e5e7eb'\n    }}>\n      <h3 style={{\n        fontSize: '1.5rem',\n        fontWeight: '700',\n        color: '#1f2937',\n        marginBottom: '1.5rem',\n        display: 'flex',\n        alignItems: 'center',\n        gap: '0.5rem'\n      }}>\n        ð¤ AI Question Generator\n      </h3>\n\n      <div style={{ display: 'grid', gridTemplateColumns: 'repeat(2, 1fr)', gap: '1rem', marginBottom: '1.5rem' }}>\n        <div>\n          <label style={{ display: 'block', marginBottom: '0.5rem', fontWeight: '600', color: '#374151' }}>\n            Topic/Subject\n          </label>\n          <input\n            type=\"text\"\n            value={topic}\n            onChange={(e) => setTopic(e.target.value)}\n            placeholder=\"e.g., Java, Python, React, JavaScript\"\n            style={{\n              width: '100%',\n              padding: '0.75rem',\n              border: '1px solid #d1d5db',\n              borderRadius: '6px',\n              fontSize: '1rem'\n            }}\n          />\n        </div>\n\n        <div>\n          <label style={{ display: 'block', marginBottom: '0.5rem', fontWeight: '600', color: '#374151' }}>\n            Difficulty Level\n          </label>\n          <select\n            value={difficulty}\n            onChange={(e) => setDifficulty(e.target.value)}\n            style={{\n              width: '100%',\n              padding: '0.75rem',\n              border: '1px solid #d1d5db',\n              borderRadius: '6px',\n              fontSize: '1rem',\n              backgroundColor: 'white'\n            }}\n          >\n            <option value=\"easy\">ð¢ Easy</option>\n            <option value=\"medium\">ð¡ Medium</option>\n            <option value=\"hard\">ð´ Hard</option>\n          </select>\n        </div>\n\n        <div>\n          <label style={{ display: 'block', marginBottom: '0.5rem', fontWeight: '600', color: '#374151' }}>\n            Number of Questions\n          </label>\n          <input\n            type=\"number\"\n            value={questionCount}\n            onChange={(e) => setQuestionCount(Math.max(1, Math.min(20, parseInt(e.target.value) || 1)))}\n            min=\"1\"\n            max=\"20\"\n            style={{\n              width: '100%',\n              padding: '0.75rem',\n              border: '1px solid #d1d5db',\n              borderRadius: '6px',\n              fontSize: '1rem'\n            }}\n          />\n        </div>\n\n        <div>\n          <label style={{ display: 'block', marginBottom: '0.5rem', fontWeight: '600', color: '#374151' }}>\n            Question Type\n          </label>\n          <select\n            value={questionType}\n            onChange={(e) => setQuestionType(e.target.value)}\n            style={{\n              width: '100%',\n              padding: '0.75rem',\n              border: '1px solid #d1d5db',\n              borderRadius: '6px',\n              fontSize: '1rem',\n              backgroundColor: 'white'\n            }}\n          >\n            <option value=\"MULTIPLE_CHOICE\">Multiple Choice</option>\n            <option value=\"TRUE_FALSE\">True/False</option>\n          </select>\n        </div>\n      </div>\n\n      <button\n        onClick={generateQuestions}\n        disabled={generating}\n        style={{\n          ...buttonStyles.primary,\n          width: '100%',\n          backgroundColor: generating ? '#9ca3af' : '#8b5cf6',\n          cursor: generating ? 'not-allowed' : 'pointer',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          gap: '0.5rem'\n        }}\n      >\n        {generating ? (\n          <>\n            <div style={{\n              width: '20px',\n              height: '20px',\n              border: '2px solid #ffffff40',\n              borderTop: '2px solid #ffffff',\n              borderRadius: '50%',\n              animation: 'spin 1s linear infinite'\n            }} />\n            Generating Questions...\n          </>\n        ) : (\n          <>\n            â¨ Generate {questionCount} Questions\n          </>\n        )}\n      </button>\n\n      <ToastContainer toasts={toasts} removeToast={removeToast} />\n      \n      <style>\n        {`\n          @keyframes spin {\n            0% { transform: rotate(0deg); }\n            100% { transform: rotate(360deg); }\n          }\n        `}\n      </style>\n    </div>\n  );\n};\n\nexport default AIQuestionGenerator;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}