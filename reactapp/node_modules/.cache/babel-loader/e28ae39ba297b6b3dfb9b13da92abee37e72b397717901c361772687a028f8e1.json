{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sanje\\\\Downloads\\\\PROJECTS\\\\QuizSystem\\\\reactapp\\\\src\\\\components\\\\QuestionBank.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './QuestionBank.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst QuestionBank = () => {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [filter, setFilter] = useState('all');\n  const [editingQuestion, setEditingQuestion] = useState(null);\n  const [editForm, setEditForm] = useState({});\n  useEffect(() => {\n    loadQuestions();\n  }, []);\n  const loadQuestions = async () => {\n    const allQuestions = [];\n    const deletedQuestions = JSON.parse(localStorage.getItem('deletedQuestions') || '[]');\n    const editedQuestions = JSON.parse(localStorage.getItem('editedQuestions') || '{}');\n    console.log('Edited questions from localStorage:', editedQuestions);\n\n    // Load API questions\n    try {\n      const response = await fetch('http://localhost:8080/api/quizzes');\n      const apiQuizzes = await response.json();\n      for (const quiz of apiQuizzes) {\n        try {\n          const qResponse = await fetch(`http://localhost:8080/api/quizzes/${quiz.id}/questions`);\n          const questions = await qResponse.json();\n          questions.forEach(q => {\n            // Skip deleted questions\n            if (!deletedQuestions.includes(q.id)) {\n              // Use edited version if available, otherwise use original\n              const questionToAdd = editedQuestions[q.id] ? {\n                ...editedQuestions[q.id],\n                source: 'edited'\n              } : {\n                ...q,\n                quizId: quiz.id,\n                quizTitle: quiz.title,\n                source: 'api'\n              };\n              allQuestions.push(questionToAdd);\n            }\n          });\n        } catch (err) {\n          console.log('Failed to fetch questions for quiz:', quiz.id);\n        }\n      }\n      console.log('Final questions (API + edits):', allQuestions);\n    } catch (err) {\n      console.log('API failed:', err);\n    }\n    setQuestions(allQuestions);\n    setLoading(false);\n  };\n  const deleteQuestion = questionId => {\n    if (!window.confirm('Are you sure you want to delete this question?')) return;\n\n    // Mark as deleted\n    const deletedQuestions = JSON.parse(localStorage.getItem('deletedQuestions') || '[]');\n    if (!deletedQuestions.includes(questionId)) {\n      deletedQuestions.push(questionId);\n      localStorage.setItem('deletedQuestions', JSON.stringify(deletedQuestions));\n    }\n\n    // Remove from edited questions if it exists\n    const editedQuestions = JSON.parse(localStorage.getItem('editedQuestions') || '{}');\n    if (editedQuestions[questionId]) {\n      delete editedQuestions[questionId];\n      localStorage.setItem('editedQuestions', JSON.stringify(editedQuestions));\n    }\n    console.log('Question deleted and marked in localStorage');\n    setQuestions(questions.filter(q => q.id !== questionId));\n\n    // Trigger dashboard refresh\n    window.dispatchEvent(new Event('questionsUpdated'));\n  };\n  const startEdit = question => {\n    setEditingQuestion(question.id);\n    setEditForm({\n      questionText: question.questionText,\n      options: question.options.map(opt => ({\n        ...opt\n      }))\n    });\n  };\n  const saveEdit = questionId => {\n    const question = questions.find(q => q.id === questionId);\n    const updatedQuestion = {\n      id: question.id,\n      questionText: editForm.questionText,\n      questionType: question.questionType,\n      options: editForm.options,\n      quizId: question.quizId,\n      quizTitle: question.quizTitle\n    };\n    console.log('Saving edited question:', updatedQuestion);\n\n    // Save edited questions separately for easy retrieval\n    const editedQuestions = JSON.parse(localStorage.getItem('editedQuestions') || '{}');\n    editedQuestions[questionId] = updatedQuestion;\n    localStorage.setItem('editedQuestions', JSON.stringify(editedQuestions));\n    console.log('Saved edited question to localStorage:', editedQuestions);\n\n    // Update the questions state immediately\n    setQuestions(questions.map(q => q.id === questionId ? {\n      ...updatedQuestion,\n      source: 'edited'\n    } : q));\n    setEditingQuestion(null);\n    setEditForm({});\n\n    // Trigger dashboard refresh\n    window.dispatchEvent(new Event('questionsUpdated'));\n  };\n  const updateEditForm = (field, value) => {\n    setEditForm(prev => ({\n      ...prev,\n      [field]: value\n    }));\n  };\n  const updateOption = (optionIndex, field, value) => {\n    const updatedOptions = [...editForm.options];\n    updatedOptions[optionIndex] = {\n      ...updatedOptions[optionIndex],\n      [field]: value\n    };\n    if (field === 'isCorrect' && value) {\n      updatedOptions.forEach((opt, idx) => {\n        if (idx !== optionIndex) opt.isCorrect = false;\n      });\n    }\n    setEditForm(prev => ({\n      ...prev,\n      options: updatedOptions\n    }));\n  };\n  const addOption = () => {\n    const newOption = {\n      optionText: '',\n      isCorrect: false\n    };\n    setEditForm(prev => ({\n      ...prev,\n      options: [...prev.options, newOption]\n    }));\n  };\n  const removeOption = optionIndex => {\n    if (editForm.options.length > 2) {\n      const updatedOptions = editForm.options.filter((_, index) => index !== optionIndex);\n      setEditForm(prev => ({\n        ...prev,\n        options: updatedOptions\n      }));\n    }\n  };\n  const filteredQuestions = questions.filter(q => {\n    if (filter === 'all') return true;\n    return q.questionType === filter;\n  });\n  const questionsByQuiz = filteredQuestions.reduce((acc, question) => {\n    const quizKey = question.quizTitle || `Quiz ID: ${question.quizId}`;\n    if (!acc[quizKey]) {\n      acc[quizKey] = [];\n    }\n    acc[quizKey].push(question);\n    return acc;\n  }, {});\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading question bank...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 169,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '100vw',\n      minHeight: '100vh',\n      margin: 0,\n      padding: '2rem',\n      backgroundColor: '#f8fafc',\n      boxSizing: 'border-box'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        fontSize: '2rem',\n        fontWeight: '700',\n        color: '#1f2937',\n        margin: '0 0 2rem 0',\n        textAlign: 'center'\n      },\n      children: \"Question Bank Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '2rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          marginRight: '1rem',\n          fontWeight: '500'\n        },\n        children: \"Filter by type:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: filter,\n        onChange: e => setFilter(e.target.value),\n        style: {\n          padding: '0.5rem',\n          borderRadius: '6px',\n          border: '1px solid #d1d5db'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"all\",\n          children: \"All Types\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"MULTIPLE_CHOICE\",\n          children: \"Multiple Choice\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"TRUE_FALSE\",\n          children: \"True/False\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this), Object.keys(questionsByQuiz).length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center',\n        padding: '3rem',\n        color: '#6b7280'\n      },\n      children: \"No questions found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: Object.entries(questionsByQuiz).map(([quizTitle, quizQuestions]) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '3rem'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            fontSize: '1.5rem',\n            fontWeight: '600',\n            color: '#1f2937',\n            margin: '0 0 1.5rem 0',\n            textAlign: 'left'\n          },\n          children: quizTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'grid',\n            gridTemplateColumns: 'repeat(3, 1fr)',\n            gap: '1.5rem'\n          },\n          children: quizQuestions.map(question => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              backgroundColor: 'white',\n              border: '1px solid #e5e7eb',\n              borderRadius: '12px',\n              padding: '1.5rem',\n              boxShadow: '0 2px 4px rgba(0, 0, 0, 0.1)'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                backgroundColor: '#dbeafe',\n                color: '#1e40af',\n                padding: '0.25rem 0.75rem',\n                borderRadius: '6px',\n                fontSize: '0.75rem',\n                fontWeight: '500',\n                display: 'inline-block',\n                marginBottom: '1rem',\n                marginTop: '2rem'\n              },\n              children: question.questionType\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 21\n            }, this), editingQuestion === question.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  marginBottom: '1rem'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  style: {\n                    display: 'block',\n                    marginBottom: '0.5rem',\n                    fontWeight: '500'\n                  },\n                  children: \"Question Text:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 255,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                  value: editForm.questionText,\n                  onChange: e => updateEditForm('questionText', e.target.value),\n                  rows: 3,\n                  style: {\n                    width: '100%',\n                    padding: '0.5rem',\n                    borderRadius: '6px',\n                    border: '1px solid #d1d5db'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 256,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  marginBottom: '1rem'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  style: {\n                    display: 'block',\n                    marginBottom: '0.5rem',\n                    fontWeight: '500'\n                  },\n                  children: \"Options:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 265,\n                  columnNumber: 27\n                }, this), editForm.options && editForm.options.map((option, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    marginBottom: '0.5rem',\n                    display: 'flex',\n                    gap: '0.5rem',\n                    alignItems: 'center'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    value: option.optionText,\n                    onChange: e => updateOption(index, 'optionText', e.target.value),\n                    placeholder: `Option ${index + 1}`,\n                    style: {\n                      flex: 1,\n                      padding: '0.5rem',\n                      borderRadius: '6px',\n                      border: '1px solid #d1d5db'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 268,\n                    columnNumber: 31\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    style: {\n                      display: 'flex',\n                      alignItems: 'center',\n                      gap: '0.25rem'\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"radio\",\n                      name: `correct-${question.id}`,\n                      checked: option.isCorrect,\n                      onChange: () => updateOption(index, 'isCorrect', true)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 276,\n                      columnNumber: 33\n                    }, this), \"Correct\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 275,\n                    columnNumber: 31\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 267,\n                  columnNumber: 29\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: 'flex',\n                  gap: '0.5rem'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => saveEdit(question.id),\n                  style: {\n                    backgroundColor: '#10b981',\n                    color: 'white',\n                    border: 'none',\n                    borderRadius: '6px',\n                    padding: '0.5rem 1rem',\n                    cursor: 'pointer'\n                  },\n                  children: \"Save\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 289,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => setEditingQuestion(null),\n                  style: {\n                    backgroundColor: '#6b7280',\n                    color: 'white',\n                    border: 'none',\n                    borderRadius: '6px',\n                    padding: '0.5rem 1rem',\n                    cursor: 'pointer'\n                  },\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 302,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 23\n            }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  color: '#374151',\n                  fontSize: '1rem',\n                  fontWeight: '500',\n                  margin: '0 0 1rem 0'\n                },\n                children: question.questionText\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  marginBottom: '1rem'\n                },\n                children: question.options && question.options.map((option, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    padding: '0.5rem',\n                    backgroundColor: option.isCorrect ? '#dcfce7' : '#f9fafb',\n                    borderRadius: '6px',\n                    marginBottom: '0.25rem',\n                    fontSize: '0.875rem'\n                  },\n                  children: [option.optionText, \" \", option.isCorrect && '✓']\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 330,\n                  columnNumber: 29\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 328,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: 'flex',\n                  gap: '0.5rem'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => startEdit(question),\n                  style: {\n                    backgroundColor: '#3b82f6',\n                    color: 'white',\n                    border: 'none',\n                    borderRadius: '6px',\n                    padding: '0.5rem 1rem',\n                    fontSize: '0.875rem',\n                    cursor: 'pointer'\n                  },\n                  children: \"Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 343,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => deleteQuestion(question.id),\n                  style: {\n                    backgroundColor: '#ef4444',\n                    color: 'white',\n                    border: 'none',\n                    borderRadius: '6px',\n                    padding: '0.5rem 1rem',\n                    fontSize: '0.875rem',\n                    cursor: 'pointer'\n                  },\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 357,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 342,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true)]\n          }, question.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 15\n        }, this)]\n      }, quizTitle, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 172,\n    columnNumber: 5\n  }, this);\n};\n_s(QuestionBank, \"oUB1ijaXERtUaX/ebBDKN7OfuVE=\");\n_c = QuestionBank;\nexport default QuestionBank;\nvar _c;\n$RefreshReg$(_c, \"QuestionBank\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","QuestionBank","_s","questions","setQuestions","loading","setLoading","filter","setFilter","editingQuestion","setEditingQuestion","editForm","setEditForm","loadQuestions","allQuestions","deletedQuestions","JSON","parse","localStorage","getItem","editedQuestions","console","log","response","fetch","apiQuizzes","json","quiz","qResponse","id","forEach","q","includes","questionToAdd","source","quizId","quizTitle","title","push","err","deleteQuestion","questionId","window","confirm","setItem","stringify","dispatchEvent","Event","startEdit","question","questionText","options","map","opt","saveEdit","find","updatedQuestion","questionType","updateEditForm","field","value","prev","updateOption","optionIndex","updatedOptions","idx","isCorrect","addOption","newOption","optionText","removeOption","length","_","index","filteredQuestions","questionsByQuiz","reduce","acc","quizKey","children","fileName","_jsxFileName","lineNumber","columnNumber","style","width","minHeight","margin","padding","backgroundColor","boxSizing","fontSize","fontWeight","color","textAlign","marginBottom","marginRight","onChange","e","target","borderRadius","border","Object","keys","entries","quizQuestions","display","gridTemplateColumns","gap","boxShadow","marginTop","rows","option","alignItems","type","placeholder","flex","name","checked","onClick","cursor","_c","$RefreshReg$"],"sources":["C:/Users/sanje/Downloads/PROJECTS/QuizSystem/reactapp/src/components/QuestionBank.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './QuestionBank.css';\n\nconst QuestionBank = () => {\n  const [questions, setQuestions] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [filter, setFilter] = useState('all');\n  const [editingQuestion, setEditingQuestion] = useState(null);\n  const [editForm, setEditForm] = useState({});\n\n  useEffect(() => {\n    loadQuestions();\n  }, []);\n\n  const loadQuestions = async () => {\n    const allQuestions = [];\n    const deletedQuestions = JSON.parse(localStorage.getItem('deletedQuestions') || '[]');\n    const editedQuestions = JSON.parse(localStorage.getItem('editedQuestions') || '{}');\n    \n    console.log('Edited questions from localStorage:', editedQuestions);\n    \n    // Load API questions\n    try {\n      const response = await fetch('http://localhost:8080/api/quizzes');\n      const apiQuizzes = await response.json();\n      \n      for (const quiz of apiQuizzes) {\n        try {\n          const qResponse = await fetch(`http://localhost:8080/api/quizzes/${quiz.id}/questions`);\n          const questions = await qResponse.json();\n          questions.forEach(q => {\n            // Skip deleted questions\n            if (!deletedQuestions.includes(q.id)) {\n              // Use edited version if available, otherwise use original\n              const questionToAdd = editedQuestions[q.id] ? {\n                ...editedQuestions[q.id],\n                source: 'edited'\n              } : {\n                ...q,\n                quizId: quiz.id,\n                quizTitle: quiz.title,\n                source: 'api'\n              };\n              \n              allQuestions.push(questionToAdd);\n            }\n          });\n        } catch (err) {\n          console.log('Failed to fetch questions for quiz:', quiz.id);\n        }\n      }\n      console.log('Final questions (API + edits):', allQuestions);\n    } catch (err) {\n      console.log('API failed:', err);\n    }\n    \n    setQuestions(allQuestions);\n    setLoading(false);\n  };\n\n  const deleteQuestion = (questionId) => {\n    if (!window.confirm('Are you sure you want to delete this question?')) return;\n    \n    // Mark as deleted\n    const deletedQuestions = JSON.parse(localStorage.getItem('deletedQuestions') || '[]');\n    if (!deletedQuestions.includes(questionId)) {\n      deletedQuestions.push(questionId);\n      localStorage.setItem('deletedQuestions', JSON.stringify(deletedQuestions));\n    }\n    \n    // Remove from edited questions if it exists\n    const editedQuestions = JSON.parse(localStorage.getItem('editedQuestions') || '{}');\n    if (editedQuestions[questionId]) {\n      delete editedQuestions[questionId];\n      localStorage.setItem('editedQuestions', JSON.stringify(editedQuestions));\n    }\n    \n    console.log('Question deleted and marked in localStorage');\n    \n    setQuestions(questions.filter(q => q.id !== questionId));\n    \n    // Trigger dashboard refresh\n    window.dispatchEvent(new Event('questionsUpdated'));\n  };\n\n  const startEdit = (question) => {\n    setEditingQuestion(question.id);\n    setEditForm({\n      questionText: question.questionText,\n      options: question.options.map(opt => ({ ...opt }))\n    });\n  };\n\n  const saveEdit = (questionId) => {\n    const question = questions.find(q => q.id === questionId);\n    const updatedQuestion = {\n      id: question.id,\n      questionText: editForm.questionText,\n      questionType: question.questionType,\n      options: editForm.options,\n      quizId: question.quizId,\n      quizTitle: question.quizTitle\n    };\n    \n    console.log('Saving edited question:', updatedQuestion);\n    \n    // Save edited questions separately for easy retrieval\n    const editedQuestions = JSON.parse(localStorage.getItem('editedQuestions') || '{}');\n    editedQuestions[questionId] = updatedQuestion;\n    localStorage.setItem('editedQuestions', JSON.stringify(editedQuestions));\n    \n    console.log('Saved edited question to localStorage:', editedQuestions);\n    \n    // Update the questions state immediately\n    setQuestions(questions.map(q => q.id === questionId ? { ...updatedQuestion, source: 'edited' } : q));\n    setEditingQuestion(null);\n    setEditForm({});\n    \n    // Trigger dashboard refresh\n    window.dispatchEvent(new Event('questionsUpdated'));\n  };\n\n  const updateEditForm = (field, value) => {\n    setEditForm(prev => ({ ...prev, [field]: value }));\n  };\n\n  const updateOption = (optionIndex, field, value) => {\n    const updatedOptions = [...editForm.options];\n    updatedOptions[optionIndex] = { ...updatedOptions[optionIndex], [field]: value };\n    \n    if (field === 'isCorrect' && value) {\n      updatedOptions.forEach((opt, idx) => {\n        if (idx !== optionIndex) opt.isCorrect = false;\n      });\n    }\n    \n    setEditForm(prev => ({ ...prev, options: updatedOptions }));\n  };\n\n  const addOption = () => {\n    const newOption = { optionText: '', isCorrect: false };\n    setEditForm(prev => ({ \n      ...prev, \n      options: [...prev.options, newOption] \n    }));\n  };\n\n  const removeOption = (optionIndex) => {\n    if (editForm.options.length > 2) {\n      const updatedOptions = editForm.options.filter((_, index) => index !== optionIndex);\n      setEditForm(prev => ({ ...prev, options: updatedOptions }));\n    }\n  };\n\n  const filteredQuestions = questions.filter(q => {\n    if (filter === 'all') return true;\n    return q.questionType === filter;\n  });\n\n  const questionsByQuiz = filteredQuestions.reduce((acc, question) => {\n    const quizKey = question.quizTitle || `Quiz ID: ${question.quizId}`;\n    if (!acc[quizKey]) {\n      acc[quizKey] = [];\n    }\n    acc[quizKey].push(question);\n    return acc;\n  }, {});\n\n  if (loading) return <div>Loading question bank...</div>;\n\n  return (\n    <div style={{ \n      width: '100vw', \n      minHeight: '100vh', \n      margin: 0, \n      padding: '2rem',\n      backgroundColor: '#f8fafc',\n      boxSizing: 'border-box'\n    }}>\n      <h2 style={{ \n        fontSize: '2rem', \n        fontWeight: '700', \n        color: '#1f2937', \n        margin: '0 0 2rem 0',\n        textAlign: 'center'\n      }}>\n        Question Bank Management\n      </h2>\n      \n      <div style={{ marginBottom: '2rem' }}>\n        <label style={{ marginRight: '1rem', fontWeight: '500' }}>Filter by type:</label>\n        <select \n          value={filter} \n          onChange={(e) => setFilter(e.target.value)}\n          style={{ \n            padding: '0.5rem', \n            borderRadius: '6px', \n            border: '1px solid #d1d5db' \n          }}\n        >\n          <option value=\"all\">All Types</option>\n          <option value=\"MULTIPLE_CHOICE\">Multiple Choice</option>\n          <option value=\"TRUE_FALSE\">True/False</option>\n        </select>\n      </div>\n\n      {Object.keys(questionsByQuiz).length === 0 ? (\n        <div style={{ textAlign: 'center', padding: '3rem', color: '#6b7280' }}>\n          No questions found.\n        </div>\n      ) : (\n        <div>\n          {Object.entries(questionsByQuiz).map(([quizTitle, quizQuestions]) => (\n            <div key={quizTitle} style={{ marginBottom: '3rem' }}>\n              <h3 style={{ \n                fontSize: '1.5rem', \n                fontWeight: '600', \n                color: '#1f2937', \n                margin: '0 0 1.5rem 0',\n                textAlign: 'left'\n              }}>\n                {quizTitle}\n              </h3>\n              \n              <div style={{ \n                display: 'grid', \n                gridTemplateColumns: 'repeat(3, 1fr)', \n                gap: '1.5rem' \n              }}>\n                {quizQuestions.map(question => (\n                  <div key={question.id} style={{ \n                    backgroundColor: 'white', \n                    border: '1px solid #e5e7eb', \n                    borderRadius: '12px', \n                    padding: '1.5rem',\n                    boxShadow: '0 2px 4px rgba(0, 0, 0, 0.1)'\n                  }}>\n                    <div style={{ \n                      backgroundColor: '#dbeafe', \n                      color: '#1e40af', \n                      padding: '0.25rem 0.75rem', \n                      borderRadius: '6px', \n                      fontSize: '0.75rem', \n                      fontWeight: '500', \n                      display: 'inline-block', \n                      marginBottom: '1rem',\n                      marginTop: '2rem'\n                    }}>\n                      {question.questionType}\n                    </div>\n                    \n                    {editingQuestion === question.id ? (\n                      <div>\n                        <div style={{ marginBottom: '1rem' }}>\n                          <label style={{ display: 'block', marginBottom: '0.5rem', fontWeight: '500' }}>Question Text:</label>\n                          <textarea\n                            value={editForm.questionText}\n                            onChange={(e) => updateEditForm('questionText', e.target.value)}\n                            rows={3}\n                            style={{ width: '100%', padding: '0.5rem', borderRadius: '6px', border: '1px solid #d1d5db' }}\n                          />\n                        </div>\n                        \n                        <div style={{ marginBottom: '1rem' }}>\n                          <label style={{ display: 'block', marginBottom: '0.5rem', fontWeight: '500' }}>Options:</label>\n                          {editForm.options && editForm.options.map((option, index) => (\n                            <div key={index} style={{ marginBottom: '0.5rem', display: 'flex', gap: '0.5rem', alignItems: 'center' }}>\n                              <input\n                                type=\"text\"\n                                value={option.optionText}\n                                onChange={(e) => updateOption(index, 'optionText', e.target.value)}\n                                placeholder={`Option ${index + 1}`}\n                                style={{ flex: 1, padding: '0.5rem', borderRadius: '6px', border: '1px solid #d1d5db' }}\n                              />\n                              <label style={{ display: 'flex', alignItems: 'center', gap: '0.25rem' }}>\n                                <input\n                                  type=\"radio\"\n                                  name={`correct-${question.id}`}\n                                  checked={option.isCorrect}\n                                  onChange={() => updateOption(index, 'isCorrect', true)}\n                                />\n                                Correct\n                              </label>\n                            </div>\n                          ))}\n                        </div>\n                        \n                        <div style={{ display: 'flex', gap: '0.5rem' }}>\n                          <button \n                            onClick={() => saveEdit(question.id)}\n                            style={{ \n                              backgroundColor: '#10b981', \n                              color: 'white', \n                              border: 'none', \n                              borderRadius: '6px', \n                              padding: '0.5rem 1rem', \n                              cursor: 'pointer' \n                            }}\n                          >\n                            Save\n                          </button>\n                          <button \n                            onClick={() => setEditingQuestion(null)}\n                            style={{ \n                              backgroundColor: '#6b7280', \n                              color: 'white', \n                              border: 'none', \n                              borderRadius: '6px', \n                              padding: '0.5rem 1rem', \n                              cursor: 'pointer' \n                            }}\n                          >\n                            Cancel\n                          </button>\n                        </div>\n                      </div>\n                    ) : (\n                      <>\n                        <p style={{ \n                          color: '#374151', \n                          fontSize: '1rem', \n                          fontWeight: '500', \n                          margin: '0 0 1rem 0' \n                        }}>\n                          {question.questionText}\n                        </p>\n                        \n                        <div style={{ marginBottom: '1rem' }}>\n                          {question.options && question.options.map((option, index) => (\n                            <div key={index} style={{ \n                              padding: '0.5rem', \n                              backgroundColor: option.isCorrect ? '#dcfce7' : '#f9fafb', \n                              borderRadius: '6px', \n                              marginBottom: '0.25rem',\n                              fontSize: '0.875rem'\n                            }}>\n                              {option.optionText} {option.isCorrect && '✓'}\n                            </div>\n                          ))}\n                        </div>\n                        \n                        <div style={{ display: 'flex', gap: '0.5rem' }}>\n                          <button \n                            onClick={() => startEdit(question)}\n                            style={{ \n                              backgroundColor: '#3b82f6', \n                              color: 'white', \n                              border: 'none', \n                              borderRadius: '6px', \n                              padding: '0.5rem 1rem', \n                              fontSize: '0.875rem', \n                              cursor: 'pointer' \n                            }}\n                          >\n                            Edit\n                          </button>\n                          <button \n                            onClick={() => deleteQuestion(question.id)}\n                            style={{ \n                              backgroundColor: '#ef4444', \n                              color: 'white', \n                              border: 'none', \n                              borderRadius: '6px', \n                              padding: '0.5rem 1rem', \n                              fontSize: '0.875rem', \n                              cursor: 'pointer' \n                            }}\n                          >\n                            Delete\n                          </button>\n                        </div>\n                      </>\n                    )}\n                  </div>\n                ))}\n              </div>\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default QuestionBank;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}