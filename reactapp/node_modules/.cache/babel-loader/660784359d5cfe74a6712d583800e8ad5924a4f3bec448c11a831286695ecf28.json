{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sanje\\\\Downloads\\\\PROJECTS\\\\QuizSystem\\\\reactapp\\\\src\\\\components\\\\QuestionBank.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './QuestionBank.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst QuestionBank = () => {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [filter, setFilter] = useState('all');\n  const [editingQuestion, setEditingQuestion] = useState(null);\n  const [editForm, setEditForm] = useState({});\n  useEffect(() => {\n    loadQuestions();\n  }, []);\n  const loadQuestions = async () => {\n    const quizzes = JSON.parse(localStorage.getItem('quizzes') || '[]');\n    console.log('localStorage quizzes:', quizzes);\n    const allQuestions = [];\n    quizzes.forEach(quiz => {\n      if (quiz.questions) {\n        quiz.questions.forEach(q => {\n          allQuestions.push({\n            ...q,\n            quizId: quiz.id,\n            quizTitle: quiz.title\n          });\n        });\n      }\n    });\n    console.log('Questions from localStorage:', allQuestions);\n\n    // If no localStorage questions, try API\n    if (allQuestions.length === 0) {\n      try {\n        const response = await fetch('http://localhost:8080/api/quizzes');\n        const apiQuizzes = await response.json();\n        const deletedQuestions = JSON.parse(localStorage.getItem('deletedQuestions') || '[]');\n        for (const quiz of apiQuizzes) {\n          try {\n            const qResponse = await fetch(`http://localhost:8080/api/quizzes/${quiz.id}/questions`);\n            const questions = await qResponse.json();\n            questions.forEach(q => {\n              // Skip deleted questions\n              if (!deletedQuestions.includes(q.id)) {\n                allQuestions.push({\n                  ...q,\n                  quizId: quiz.id,\n                  quizTitle: quiz.title\n                });\n              }\n            });\n          } catch (err) {\n            console.log('Failed to fetch questions for quiz:', quiz.id);\n          }\n        }\n        console.log('Questions from API:', allQuestions);\n      } catch (err) {\n        console.log('API failed:', err);\n      }\n    }\n    setQuestions(allQuestions);\n    setLoading(false);\n  };\n  const deleteQuestion = questionId => {\n    if (!window.confirm('Are you sure you want to delete this question?')) return;\n    const question = questions.find(q => q.id === questionId);\n    const quizzes = JSON.parse(localStorage.getItem('quizzes') || '[]');\n    let quiz = quizzes.find(q => q.id === question.quizId);\n\n    // Create quiz in localStorage if it doesn't exist\n    if (!quiz) {\n      quiz = {\n        id: question.quizId,\n        title: question.quizTitle,\n        questions: []\n      };\n      quizzes.push(quiz);\n    }\n\n    // Ensure questions array exists\n    if (!quiz.questions) {\n      quiz.questions = [];\n    }\n\n    // Remove question from localStorage\n    quiz.questions = quiz.questions.filter(q => q.id !== questionId);\n\n    // Mark as deleted for API-loaded questions\n    const deletedQuestions = JSON.parse(localStorage.getItem('deletedQuestions') || '[]');\n    if (!deletedQuestions.includes(questionId)) {\n      deletedQuestions.push(questionId);\n      localStorage.setItem('deletedQuestions', JSON.stringify(deletedQuestions));\n    }\n    localStorage.setItem('quizzes', JSON.stringify(quizzes));\n    setQuestions(questions.filter(q => q.id !== questionId));\n\n    // Trigger dashboard refresh\n    window.dispatchEvent(new Event('questionsUpdated'));\n  };\n  const startEdit = question => {\n    setEditingQuestion(question.id);\n    setEditForm({\n      questionText: question.questionText,\n      options: question.options.map(opt => ({\n        ...opt\n      }))\n    });\n  };\n  const saveEdit = questionId => {\n    const question = questions.find(q => q.id === questionId);\n    const updatedQuestion = {\n      id: question.id,\n      questionText: editForm.questionText,\n      questionType: question.questionType,\n      options: editForm.options,\n      quizId: question.quizId,\n      quizTitle: question.quizTitle\n    };\n    console.log('Saving edited question:', updatedQuestion);\n    const quizzes = JSON.parse(localStorage.getItem('quizzes') || '[]');\n    let quiz = quizzes.find(q => q.id === question.quizId);\n\n    // Create quiz in localStorage if it doesn't exist\n    if (!quiz) {\n      quiz = {\n        id: question.quizId,\n        title: question.quizTitle,\n        questions: []\n      };\n      quizzes.push(quiz);\n    }\n\n    // Ensure questions array exists\n    if (!quiz.questions) {\n      quiz.questions = [];\n    }\n\n    // Update or add question\n    const questionIndex = quiz.questions.findIndex(q => q.id === questionId);\n    if (questionIndex !== -1) {\n      quiz.questions[questionIndex] = updatedQuestion;\n      console.log('Updated existing question at index:', questionIndex);\n    } else {\n      quiz.questions.push(updatedQuestion);\n      console.log('Added new question to localStorage');\n    }\n    localStorage.setItem('quizzes', JSON.stringify(quizzes));\n    console.log('Saved to localStorage:', JSON.parse(localStorage.getItem('quizzes')));\n    setQuestions(questions.map(q => q.id === questionId ? updatedQuestion : q));\n    setEditingQuestion(null);\n    setEditForm({});\n\n    // Trigger dashboard refresh\n    window.dispatchEvent(new Event('questionsUpdated'));\n  };\n  const updateEditForm = (field, value) => {\n    setEditForm(prev => ({\n      ...prev,\n      [field]: value\n    }));\n  };\n  const updateOption = (optionIndex, field, value) => {\n    const updatedOptions = [...editForm.options];\n    updatedOptions[optionIndex] = {\n      ...updatedOptions[optionIndex],\n      [field]: value\n    };\n    if (field === 'isCorrect' && value) {\n      updatedOptions.forEach((opt, idx) => {\n        if (idx !== optionIndex) opt.isCorrect = false;\n      });\n    }\n    setEditForm(prev => ({\n      ...prev,\n      options: updatedOptions\n    }));\n  };\n  const filteredQuestions = questions.filter(q => {\n    if (filter === 'all') return true;\n    return q.questionType === filter;\n  });\n  const questionsByQuiz = filteredQuestions.reduce((acc, question) => {\n    const quizKey = question.quizTitle || `Quiz ID: ${question.quizId}`;\n    if (!acc[quizKey]) {\n      acc[quizKey] = [];\n    }\n    acc[quizKey].push(question);\n    return acc;\n  }, {});\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading question bank...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 199,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '100vw',\n      minHeight: '100vh',\n      margin: 0,\n      padding: '2rem',\n      backgroundColor: '#f8fafc',\n      boxSizing: 'border-box'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        fontSize: '2rem',\n        fontWeight: '700',\n        color: '#1f2937',\n        margin: '0 0 2rem 0',\n        textAlign: 'center'\n      },\n      children: \"Question Bank Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '2rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          marginRight: '1rem',\n          fontWeight: '500'\n        },\n        children: \"Filter by type:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: filter,\n        onChange: e => setFilter(e.target.value),\n        style: {\n          padding: '0.5rem',\n          borderRadius: '6px',\n          border: '1px solid #d1d5db'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"all\",\n          children: \"All Types\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"MULTIPLE_CHOICE\",\n          children: \"Multiple Choice\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"TRUE_FALSE\",\n          children: \"True/False\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this), Object.keys(questionsByQuiz).length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center',\n        padding: '3rem',\n        color: '#6b7280'\n      },\n      children: \"No questions found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: Object.entries(questionsByQuiz).map(([quizTitle, quizQuestions]) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '3rem'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            fontSize: '1.5rem',\n            fontWeight: '600',\n            color: '#1f2937',\n            margin: '0 0 1.5rem 0',\n            textAlign: 'left'\n          },\n          children: quizTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'grid',\n            gridTemplateColumns: 'repeat(3, 1fr)',\n            gap: '1.5rem'\n          },\n          children: quizQuestions.map(question => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              backgroundColor: 'white',\n              border: '1px solid #e5e7eb',\n              borderRadius: '12px',\n              padding: '1.5rem',\n              boxShadow: '0 2px 4px rgba(0, 0, 0, 0.1)'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                backgroundColor: '#dbeafe',\n                color: '#1e40af',\n                padding: '0.25rem 0.75rem',\n                borderRadius: '6px',\n                fontSize: '0.75rem',\n                fontWeight: '500',\n                display: 'inline-block',\n                marginBottom: '1rem',\n                marginTop: '2rem'\n              },\n              children: question.questionType\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 21\n            }, this), editingQuestion === question.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  marginBottom: '1rem'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  style: {\n                    display: 'block',\n                    marginBottom: '0.5rem',\n                    fontWeight: '500'\n                  },\n                  children: \"Question Text:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 285,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                  value: editForm.questionText,\n                  onChange: e => updateEditForm('questionText', e.target.value),\n                  rows: 3,\n                  style: {\n                    width: '100%',\n                    padding: '0.5rem',\n                    borderRadius: '6px',\n                    border: '1px solid #d1d5db'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 286,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  marginBottom: '1rem'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  style: {\n                    display: 'block',\n                    marginBottom: '0.5rem',\n                    fontWeight: '500'\n                  },\n                  children: \"Options:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 295,\n                  columnNumber: 27\n                }, this), editForm.options && editForm.options.map((option, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    marginBottom: '0.5rem',\n                    display: 'flex',\n                    gap: '0.5rem',\n                    alignItems: 'center'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    value: option.optionText,\n                    onChange: e => updateOption(index, 'optionText', e.target.value),\n                    placeholder: `Option ${index + 1}`,\n                    style: {\n                      flex: 1,\n                      padding: '0.5rem',\n                      borderRadius: '6px',\n                      border: '1px solid #d1d5db'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 298,\n                    columnNumber: 31\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    style: {\n                      display: 'flex',\n                      alignItems: 'center',\n                      gap: '0.25rem'\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"radio\",\n                      name: `correct-${question.id}`,\n                      checked: option.isCorrect,\n                      onChange: () => updateOption(index, 'isCorrect', true)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 306,\n                      columnNumber: 33\n                    }, this), \"Correct\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 305,\n                    columnNumber: 31\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 297,\n                  columnNumber: 29\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 294,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: 'flex',\n                  gap: '0.5rem'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => saveEdit(question.id),\n                  style: {\n                    backgroundColor: '#10b981',\n                    color: 'white',\n                    border: 'none',\n                    borderRadius: '6px',\n                    padding: '0.5rem 1rem',\n                    cursor: 'pointer'\n                  },\n                  children: \"Save\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 319,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => setEditingQuestion(null),\n                  style: {\n                    backgroundColor: '#6b7280',\n                    color: 'white',\n                    border: 'none',\n                    borderRadius: '6px',\n                    padding: '0.5rem 1rem',\n                    cursor: 'pointer'\n                  },\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 332,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 318,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 23\n            }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  color: '#374151',\n                  fontSize: '1rem',\n                  fontWeight: '500',\n                  margin: '0 0 1rem 0'\n                },\n                children: question.questionText\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 349,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  marginBottom: '1rem'\n                },\n                children: question.options && question.options.map((option, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    padding: '0.5rem',\n                    backgroundColor: option.isCorrect ? '#dcfce7' : '#f9fafb',\n                    borderRadius: '6px',\n                    marginBottom: '0.25rem',\n                    fontSize: '0.875rem'\n                  },\n                  children: [option.optionText, \" \", option.isCorrect && '✓']\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 360,\n                  columnNumber: 29\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 358,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: 'flex',\n                  gap: '0.5rem'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => startEdit(question),\n                  style: {\n                    backgroundColor: '#3b82f6',\n                    color: 'white',\n                    border: 'none',\n                    borderRadius: '6px',\n                    padding: '0.5rem 1rem',\n                    fontSize: '0.875rem',\n                    cursor: 'pointer'\n                  },\n                  children: \"Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 373,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => deleteQuestion(question.id),\n                  style: {\n                    backgroundColor: '#ef4444',\n                    color: 'white',\n                    border: 'none',\n                    borderRadius: '6px',\n                    padding: '0.5rem 1rem',\n                    fontSize: '0.875rem',\n                    cursor: 'pointer'\n                  },\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 387,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 372,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true)]\n          }, question.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 15\n        }, this)]\n      }, quizTitle, true, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 202,\n    columnNumber: 5\n  }, this);\n};\n_s(QuestionBank, \"oUB1ijaXERtUaX/ebBDKN7OfuVE=\");\n_c = QuestionBank;\nexport default QuestionBank;\nvar _c;\n$RefreshReg$(_c, \"QuestionBank\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","QuestionBank","_s","questions","setQuestions","loading","setLoading","filter","setFilter","editingQuestion","setEditingQuestion","editForm","setEditForm","loadQuestions","quizzes","JSON","parse","localStorage","getItem","console","log","allQuestions","forEach","quiz","q","push","quizId","id","quizTitle","title","length","response","fetch","apiQuizzes","json","deletedQuestions","qResponse","includes","err","deleteQuestion","questionId","window","confirm","question","find","setItem","stringify","dispatchEvent","Event","startEdit","questionText","options","map","opt","saveEdit","updatedQuestion","questionType","questionIndex","findIndex","updateEditForm","field","value","prev","updateOption","optionIndex","updatedOptions","idx","isCorrect","filteredQuestions","questionsByQuiz","reduce","acc","quizKey","children","fileName","_jsxFileName","lineNumber","columnNumber","style","width","minHeight","margin","padding","backgroundColor","boxSizing","fontSize","fontWeight","color","textAlign","marginBottom","marginRight","onChange","e","target","borderRadius","border","Object","keys","entries","quizQuestions","display","gridTemplateColumns","gap","boxShadow","marginTop","rows","option","index","alignItems","type","optionText","placeholder","flex","name","checked","onClick","cursor","_c","$RefreshReg$"],"sources":["C:/Users/sanje/Downloads/PROJECTS/QuizSystem/reactapp/src/components/QuestionBank.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './QuestionBank.css';\n\nconst QuestionBank = () => {\n  const [questions, setQuestions] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [filter, setFilter] = useState('all');\n  const [editingQuestion, setEditingQuestion] = useState(null);\n  const [editForm, setEditForm] = useState({});\n\n  useEffect(() => {\n    loadQuestions();\n  }, []);\n\n  const loadQuestions = async () => {\n    const quizzes = JSON.parse(localStorage.getItem('quizzes') || '[]');\n    console.log('localStorage quizzes:', quizzes);\n    const allQuestions = [];\n    \n    quizzes.forEach(quiz => {\n      if (quiz.questions) {\n        quiz.questions.forEach(q => {\n          allQuestions.push({\n            ...q,\n            quizId: quiz.id,\n            quizTitle: quiz.title\n          });\n        });\n      }\n    });\n    \n    console.log('Questions from localStorage:', allQuestions);\n    \n    // If no localStorage questions, try API\n    if (allQuestions.length === 0) {\n      try {\n        const response = await fetch('http://localhost:8080/api/quizzes');\n        const apiQuizzes = await response.json();\n        const deletedQuestions = JSON.parse(localStorage.getItem('deletedQuestions') || '[]');\n        \n        for (const quiz of apiQuizzes) {\n          try {\n            const qResponse = await fetch(`http://localhost:8080/api/quizzes/${quiz.id}/questions`);\n            const questions = await qResponse.json();\n            questions.forEach(q => {\n              // Skip deleted questions\n              if (!deletedQuestions.includes(q.id)) {\n                allQuestions.push({\n                  ...q,\n                  quizId: quiz.id,\n                  quizTitle: quiz.title\n                });\n              }\n            });\n          } catch (err) {\n            console.log('Failed to fetch questions for quiz:', quiz.id);\n          }\n        }\n        console.log('Questions from API:', allQuestions);\n      } catch (err) {\n        console.log('API failed:', err);\n      }\n    }\n    \n    setQuestions(allQuestions);\n    setLoading(false);\n  };\n\n  const deleteQuestion = (questionId) => {\n    if (!window.confirm('Are you sure you want to delete this question?')) return;\n    \n    const question = questions.find(q => q.id === questionId);\n    const quizzes = JSON.parse(localStorage.getItem('quizzes') || '[]');\n    let quiz = quizzes.find(q => q.id === question.quizId);\n    \n    // Create quiz in localStorage if it doesn't exist\n    if (!quiz) {\n      quiz = {\n        id: question.quizId,\n        title: question.quizTitle,\n        questions: []\n      };\n      quizzes.push(quiz);\n    }\n    \n    // Ensure questions array exists\n    if (!quiz.questions) {\n      quiz.questions = [];\n    }\n    \n    // Remove question from localStorage\n    quiz.questions = quiz.questions.filter(q => q.id !== questionId);\n    \n    // Mark as deleted for API-loaded questions\n    const deletedQuestions = JSON.parse(localStorage.getItem('deletedQuestions') || '[]');\n    if (!deletedQuestions.includes(questionId)) {\n      deletedQuestions.push(questionId);\n      localStorage.setItem('deletedQuestions', JSON.stringify(deletedQuestions));\n    }\n    \n    localStorage.setItem('quizzes', JSON.stringify(quizzes));\n    setQuestions(questions.filter(q => q.id !== questionId));\n    \n    // Trigger dashboard refresh\n    window.dispatchEvent(new Event('questionsUpdated'));\n  };\n\n  const startEdit = (question) => {\n    setEditingQuestion(question.id);\n    setEditForm({\n      questionText: question.questionText,\n      options: question.options.map(opt => ({ ...opt }))\n    });\n  };\n\n  const saveEdit = (questionId) => {\n    const question = questions.find(q => q.id === questionId);\n    const updatedQuestion = {\n      id: question.id,\n      questionText: editForm.questionText,\n      questionType: question.questionType,\n      options: editForm.options,\n      quizId: question.quizId,\n      quizTitle: question.quizTitle\n    };\n    \n    console.log('Saving edited question:', updatedQuestion);\n    \n    const quizzes = JSON.parse(localStorage.getItem('quizzes') || '[]');\n    let quiz = quizzes.find(q => q.id === question.quizId);\n    \n    // Create quiz in localStorage if it doesn't exist\n    if (!quiz) {\n      quiz = {\n        id: question.quizId,\n        title: question.quizTitle,\n        questions: []\n      };\n      quizzes.push(quiz);\n    }\n    \n    // Ensure questions array exists\n    if (!quiz.questions) {\n      quiz.questions = [];\n    }\n    \n    // Update or add question\n    const questionIndex = quiz.questions.findIndex(q => q.id === questionId);\n    if (questionIndex !== -1) {\n      quiz.questions[questionIndex] = updatedQuestion;\n      console.log('Updated existing question at index:', questionIndex);\n    } else {\n      quiz.questions.push(updatedQuestion);\n      console.log('Added new question to localStorage');\n    }\n    \n    localStorage.setItem('quizzes', JSON.stringify(quizzes));\n    console.log('Saved to localStorage:', JSON.parse(localStorage.getItem('quizzes')));\n    \n    setQuestions(questions.map(q => q.id === questionId ? updatedQuestion : q));\n    setEditingQuestion(null);\n    setEditForm({});\n    \n    // Trigger dashboard refresh\n    window.dispatchEvent(new Event('questionsUpdated'));\n  };\n\n  const updateEditForm = (field, value) => {\n    setEditForm(prev => ({ ...prev, [field]: value }));\n  };\n\n  const updateOption = (optionIndex, field, value) => {\n    const updatedOptions = [...editForm.options];\n    updatedOptions[optionIndex] = { ...updatedOptions[optionIndex], [field]: value };\n    \n    if (field === 'isCorrect' && value) {\n      updatedOptions.forEach((opt, idx) => {\n        if (idx !== optionIndex) opt.isCorrect = false;\n      });\n    }\n    \n    setEditForm(prev => ({ ...prev, options: updatedOptions }));\n  };\n\n  const filteredQuestions = questions.filter(q => {\n    if (filter === 'all') return true;\n    return q.questionType === filter;\n  });\n\n  const questionsByQuiz = filteredQuestions.reduce((acc, question) => {\n    const quizKey = question.quizTitle || `Quiz ID: ${question.quizId}`;\n    if (!acc[quizKey]) {\n      acc[quizKey] = [];\n    }\n    acc[quizKey].push(question);\n    return acc;\n  }, {});\n\n  if (loading) return <div>Loading question bank...</div>;\n\n  return (\n    <div style={{ \n      width: '100vw', \n      minHeight: '100vh', \n      margin: 0, \n      padding: '2rem',\n      backgroundColor: '#f8fafc',\n      boxSizing: 'border-box'\n    }}>\n      <h2 style={{ \n        fontSize: '2rem', \n        fontWeight: '700', \n        color: '#1f2937', \n        margin: '0 0 2rem 0',\n        textAlign: 'center'\n      }}>\n        Question Bank Management\n      </h2>\n      \n      <div style={{ marginBottom: '2rem' }}>\n        <label style={{ marginRight: '1rem', fontWeight: '500' }}>Filter by type:</label>\n        <select \n          value={filter} \n          onChange={(e) => setFilter(e.target.value)}\n          style={{ \n            padding: '0.5rem', \n            borderRadius: '6px', \n            border: '1px solid #d1d5db' \n          }}\n        >\n          <option value=\"all\">All Types</option>\n          <option value=\"MULTIPLE_CHOICE\">Multiple Choice</option>\n          <option value=\"TRUE_FALSE\">True/False</option>\n        </select>\n      </div>\n\n      {Object.keys(questionsByQuiz).length === 0 ? (\n        <div style={{ textAlign: 'center', padding: '3rem', color: '#6b7280' }}>\n          No questions found.\n        </div>\n      ) : (\n        <div>\n          {Object.entries(questionsByQuiz).map(([quizTitle, quizQuestions]) => (\n            <div key={quizTitle} style={{ marginBottom: '3rem' }}>\n              <h3 style={{ \n                fontSize: '1.5rem', \n                fontWeight: '600', \n                color: '#1f2937', \n                margin: '0 0 1.5rem 0',\n                textAlign: 'left'\n              }}>\n                {quizTitle}\n              </h3>\n              \n              <div style={{ \n                display: 'grid', \n                gridTemplateColumns: 'repeat(3, 1fr)', \n                gap: '1.5rem' \n              }}>\n                {quizQuestions.map(question => (\n                  <div key={question.id} style={{ \n                    backgroundColor: 'white', \n                    border: '1px solid #e5e7eb', \n                    borderRadius: '12px', \n                    padding: '1.5rem',\n                    boxShadow: '0 2px 4px rgba(0, 0, 0, 0.1)'\n                  }}>\n                    <div style={{ \n                      backgroundColor: '#dbeafe', \n                      color: '#1e40af', \n                      padding: '0.25rem 0.75rem', \n                      borderRadius: '6px', \n                      fontSize: '0.75rem', \n                      fontWeight: '500', \n                      display: 'inline-block', \n                      marginBottom: '1rem',\n                      marginTop: '2rem'\n                    }}>\n                      {question.questionType}\n                    </div>\n                    \n                    {editingQuestion === question.id ? (\n                      <div>\n                        <div style={{ marginBottom: '1rem' }}>\n                          <label style={{ display: 'block', marginBottom: '0.5rem', fontWeight: '500' }}>Question Text:</label>\n                          <textarea\n                            value={editForm.questionText}\n                            onChange={(e) => updateEditForm('questionText', e.target.value)}\n                            rows={3}\n                            style={{ width: '100%', padding: '0.5rem', borderRadius: '6px', border: '1px solid #d1d5db' }}\n                          />\n                        </div>\n                        \n                        <div style={{ marginBottom: '1rem' }}>\n                          <label style={{ display: 'block', marginBottom: '0.5rem', fontWeight: '500' }}>Options:</label>\n                          {editForm.options && editForm.options.map((option, index) => (\n                            <div key={index} style={{ marginBottom: '0.5rem', display: 'flex', gap: '0.5rem', alignItems: 'center' }}>\n                              <input\n                                type=\"text\"\n                                value={option.optionText}\n                                onChange={(e) => updateOption(index, 'optionText', e.target.value)}\n                                placeholder={`Option ${index + 1}`}\n                                style={{ flex: 1, padding: '0.5rem', borderRadius: '6px', border: '1px solid #d1d5db' }}\n                              />\n                              <label style={{ display: 'flex', alignItems: 'center', gap: '0.25rem' }}>\n                                <input\n                                  type=\"radio\"\n                                  name={`correct-${question.id}`}\n                                  checked={option.isCorrect}\n                                  onChange={() => updateOption(index, 'isCorrect', true)}\n                                />\n                                Correct\n                              </label>\n                            </div>\n                          ))}\n                        </div>\n                        \n                        <div style={{ display: 'flex', gap: '0.5rem' }}>\n                          <button \n                            onClick={() => saveEdit(question.id)}\n                            style={{ \n                              backgroundColor: '#10b981', \n                              color: 'white', \n                              border: 'none', \n                              borderRadius: '6px', \n                              padding: '0.5rem 1rem', \n                              cursor: 'pointer' \n                            }}\n                          >\n                            Save\n                          </button>\n                          <button \n                            onClick={() => setEditingQuestion(null)}\n                            style={{ \n                              backgroundColor: '#6b7280', \n                              color: 'white', \n                              border: 'none', \n                              borderRadius: '6px', \n                              padding: '0.5rem 1rem', \n                              cursor: 'pointer' \n                            }}\n                          >\n                            Cancel\n                          </button>\n                        </div>\n                      </div>\n                    ) : (\n                      <>\n                        <p style={{ \n                          color: '#374151', \n                          fontSize: '1rem', \n                          fontWeight: '500', \n                          margin: '0 0 1rem 0' \n                        }}>\n                          {question.questionText}\n                        </p>\n                        \n                        <div style={{ marginBottom: '1rem' }}>\n                          {question.options && question.options.map((option, index) => (\n                            <div key={index} style={{ \n                              padding: '0.5rem', \n                              backgroundColor: option.isCorrect ? '#dcfce7' : '#f9fafb', \n                              borderRadius: '6px', \n                              marginBottom: '0.25rem',\n                              fontSize: '0.875rem'\n                            }}>\n                              {option.optionText} {option.isCorrect && '✓'}\n                            </div>\n                          ))}\n                        </div>\n                        \n                        <div style={{ display: 'flex', gap: '0.5rem' }}>\n                          <button \n                            onClick={() => startEdit(question)}\n                            style={{ \n                              backgroundColor: '#3b82f6', \n                              color: 'white', \n                              border: 'none', \n                              borderRadius: '6px', \n                              padding: '0.5rem 1rem', \n                              fontSize: '0.875rem', \n                              cursor: 'pointer' \n                            }}\n                          >\n                            Edit\n                          </button>\n                          <button \n                            onClick={() => deleteQuestion(question.id)}\n                            style={{ \n                              backgroundColor: '#ef4444', \n                              color: 'white', \n                              border: 'none', \n                              borderRadius: '6px', \n                              padding: '0.5rem 1rem', \n                              fontSize: '0.875rem', \n                              cursor: 'pointer' \n                            }}\n                          >\n                            Delete\n                          </button>\n                        </div>\n                      </>\n                    )}\n                  </div>\n                ))}\n              </div>\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default QuestionBank;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}