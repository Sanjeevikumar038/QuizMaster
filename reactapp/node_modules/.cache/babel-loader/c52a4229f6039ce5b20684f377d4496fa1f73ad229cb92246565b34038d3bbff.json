{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sanje\\\\Downloads\\\\PROJECTS\\\\QuizSystem\\\\reactapp\\\\src\\\\components\\\\AIQuestionGenerator.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { buttonStyles } from './buttonStyles';\nimport { useToast, ToastContainer } from './Toast';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AIQuestionGenerator = ({\n  quizId,\n  onQuestionsGenerated,\n  availableQuizzes = []\n}) => {\n  _s();\n  const [topic, setTopic] = useState('');\n  const [difficulty, setDifficulty] = useState('medium');\n  const [questionCount, setQuestionCount] = useState(5);\n  const [questionType, setQuestionType] = useState('MULTIPLE_CHOICE');\n  const [generating, setGenerating] = useState(false);\n  const [createNewQuiz, setCreateNewQuiz] = useState(true);\n  const [selectedExistingQuiz, setSelectedExistingQuiz] = useState('');\n  const [newQuizTitle, setNewQuizTitle] = useState('');\n  const [newQuizDescription, setNewQuizDescription] = useState('');\n  const [timeLimit, setTimeLimit] = useState(30);\n  const {\n    toasts,\n    addToast,\n    removeToast\n  } = useToast();\n\n  // Auto-fill topic when existing quiz is selected\n  useEffect(() => {\n    if (!createNewQuiz && selectedExistingQuiz && availableQuizzes.length > 0) {\n      const selectedQuiz = availableQuizzes.find(q => q.id.toString() === selectedExistingQuiz);\n      if (selectedQuiz) {\n        // Extract topic from quiz title (first word usually)\n        const extractedTopic = selectedQuiz.title.split(' ')[0];\n        setTopic(extractedTopic);\n      }\n    }\n  }, [selectedExistingQuiz, createNewQuiz, availableQuizzes]);\n  const generateQuestions = async () => {\n    if (!topic.trim()) {\n      addToast('Please enter a topic', 'error');\n      return;\n    }\n    if (createNewQuiz && (!newQuizTitle.trim() || !newQuizDescription.trim())) {\n      addToast('Please fill in quiz title and description', 'error');\n      return;\n    }\n    if (!createNewQuiz && !selectedExistingQuiz) {\n      addToast('Please select an existing quiz', 'error');\n      return;\n    }\n    setGenerating(true);\n    try {\n      let targetQuizId = createNewQuiz ? null : selectedExistingQuiz;\n\n      // Create new quiz if needed\n      if (createNewQuiz) {\n        const newQuiz = {\n          id: Date.now(),\n          title: newQuizTitle,\n          description: newQuizDescription,\n          timeLimit: timeLimit\n        };\n\n        // Save to localStorage\n        const existingQuizzes = JSON.parse(localStorage.getItem('quizzes') || '[]');\n        existingQuizzes.push(newQuiz);\n        localStorage.setItem('quizzes', JSON.stringify(existingQuizzes));\n        targetQuizId = newQuiz.id;\n        addToast(`Created new quiz: ${newQuizTitle}`, 'success');\n      }\n\n      // Generate questions\n      const generatedQuestions = await simulateAIGeneration(topic, difficulty, questionCount, questionType);\n\n      // Save questions to localStorage\n      const existingQuestions = JSON.parse(localStorage.getItem('aiGeneratedQuestions') || '{}');\n      if (!existingQuestions[targetQuizId]) {\n        existingQuestions[targetQuizId] = [];\n      }\n      generatedQuestions.forEach(question => {\n        existingQuestions[targetQuizId].push({\n          ...question,\n          id: Date.now() + Math.random(),\n          quizId: targetQuizId\n        });\n      });\n      localStorage.setItem('aiGeneratedQuestions', JSON.stringify(existingQuestions));\n      addToast(`Generated ${questionCount} questions successfully!`, 'success');\n      onQuestionsGenerated(generatedQuestions);\n\n      // Reset form\n      setTopic('');\n      setQuestionCount(5);\n      setNewQuizTitle('');\n      setNewQuizDescription('');\n    } catch (error) {\n      addToast('Failed to generate questions. Please try again.', 'error');\n    } finally {\n      setGenerating(false);\n    }\n  };\n  const simulateAIGeneration = (topic, difficulty, count, type) => {\n    return new Promise(resolve => {\n      setTimeout(() => {\n        const questions = [];\n        for (let i = 0; i < count; i++) {\n          if (type === 'MULTIPLE_CHOICE') {\n            questions.push(generateMCQ(topic, difficulty, i + 1));\n          } else {\n            questions.push(generateTrueFalse(topic, difficulty, i + 1));\n          }\n        }\n        resolve(questions);\n      }, 2000); // Simulate API delay\n    });\n  };\n  const generateMCQ = (topic, difficulty, index) => {\n    var _templates$topicKey;\n    const templates = {\n      java: {\n        easy: [{\n          question: `What is the correct way to declare a variable in ${topic}?`,\n          options: [{\n            optionText: 'int x = 5;',\n            isCorrect: true\n          }, {\n            optionText: 'integer x = 5;',\n            isCorrect: false\n          }, {\n            optionText: 'var x = 5;',\n            isCorrect: false\n          }, {\n            optionText: 'x = 5;',\n            isCorrect: false\n          }]\n        }, {\n          question: `Which keyword is used to create a class in ${topic}?`,\n          options: [{\n            optionText: 'class',\n            isCorrect: true\n          }, {\n            optionText: 'Class',\n            isCorrect: false\n          }, {\n            optionText: 'new',\n            isCorrect: false\n          }, {\n            optionText: 'create',\n            isCorrect: false\n          }]\n        }],\n        medium: [{\n          question: `What is the output of System.out.println(\"Hello\".length()) in ${topic}?`,\n          options: [{\n            optionText: '5',\n            isCorrect: true\n          }, {\n            optionText: '4',\n            isCorrect: false\n          }, {\n            optionText: '6',\n            isCorrect: false\n          }, {\n            optionText: 'Error',\n            isCorrect: false\n          }]\n        }, {\n          question: `Which collection class allows duplicate elements in ${topic}?`,\n          options: [{\n            optionText: 'ArrayList',\n            isCorrect: true\n          }, {\n            optionText: 'HashSet',\n            isCorrect: false\n          }, {\n            optionText: 'TreeSet',\n            isCorrect: false\n          }, {\n            optionText: 'LinkedHashSet',\n            isCorrect: false\n          }]\n        }],\n        hard: [{\n          question: `What is the time complexity of HashMap get() operation in ${topic}?`,\n          options: [{\n            optionText: 'O(1) average case',\n            isCorrect: true\n          }, {\n            optionText: 'O(log n)',\n            isCorrect: false\n          }, {\n            optionText: 'O(n)',\n            isCorrect: false\n          }, {\n            optionText: 'O(nÂ²)',\n            isCorrect: false\n          }]\n        }]\n      },\n      python: {\n        easy: [{\n          question: `How do you create a list in ${topic}?`,\n          options: [{\n            optionText: 'my_list = []',\n            isCorrect: true\n          }, {\n            optionText: 'my_list = ()',\n            isCorrect: false\n          }, {\n            optionText: 'my_list = {}',\n            isCorrect: false\n          }, {\n            optionText: 'list my_list',\n            isCorrect: false\n          }]\n        }],\n        medium: [{\n          question: `What is the output of len(\"Python\") in ${topic}?`,\n          options: [{\n            optionText: '6',\n            isCorrect: true\n          }, {\n            optionText: '5',\n            isCorrect: false\n          }, {\n            optionText: '7',\n            isCorrect: false\n          }, {\n            optionText: 'Error',\n            isCorrect: false\n          }]\n        }],\n        hard: [{\n          question: `What is a decorator in ${topic}?`,\n          options: [{\n            optionText: 'A function that modifies another function',\n            isCorrect: true\n          }, {\n            optionText: 'A type of variable',\n            isCorrect: false\n          }, {\n            optionText: 'A loop construct',\n            isCorrect: false\n          }, {\n            optionText: 'An error handler',\n            isCorrect: false\n          }]\n        }]\n      }\n    };\n    const topicKey = topic.toLowerCase();\n    const difficultyQuestions = ((_templates$topicKey = templates[topicKey]) === null || _templates$topicKey === void 0 ? void 0 : _templates$topicKey[difficulty]) || templates.java[difficulty];\n    const template = difficultyQuestions[index % difficultyQuestions.length];\n    return {\n      questionText: template.question,\n      questionType: 'MULTIPLE_CHOICE',\n      options: template.options.map((opt, idx) => ({\n        ...opt,\n        id: Date.now() + idx\n      })),\n      difficulty: difficulty,\n      topic: topic\n    };\n  };\n  const generateTrueFalse = (topic, difficulty, index) => {\n    const statements = {\n      easy: [{\n        text: `${topic} is a programming language`,\n        correct: true\n      }, {\n        text: `Variables in ${topic} must be declared before use`,\n        correct: true\n      }, {\n        text: `${topic} supports object-oriented programming`,\n        correct: true\n      }],\n      medium: [{\n        text: `${topic} is compiled to bytecode`,\n        correct: topic.toLowerCase() === 'java'\n      }, {\n        text: `${topic} uses garbage collection for memory management`,\n        correct: true\n      }],\n      hard: [{\n        text: `${topic} supports multiple inheritance of classes`,\n        correct: topic.toLowerCase() === 'python'\n      }]\n    };\n    const difficultyStatements = statements[difficulty];\n    const statement = difficultyStatements[index % difficultyStatements.length];\n    return {\n      questionText: statement.text,\n      questionType: 'TRUE_FALSE',\n      options: [{\n        optionText: 'True',\n        isCorrect: statement.correct,\n        id: Date.now() + 1\n      }, {\n        optionText: 'False',\n        isCorrect: !statement.correct,\n        id: Date.now() + 2\n      }],\n      difficulty: difficulty,\n      topic: topic\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundColor: 'white',\n      borderRadius: '12px',\n      padding: '2rem',\n      marginBottom: '2rem',\n      boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)',\n      border: '2px solid #e5e7eb'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      style: {\n        fontSize: '1.5rem',\n        fontWeight: '700',\n        color: '#1f2937',\n        marginBottom: '1.5rem',\n        display: 'flex',\n        alignItems: 'center',\n        gap: '0.5rem'\n      },\n      children: \"\\uD83E\\uDD16 AI Question Generator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '1.5rem',\n        padding: '1rem',\n        backgroundColor: '#f8fafc',\n        borderRadius: '8px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          gap: '0.5rem',\n          cursor: 'pointer'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: createNewQuiz,\n          onChange: e => setCreateNewQuiz(e.target.checked),\n          style: {\n            width: '18px',\n            height: '18px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontWeight: '600',\n            color: '#374151'\n          },\n          children: \"Create new quiz with AI questions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 7\n    }, this), createNewQuiz && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '1.5rem',\n        padding: '1rem',\n        backgroundColor: '#eff6ff',\n        borderRadius: '8px',\n        border: '1px solid #bfdbfe'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        style: {\n          margin: '0 0 1rem 0',\n          color: '#1e40af',\n          fontSize: '1.1rem'\n        },\n        children: \"New Quiz Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'grid',\n          gridTemplateColumns: 'repeat(2, 1fr)',\n          gap: '1rem'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              display: 'block',\n              marginBottom: '0.5rem',\n              fontWeight: '600',\n              color: '#374151'\n            },\n            children: \"Quiz Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newQuizTitle,\n            onChange: e => setNewQuizTitle(e.target.value),\n            placeholder: \"e.g., Java Fundamentals Quiz\",\n            style: {\n              width: '100%',\n              padding: '0.75rem',\n              border: '1px solid #d1d5db',\n              borderRadius: '6px',\n              fontSize: '1rem'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              display: 'block',\n              marginBottom: '0.5rem',\n              fontWeight: '600',\n              color: '#374151'\n            },\n            children: \"Time Limit (minutes)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: timeLimit,\n            onChange: e => setTimeLimit(Math.max(1, parseInt(e.target.value) || 30)),\n            min: \"1\",\n            max: \"180\",\n            style: {\n              width: '100%',\n              padding: '0.75rem',\n              border: '1px solid #d1d5db',\n              borderRadius: '6px',\n              fontSize: '1rem'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '1rem'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            display: 'block',\n            marginBottom: '0.5rem',\n            fontWeight: '600',\n            color: '#374151'\n          },\n          children: \"Quiz Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: newQuizDescription,\n          onChange: e => setNewQuizDescription(e.target.value),\n          placeholder: \"Brief description of the quiz content and objectives\",\n          rows: 3,\n          style: {\n            width: '100%',\n            padding: '0.75rem',\n            border: '1px solid #d1d5db',\n            borderRadius: '6px',\n            fontSize: '1rem',\n            resize: 'vertical'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 9\n    }, this), !createNewQuiz && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '1.5rem',\n        padding: '1rem',\n        backgroundColor: '#fef3c7',\n        borderRadius: '8px',\n        border: '1px solid #fde68a'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        style: {\n          margin: '0 0 1rem 0',\n          color: '#92400e',\n          fontSize: '1.1rem'\n        },\n        children: \"Select Existing Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedExistingQuiz,\n        onChange: e => setSelectedExistingQuiz(e.target.value),\n        style: {\n          width: '100%',\n          padding: '0.75rem',\n          border: '1px solid #d1d5db',\n          borderRadius: '6px',\n          fontSize: '1rem',\n          backgroundColor: 'white'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Choose a quiz to add questions to...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 13\n        }, this), availableQuizzes.map(quiz => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: quiz.id,\n          children: quiz.title\n        }, quiz.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'grid',\n        gridTemplateColumns: 'repeat(2, 1fr)',\n        gap: '1rem',\n        marginBottom: '1.5rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            display: 'block',\n            marginBottom: '0.5rem',\n            fontWeight: '600',\n            color: '#374151'\n          },\n          children: \"Topic/Subject\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: topic,\n          onChange: e => setTopic(e.target.value),\n          placeholder: \"e.g., Java, Python, React, JavaScript\",\n          style: {\n            width: '100%',\n            padding: '0.75rem',\n            border: '1px solid #d1d5db',\n            borderRadius: '6px',\n            fontSize: '1rem'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            display: 'block',\n            marginBottom: '0.5rem',\n            fontWeight: '600',\n            color: '#374151'\n          },\n          children: \"Difficulty Level\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: difficulty,\n          onChange: e => setDifficulty(e.target.value),\n          style: {\n            width: '100%',\n            padding: '0.75rem',\n            border: '1px solid #d1d5db',\n            borderRadius: '6px',\n            fontSize: '1rem',\n            backgroundColor: 'white'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"easy\",\n            children: \"\\uD83D\\uDFE2 Easy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"medium\",\n            children: \"\\uD83D\\uDFE1 Medium\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"hard\",\n            children: \"\\uD83D\\uDD34 Hard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 424,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            display: 'block',\n            marginBottom: '0.5rem',\n            fontWeight: '600',\n            color: '#374151'\n          },\n          children: \"Number of Questions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: questionCount,\n          onChange: e => setQuestionCount(Math.max(1, Math.min(20, parseInt(e.target.value) || 1))),\n          min: \"1\",\n          max: \"20\",\n          style: {\n            width: '100%',\n            padding: '0.75rem',\n            border: '1px solid #d1d5db',\n            borderRadius: '6px',\n            fontSize: '1rem'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            display: 'block',\n            marginBottom: '0.5rem',\n            fontWeight: '600',\n            color: '#374151'\n          },\n          children: \"Question Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 449,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: questionType,\n          onChange: e => setQuestionType(e.target.value),\n          style: {\n            width: '100%',\n            padding: '0.75rem',\n            border: '1px solid #d1d5db',\n            borderRadius: '6px',\n            fontSize: '1rem',\n            backgroundColor: 'white'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"MULTIPLE_CHOICE\",\n            children: \"Multiple Choice\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 464,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"TRUE_FALSE\",\n            children: \"True/False\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 465,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: generateQuestions,\n      disabled: generating,\n      style: {\n        ...buttonStyles.primary,\n        width: '100%',\n        backgroundColor: generating ? '#9ca3af' : '#8b5cf6',\n        cursor: generating ? 'not-allowed' : 'pointer',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        gap: '0.5rem'\n      },\n      children: generating ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '20px',\n            height: '20px',\n            border: '2px solid #ffffff40',\n            borderTop: '2px solid #ffffff',\n            borderRadius: '50%',\n            animation: 'spin 1s linear infinite'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 486,\n          columnNumber: 13\n        }, this), \"Generating Questions...\"]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [\"\\u2728 Generate \", questionCount, \" Questions\"]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 470,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {\n      toasts: toasts,\n      removeToast: removeToast\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 503,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      children: `\n          @keyframes spin {\n            0% { transform: rotate(0deg); }\n            100% { transform: rotate(360deg); }\n          }\n        `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 505,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 262,\n    columnNumber: 5\n  }, this);\n};\n_s(AIQuestionGenerator, \"86mB4Ja2AQO1db0NAkJtGmykw1w=\", false, function () {\n  return [useToast];\n});\n_c = AIQuestionGenerator;\nexport default AIQuestionGenerator;\nvar _c;\n$RefreshReg$(_c, \"AIQuestionGenerator\");","map":{"version":3,"names":["React","useState","buttonStyles","useToast","ToastContainer","jsxDEV","_jsxDEV","Fragment","_Fragment","AIQuestionGenerator","quizId","onQuestionsGenerated","availableQuizzes","_s","topic","setTopic","difficulty","setDifficulty","questionCount","setQuestionCount","questionType","setQuestionType","generating","setGenerating","createNewQuiz","setCreateNewQuiz","selectedExistingQuiz","setSelectedExistingQuiz","newQuizTitle","setNewQuizTitle","newQuizDescription","setNewQuizDescription","timeLimit","setTimeLimit","toasts","addToast","removeToast","useEffect","length","selectedQuiz","find","q","id","toString","extractedTopic","title","split","generateQuestions","trim","targetQuizId","newQuiz","Date","now","description","existingQuizzes","JSON","parse","localStorage","getItem","push","setItem","stringify","generatedQuestions","simulateAIGeneration","existingQuestions","forEach","question","Math","random","error","count","type","Promise","resolve","setTimeout","questions","i","generateMCQ","generateTrueFalse","index","_templates$topicKey","templates","java","easy","options","optionText","isCorrect","medium","hard","python","topicKey","toLowerCase","difficultyQuestions","template","questionText","map","opt","idx","statements","text","correct","difficultyStatements","statement","style","backgroundColor","borderRadius","padding","marginBottom","boxShadow","border","children","fontSize","fontWeight","color","display","alignItems","gap","fileName","_jsxFileName","lineNumber","columnNumber","cursor","checked","onChange","e","target","width","height","margin","gridTemplateColumns","value","placeholder","max","parseInt","min","marginTop","rows","resize","quiz","onClick","disabled","primary","justifyContent","borderTop","animation","_c","$RefreshReg$"],"sources":["C:/Users/sanje/Downloads/PROJECTS/QuizSystem/reactapp/src/components/AIQuestionGenerator.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { buttonStyles } from './buttonStyles';\nimport { useToast, ToastContainer } from './Toast';\n\nconst AIQuestionGenerator = ({ quizId, onQuestionsGenerated, availableQuizzes = [] }) => {\n  const [topic, setTopic] = useState('');\n  const [difficulty, setDifficulty] = useState('medium');\n  const [questionCount, setQuestionCount] = useState(5);\n  const [questionType, setQuestionType] = useState('MULTIPLE_CHOICE');\n  const [generating, setGenerating] = useState(false);\n  const [createNewQuiz, setCreateNewQuiz] = useState(true);\n  const [selectedExistingQuiz, setSelectedExistingQuiz] = useState('');\n  const [newQuizTitle, setNewQuizTitle] = useState('');\n  const [newQuizDescription, setNewQuizDescription] = useState('');\n  const [timeLimit, setTimeLimit] = useState(30);\n  const { toasts, addToast, removeToast } = useToast();\n\n  // Auto-fill topic when existing quiz is selected\n  useEffect(() => {\n    if (!createNewQuiz && selectedExistingQuiz && availableQuizzes.length > 0) {\n      const selectedQuiz = availableQuizzes.find(q => q.id.toString() === selectedExistingQuiz);\n      if (selectedQuiz) {\n        // Extract topic from quiz title (first word usually)\n        const extractedTopic = selectedQuiz.title.split(' ')[0];\n        setTopic(extractedTopic);\n      }\n    }\n  }, [selectedExistingQuiz, createNewQuiz, availableQuizzes]);\n\n  const generateQuestions = async () => {\n    if (!topic.trim()) {\n      addToast('Please enter a topic', 'error');\n      return;\n    }\n    \n    if (createNewQuiz && (!newQuizTitle.trim() || !newQuizDescription.trim())) {\n      addToast('Please fill in quiz title and description', 'error');\n      return;\n    }\n    \n    if (!createNewQuiz && !selectedExistingQuiz) {\n      addToast('Please select an existing quiz', 'error');\n      return;\n    }\n\n    setGenerating(true);\n    \n    try {\n      let targetQuizId = createNewQuiz ? null : selectedExistingQuiz;\n      \n      // Create new quiz if needed\n      if (createNewQuiz) {\n        const newQuiz = {\n          id: Date.now(),\n          title: newQuizTitle,\n          description: newQuizDescription,\n          timeLimit: timeLimit\n        };\n        \n        // Save to localStorage\n        const existingQuizzes = JSON.parse(localStorage.getItem('quizzes') || '[]');\n        existingQuizzes.push(newQuiz);\n        localStorage.setItem('quizzes', JSON.stringify(existingQuizzes));\n        \n        targetQuizId = newQuiz.id;\n        addToast(`Created new quiz: ${newQuizTitle}`, 'success');\n      }\n      \n      // Generate questions\n      const generatedQuestions = await simulateAIGeneration(topic, difficulty, questionCount, questionType);\n      \n      // Save questions to localStorage\n      const existingQuestions = JSON.parse(localStorage.getItem('aiGeneratedQuestions') || '{}');\n      if (!existingQuestions[targetQuizId]) {\n        existingQuestions[targetQuizId] = [];\n      }\n      \n      generatedQuestions.forEach(question => {\n        existingQuestions[targetQuizId].push({\n          ...question,\n          id: Date.now() + Math.random(),\n          quizId: targetQuizId\n        });\n      });\n      \n      localStorage.setItem('aiGeneratedQuestions', JSON.stringify(existingQuestions));\n      \n      addToast(`Generated ${questionCount} questions successfully!`, 'success');\n      onQuestionsGenerated(generatedQuestions);\n      \n      // Reset form\n      setTopic('');\n      setQuestionCount(5);\n      setNewQuizTitle('');\n      setNewQuizDescription('');\n      \n    } catch (error) {\n      addToast('Failed to generate questions. Please try again.', 'error');\n    } finally {\n      setGenerating(false);\n    }\n  };\n\n  const simulateAIGeneration = (topic, difficulty, count, type) => {\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        const questions = [];\n        \n        for (let i = 0; i < count; i++) {\n          if (type === 'MULTIPLE_CHOICE') {\n            questions.push(generateMCQ(topic, difficulty, i + 1));\n          } else {\n            questions.push(generateTrueFalse(topic, difficulty, i + 1));\n          }\n        }\n        \n        resolve(questions);\n      }, 2000); // Simulate API delay\n    });\n  };\n\n  const generateMCQ = (topic, difficulty, index) => {\n    const templates = {\n      java: {\n        easy: [\n          {\n            question: `What is the correct way to declare a variable in ${topic}?`,\n            options: [\n              { optionText: 'int x = 5;', isCorrect: true },\n              { optionText: 'integer x = 5;', isCorrect: false },\n              { optionText: 'var x = 5;', isCorrect: false },\n              { optionText: 'x = 5;', isCorrect: false }\n            ]\n          },\n          {\n            question: `Which keyword is used to create a class in ${topic}?`,\n            options: [\n              { optionText: 'class', isCorrect: true },\n              { optionText: 'Class', isCorrect: false },\n              { optionText: 'new', isCorrect: false },\n              { optionText: 'create', isCorrect: false }\n            ]\n          }\n        ],\n        medium: [\n          {\n            question: `What is the output of System.out.println(\"Hello\".length()) in ${topic}?`,\n            options: [\n              { optionText: '5', isCorrect: true },\n              { optionText: '4', isCorrect: false },\n              { optionText: '6', isCorrect: false },\n              { optionText: 'Error', isCorrect: false }\n            ]\n          },\n          {\n            question: `Which collection class allows duplicate elements in ${topic}?`,\n            options: [\n              { optionText: 'ArrayList', isCorrect: true },\n              { optionText: 'HashSet', isCorrect: false },\n              { optionText: 'TreeSet', isCorrect: false },\n              { optionText: 'LinkedHashSet', isCorrect: false }\n            ]\n          }\n        ],\n        hard: [\n          {\n            question: `What is the time complexity of HashMap get() operation in ${topic}?`,\n            options: [\n              { optionText: 'O(1) average case', isCorrect: true },\n              { optionText: 'O(log n)', isCorrect: false },\n              { optionText: 'O(n)', isCorrect: false },\n              { optionText: 'O(nÂ²)', isCorrect: false }\n            ]\n          }\n        ]\n      },\n      python: {\n        easy: [\n          {\n            question: `How do you create a list in ${topic}?`,\n            options: [\n              { optionText: 'my_list = []', isCorrect: true },\n              { optionText: 'my_list = ()', isCorrect: false },\n              { optionText: 'my_list = {}', isCorrect: false },\n              { optionText: 'list my_list', isCorrect: false }\n            ]\n          }\n        ],\n        medium: [\n          {\n            question: `What is the output of len(\"Python\") in ${topic}?`,\n            options: [\n              { optionText: '6', isCorrect: true },\n              { optionText: '5', isCorrect: false },\n              { optionText: '7', isCorrect: false },\n              { optionText: 'Error', isCorrect: false }\n            ]\n          }\n        ],\n        hard: [\n          {\n            question: `What is a decorator in ${topic}?`,\n            options: [\n              { optionText: 'A function that modifies another function', isCorrect: true },\n              { optionText: 'A type of variable', isCorrect: false },\n              { optionText: 'A loop construct', isCorrect: false },\n              { optionText: 'An error handler', isCorrect: false }\n            ]\n          }\n        ]\n      }\n    };\n\n    const topicKey = topic.toLowerCase();\n    const difficultyQuestions = templates[topicKey]?.[difficulty] || templates.java[difficulty];\n    const template = difficultyQuestions[index % difficultyQuestions.length];\n    \n    return {\n      questionText: template.question,\n      questionType: 'MULTIPLE_CHOICE',\n      options: template.options.map((opt, idx) => ({\n        ...opt,\n        id: Date.now() + idx\n      })),\n      difficulty: difficulty,\n      topic: topic\n    };\n  };\n\n  const generateTrueFalse = (topic, difficulty, index) => {\n    const statements = {\n      easy: [\n        { text: `${topic} is a programming language`, correct: true },\n        { text: `Variables in ${topic} must be declared before use`, correct: true },\n        { text: `${topic} supports object-oriented programming`, correct: true }\n      ],\n      medium: [\n        { text: `${topic} is compiled to bytecode`, correct: topic.toLowerCase() === 'java' },\n        { text: `${topic} uses garbage collection for memory management`, correct: true }\n      ],\n      hard: [\n        { text: `${topic} supports multiple inheritance of classes`, correct: topic.toLowerCase() === 'python' }\n      ]\n    };\n\n    const difficultyStatements = statements[difficulty];\n    const statement = difficultyStatements[index % difficultyStatements.length];\n    \n    return {\n      questionText: statement.text,\n      questionType: 'TRUE_FALSE',\n      options: [\n        { optionText: 'True', isCorrect: statement.correct, id: Date.now() + 1 },\n        { optionText: 'False', isCorrect: !statement.correct, id: Date.now() + 2 }\n      ],\n      difficulty: difficulty,\n      topic: topic\n    };\n  };\n\n  return (\n    <div style={{\n      backgroundColor: 'white',\n      borderRadius: '12px',\n      padding: '2rem',\n      marginBottom: '2rem',\n      boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)',\n      border: '2px solid #e5e7eb'\n    }}>\n      <h3 style={{\n        fontSize: '1.5rem',\n        fontWeight: '700',\n        color: '#1f2937',\n        marginBottom: '1.5rem',\n        display: 'flex',\n        alignItems: 'center',\n        gap: '0.5rem'\n      }}>\n        ð¤ AI Question Generator\n      </h3>\n      \n      {/* Quiz Creation Toggle */}\n      <div style={{ marginBottom: '1.5rem', padding: '1rem', backgroundColor: '#f8fafc', borderRadius: '8px' }}>\n        <label style={{ display: 'flex', alignItems: 'center', gap: '0.5rem', cursor: 'pointer' }}>\n          <input\n            type=\"checkbox\"\n            checked={createNewQuiz}\n            onChange={(e) => setCreateNewQuiz(e.target.checked)}\n            style={{ width: '18px', height: '18px' }}\n          />\n          <span style={{ fontWeight: '600', color: '#374151' }}>\n            Create new quiz with AI questions\n          </span>\n        </label>\n      </div>\n      \n      {/* New Quiz Form */}\n      {createNewQuiz && (\n        <div style={{ marginBottom: '1.5rem', padding: '1rem', backgroundColor: '#eff6ff', borderRadius: '8px', border: '1px solid #bfdbfe' }}>\n          <h4 style={{ margin: '0 0 1rem 0', color: '#1e40af', fontSize: '1.1rem' }}>New Quiz Details</h4>\n          <div style={{ display: 'grid', gridTemplateColumns: 'repeat(2, 1fr)', gap: '1rem' }}>\n            <div>\n              <label style={{ display: 'block', marginBottom: '0.5rem', fontWeight: '600', color: '#374151' }}>\n                Quiz Title\n              </label>\n              <input\n                type=\"text\"\n                value={newQuizTitle}\n                onChange={(e) => setNewQuizTitle(e.target.value)}\n                placeholder=\"e.g., Java Fundamentals Quiz\"\n                style={{\n                  width: '100%',\n                  padding: '0.75rem',\n                  border: '1px solid #d1d5db',\n                  borderRadius: '6px',\n                  fontSize: '1rem'\n                }}\n              />\n            </div>\n            <div>\n              <label style={{ display: 'block', marginBottom: '0.5rem', fontWeight: '600', color: '#374151' }}>\n                Time Limit (minutes)\n              </label>\n              <input\n                type=\"number\"\n                value={timeLimit}\n                onChange={(e) => setTimeLimit(Math.max(1, parseInt(e.target.value) || 30))}\n                min=\"1\"\n                max=\"180\"\n                style={{\n                  width: '100%',\n                  padding: '0.75rem',\n                  border: '1px solid #d1d5db',\n                  borderRadius: '6px',\n                  fontSize: '1rem'\n                }}\n              />\n            </div>\n          </div>\n          <div style={{ marginTop: '1rem' }}>\n            <label style={{ display: 'block', marginBottom: '0.5rem', fontWeight: '600', color: '#374151' }}>\n              Quiz Description\n            </label>\n            <textarea\n              value={newQuizDescription}\n              onChange={(e) => setNewQuizDescription(e.target.value)}\n              placeholder=\"Brief description of the quiz content and objectives\"\n              rows={3}\n              style={{\n                width: '100%',\n                padding: '0.75rem',\n                border: '1px solid #d1d5db',\n                borderRadius: '6px',\n                fontSize: '1rem',\n                resize: 'vertical'\n              }}\n            />\n          </div>\n        </div>\n      )}\n      \n      {/* Existing Quiz Selector */}\n      {!createNewQuiz && (\n        <div style={{ marginBottom: '1.5rem', padding: '1rem', backgroundColor: '#fef3c7', borderRadius: '8px', border: '1px solid #fde68a' }}>\n          <h4 style={{ margin: '0 0 1rem 0', color: '#92400e', fontSize: '1.1rem' }}>Select Existing Quiz</h4>\n          <select\n            value={selectedExistingQuiz}\n            onChange={(e) => setSelectedExistingQuiz(e.target.value)}\n            style={{\n              width: '100%',\n              padding: '0.75rem',\n              border: '1px solid #d1d5db',\n              borderRadius: '6px',\n              fontSize: '1rem',\n              backgroundColor: 'white'\n            }}\n          >\n            <option value=\"\">Choose a quiz to add questions to...</option>\n            {availableQuizzes.map(quiz => (\n              <option key={quiz.id} value={quiz.id}>{quiz.title}</option>\n            ))}\n          </select>\n        </div>\n      )}\n\n      <div style={{ display: 'grid', gridTemplateColumns: 'repeat(2, 1fr)', gap: '1rem', marginBottom: '1.5rem' }}>\n        <div>\n          <label style={{ display: 'block', marginBottom: '0.5rem', fontWeight: '600', color: '#374151' }}>\n            Topic/Subject\n          </label>\n          <input\n            type=\"text\"\n            value={topic}\n            onChange={(e) => setTopic(e.target.value)}\n            placeholder=\"e.g., Java, Python, React, JavaScript\"\n            style={{\n              width: '100%',\n              padding: '0.75rem',\n              border: '1px solid #d1d5db',\n              borderRadius: '6px',\n              fontSize: '1rem'\n            }}\n          />\n        </div>\n\n        <div>\n          <label style={{ display: 'block', marginBottom: '0.5rem', fontWeight: '600', color: '#374151' }}>\n            Difficulty Level\n          </label>\n          <select\n            value={difficulty}\n            onChange={(e) => setDifficulty(e.target.value)}\n            style={{\n              width: '100%',\n              padding: '0.75rem',\n              border: '1px solid #d1d5db',\n              borderRadius: '6px',\n              fontSize: '1rem',\n              backgroundColor: 'white'\n            }}\n          >\n            <option value=\"easy\">ð¢ Easy</option>\n            <option value=\"medium\">ð¡ Medium</option>\n            <option value=\"hard\">ð´ Hard</option>\n          </select>\n        </div>\n\n        <div>\n          <label style={{ display: 'block', marginBottom: '0.5rem', fontWeight: '600', color: '#374151' }}>\n            Number of Questions\n          </label>\n          <input\n            type=\"number\"\n            value={questionCount}\n            onChange={(e) => setQuestionCount(Math.max(1, Math.min(20, parseInt(e.target.value) || 1)))}\n            min=\"1\"\n            max=\"20\"\n            style={{\n              width: '100%',\n              padding: '0.75rem',\n              border: '1px solid #d1d5db',\n              borderRadius: '6px',\n              fontSize: '1rem'\n            }}\n          />\n        </div>\n\n        <div>\n          <label style={{ display: 'block', marginBottom: '0.5rem', fontWeight: '600', color: '#374151' }}>\n            Question Type\n          </label>\n          <select\n            value={questionType}\n            onChange={(e) => setQuestionType(e.target.value)}\n            style={{\n              width: '100%',\n              padding: '0.75rem',\n              border: '1px solid #d1d5db',\n              borderRadius: '6px',\n              fontSize: '1rem',\n              backgroundColor: 'white'\n            }}\n          >\n            <option value=\"MULTIPLE_CHOICE\">Multiple Choice</option>\n            <option value=\"TRUE_FALSE\">True/False</option>\n          </select>\n        </div>\n      </div>\n\n      <button\n        onClick={generateQuestions}\n        disabled={generating}\n        style={{\n          ...buttonStyles.primary,\n          width: '100%',\n          backgroundColor: generating ? '#9ca3af' : '#8b5cf6',\n          cursor: generating ? 'not-allowed' : 'pointer',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          gap: '0.5rem'\n        }}\n      >\n        {generating ? (\n          <>\n            <div style={{\n              width: '20px',\n              height: '20px',\n              border: '2px solid #ffffff40',\n              borderTop: '2px solid #ffffff',\n              borderRadius: '50%',\n              animation: 'spin 1s linear infinite'\n            }} />\n            Generating Questions...\n          </>\n        ) : (\n          <>\n            â¨ Generate {questionCount} Questions\n          </>\n        )}\n      </button>\n\n      <ToastContainer toasts={toasts} removeToast={removeToast} />\n      \n      <style>\n        {`\n          @keyframes spin {\n            0% { transform: rotate(0deg); }\n            100% { transform: rotate(360deg); }\n          }\n        `}\n      </style>\n    </div>\n  );\n};\n\nexport default AIQuestionGenerator;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,YAAY,QAAQ,gBAAgB;AAC7C,SAASC,QAAQ,EAAEC,cAAc,QAAQ,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEnD,MAAMC,mBAAmB,GAAGA,CAAC;EAAEC,MAAM;EAAEC,oBAAoB;EAAEC,gBAAgB,GAAG;AAAG,CAAC,KAAK;EAAAC,EAAA;EACvF,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACe,UAAU,EAAEC,aAAa,CAAC,GAAGhB,QAAQ,CAAC,QAAQ,CAAC;EACtD,MAAM,CAACiB,aAAa,EAAEC,gBAAgB,CAAC,GAAGlB,QAAQ,CAAC,CAAC,CAAC;EACrD,MAAM,CAACmB,YAAY,EAAEC,eAAe,CAAC,GAAGpB,QAAQ,CAAC,iBAAiB,CAAC;EACnE,MAAM,CAACqB,UAAU,EAAEC,aAAa,CAAC,GAAGtB,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACuB,aAAa,EAAEC,gBAAgB,CAAC,GAAGxB,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACyB,oBAAoB,EAAEC,uBAAuB,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;EACpE,MAAM,CAAC2B,YAAY,EAAEC,eAAe,CAAC,GAAG5B,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAAC6B,kBAAkB,EAAEC,qBAAqB,CAAC,GAAG9B,QAAQ,CAAC,EAAE,CAAC;EAChE,MAAM,CAAC+B,SAAS,EAAEC,YAAY,CAAC,GAAGhC,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM;IAAEiC,MAAM;IAAEC,QAAQ;IAAEC;EAAY,CAAC,GAAGjC,QAAQ,CAAC,CAAC;;EAEpD;EACAkC,SAAS,CAAC,MAAM;IACd,IAAI,CAACb,aAAa,IAAIE,oBAAoB,IAAId,gBAAgB,CAAC0B,MAAM,GAAG,CAAC,EAAE;MACzE,MAAMC,YAAY,GAAG3B,gBAAgB,CAAC4B,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,EAAE,CAACC,QAAQ,CAAC,CAAC,KAAKjB,oBAAoB,CAAC;MACzF,IAAIa,YAAY,EAAE;QAChB;QACA,MAAMK,cAAc,GAAGL,YAAY,CAACM,KAAK,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QACvD/B,QAAQ,CAAC6B,cAAc,CAAC;MAC1B;IACF;EACF,CAAC,EAAE,CAAClB,oBAAoB,EAAEF,aAAa,EAAEZ,gBAAgB,CAAC,CAAC;EAE3D,MAAMmC,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpC,IAAI,CAACjC,KAAK,CAACkC,IAAI,CAAC,CAAC,EAAE;MACjBb,QAAQ,CAAC,sBAAsB,EAAE,OAAO,CAAC;MACzC;IACF;IAEA,IAAIX,aAAa,KAAK,CAACI,YAAY,CAACoB,IAAI,CAAC,CAAC,IAAI,CAAClB,kBAAkB,CAACkB,IAAI,CAAC,CAAC,CAAC,EAAE;MACzEb,QAAQ,CAAC,2CAA2C,EAAE,OAAO,CAAC;MAC9D;IACF;IAEA,IAAI,CAACX,aAAa,IAAI,CAACE,oBAAoB,EAAE;MAC3CS,QAAQ,CAAC,gCAAgC,EAAE,OAAO,CAAC;MACnD;IACF;IAEAZ,aAAa,CAAC,IAAI,CAAC;IAEnB,IAAI;MACF,IAAI0B,YAAY,GAAGzB,aAAa,GAAG,IAAI,GAAGE,oBAAoB;;MAE9D;MACA,IAAIF,aAAa,EAAE;QACjB,MAAM0B,OAAO,GAAG;UACdR,EAAE,EAAES,IAAI,CAACC,GAAG,CAAC,CAAC;UACdP,KAAK,EAAEjB,YAAY;UACnByB,WAAW,EAAEvB,kBAAkB;UAC/BE,SAAS,EAAEA;QACb,CAAC;;QAED;QACA,MAAMsB,eAAe,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC,IAAI,IAAI,CAAC;QAC3EJ,eAAe,CAACK,IAAI,CAACT,OAAO,CAAC;QAC7BO,YAAY,CAACG,OAAO,CAAC,SAAS,EAAEL,IAAI,CAACM,SAAS,CAACP,eAAe,CAAC,CAAC;QAEhEL,YAAY,GAAGC,OAAO,CAACR,EAAE;QACzBP,QAAQ,CAAC,qBAAqBP,YAAY,EAAE,EAAE,SAAS,CAAC;MAC1D;;MAEA;MACA,MAAMkC,kBAAkB,GAAG,MAAMC,oBAAoB,CAACjD,KAAK,EAAEE,UAAU,EAAEE,aAAa,EAAEE,YAAY,CAAC;;MAErG;MACA,MAAM4C,iBAAiB,GAAGT,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,sBAAsB,CAAC,IAAI,IAAI,CAAC;MAC1F,IAAI,CAACM,iBAAiB,CAACf,YAAY,CAAC,EAAE;QACpCe,iBAAiB,CAACf,YAAY,CAAC,GAAG,EAAE;MACtC;MAEAa,kBAAkB,CAACG,OAAO,CAACC,QAAQ,IAAI;QACrCF,iBAAiB,CAACf,YAAY,CAAC,CAACU,IAAI,CAAC;UACnC,GAAGO,QAAQ;UACXxB,EAAE,EAAES,IAAI,CAACC,GAAG,CAAC,CAAC,GAAGe,IAAI,CAACC,MAAM,CAAC,CAAC;UAC9B1D,MAAM,EAAEuC;QACV,CAAC,CAAC;MACJ,CAAC,CAAC;MAEFQ,YAAY,CAACG,OAAO,CAAC,sBAAsB,EAAEL,IAAI,CAACM,SAAS,CAACG,iBAAiB,CAAC,CAAC;MAE/E7B,QAAQ,CAAC,aAAajB,aAAa,0BAA0B,EAAE,SAAS,CAAC;MACzEP,oBAAoB,CAACmD,kBAAkB,CAAC;;MAExC;MACA/C,QAAQ,CAAC,EAAE,CAAC;MACZI,gBAAgB,CAAC,CAAC,CAAC;MACnBU,eAAe,CAAC,EAAE,CAAC;MACnBE,qBAAqB,CAAC,EAAE,CAAC;IAE3B,CAAC,CAAC,OAAOsC,KAAK,EAAE;MACdlC,QAAQ,CAAC,iDAAiD,EAAE,OAAO,CAAC;IACtE,CAAC,SAAS;MACRZ,aAAa,CAAC,KAAK,CAAC;IACtB;EACF,CAAC;EAED,MAAMwC,oBAAoB,GAAGA,CAACjD,KAAK,EAAEE,UAAU,EAAEsD,KAAK,EAAEC,IAAI,KAAK;IAC/D,OAAO,IAAIC,OAAO,CAAEC,OAAO,IAAK;MAC9BC,UAAU,CAAC,MAAM;QACf,MAAMC,SAAS,GAAG,EAAE;QAEpB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGN,KAAK,EAAEM,CAAC,EAAE,EAAE;UAC9B,IAAIL,IAAI,KAAK,iBAAiB,EAAE;YAC9BI,SAAS,CAAChB,IAAI,CAACkB,WAAW,CAAC/D,KAAK,EAAEE,UAAU,EAAE4D,CAAC,GAAG,CAAC,CAAC,CAAC;UACvD,CAAC,MAAM;YACLD,SAAS,CAAChB,IAAI,CAACmB,iBAAiB,CAAChE,KAAK,EAAEE,UAAU,EAAE4D,CAAC,GAAG,CAAC,CAAC,CAAC;UAC7D;QACF;QAEAH,OAAO,CAACE,SAAS,CAAC;MACpB,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;IACZ,CAAC,CAAC;EACJ,CAAC;EAED,MAAME,WAAW,GAAGA,CAAC/D,KAAK,EAAEE,UAAU,EAAE+D,KAAK,KAAK;IAAA,IAAAC,mBAAA;IAChD,MAAMC,SAAS,GAAG;MAChBC,IAAI,EAAE;QACJC,IAAI,EAAE,CACJ;UACEjB,QAAQ,EAAE,oDAAoDpD,KAAK,GAAG;UACtEsE,OAAO,EAAE,CACP;YAAEC,UAAU,EAAE,YAAY;YAAEC,SAAS,EAAE;UAAK,CAAC,EAC7C;YAAED,UAAU,EAAE,gBAAgB;YAAEC,SAAS,EAAE;UAAM,CAAC,EAClD;YAAED,UAAU,EAAE,YAAY;YAAEC,SAAS,EAAE;UAAM,CAAC,EAC9C;YAAED,UAAU,EAAE,QAAQ;YAAEC,SAAS,EAAE;UAAM,CAAC;QAE9C,CAAC,EACD;UACEpB,QAAQ,EAAE,8CAA8CpD,KAAK,GAAG;UAChEsE,OAAO,EAAE,CACP;YAAEC,UAAU,EAAE,OAAO;YAAEC,SAAS,EAAE;UAAK,CAAC,EACxC;YAAED,UAAU,EAAE,OAAO;YAAEC,SAAS,EAAE;UAAM,CAAC,EACzC;YAAED,UAAU,EAAE,KAAK;YAAEC,SAAS,EAAE;UAAM,CAAC,EACvC;YAAED,UAAU,EAAE,QAAQ;YAAEC,SAAS,EAAE;UAAM,CAAC;QAE9C,CAAC,CACF;QACDC,MAAM,EAAE,CACN;UACErB,QAAQ,EAAE,iEAAiEpD,KAAK,GAAG;UACnFsE,OAAO,EAAE,CACP;YAAEC,UAAU,EAAE,GAAG;YAAEC,SAAS,EAAE;UAAK,CAAC,EACpC;YAAED,UAAU,EAAE,GAAG;YAAEC,SAAS,EAAE;UAAM,CAAC,EACrC;YAAED,UAAU,EAAE,GAAG;YAAEC,SAAS,EAAE;UAAM,CAAC,EACrC;YAAED,UAAU,EAAE,OAAO;YAAEC,SAAS,EAAE;UAAM,CAAC;QAE7C,CAAC,EACD;UACEpB,QAAQ,EAAE,uDAAuDpD,KAAK,GAAG;UACzEsE,OAAO,EAAE,CACP;YAAEC,UAAU,EAAE,WAAW;YAAEC,SAAS,EAAE;UAAK,CAAC,EAC5C;YAAED,UAAU,EAAE,SAAS;YAAEC,SAAS,EAAE;UAAM,CAAC,EAC3C;YAAED,UAAU,EAAE,SAAS;YAAEC,SAAS,EAAE;UAAM,CAAC,EAC3C;YAAED,UAAU,EAAE,eAAe;YAAEC,SAAS,EAAE;UAAM,CAAC;QAErD,CAAC,CACF;QACDE,IAAI,EAAE,CACJ;UACEtB,QAAQ,EAAE,6DAA6DpD,KAAK,GAAG;UAC/EsE,OAAO,EAAE,CACP;YAAEC,UAAU,EAAE,mBAAmB;YAAEC,SAAS,EAAE;UAAK,CAAC,EACpD;YAAED,UAAU,EAAE,UAAU;YAAEC,SAAS,EAAE;UAAM,CAAC,EAC5C;YAAED,UAAU,EAAE,MAAM;YAAEC,SAAS,EAAE;UAAM,CAAC,EACxC;YAAED,UAAU,EAAE,OAAO;YAAEC,SAAS,EAAE;UAAM,CAAC;QAE7C,CAAC;MAEL,CAAC;MACDG,MAAM,EAAE;QACNN,IAAI,EAAE,CACJ;UACEjB,QAAQ,EAAE,+BAA+BpD,KAAK,GAAG;UACjDsE,OAAO,EAAE,CACP;YAAEC,UAAU,EAAE,cAAc;YAAEC,SAAS,EAAE;UAAK,CAAC,EAC/C;YAAED,UAAU,EAAE,cAAc;YAAEC,SAAS,EAAE;UAAM,CAAC,EAChD;YAAED,UAAU,EAAE,cAAc;YAAEC,SAAS,EAAE;UAAM,CAAC,EAChD;YAAED,UAAU,EAAE,cAAc;YAAEC,SAAS,EAAE;UAAM,CAAC;QAEpD,CAAC,CACF;QACDC,MAAM,EAAE,CACN;UACErB,QAAQ,EAAE,0CAA0CpD,KAAK,GAAG;UAC5DsE,OAAO,EAAE,CACP;YAAEC,UAAU,EAAE,GAAG;YAAEC,SAAS,EAAE;UAAK,CAAC,EACpC;YAAED,UAAU,EAAE,GAAG;YAAEC,SAAS,EAAE;UAAM,CAAC,EACrC;YAAED,UAAU,EAAE,GAAG;YAAEC,SAAS,EAAE;UAAM,CAAC,EACrC;YAAED,UAAU,EAAE,OAAO;YAAEC,SAAS,EAAE;UAAM,CAAC;QAE7C,CAAC,CACF;QACDE,IAAI,EAAE,CACJ;UACEtB,QAAQ,EAAE,0BAA0BpD,KAAK,GAAG;UAC5CsE,OAAO,EAAE,CACP;YAAEC,UAAU,EAAE,2CAA2C;YAAEC,SAAS,EAAE;UAAK,CAAC,EAC5E;YAAED,UAAU,EAAE,oBAAoB;YAAEC,SAAS,EAAE;UAAM,CAAC,EACtD;YAAED,UAAU,EAAE,kBAAkB;YAAEC,SAAS,EAAE;UAAM,CAAC,EACpD;YAAED,UAAU,EAAE,kBAAkB;YAAEC,SAAS,EAAE;UAAM,CAAC;QAExD,CAAC;MAEL;IACF,CAAC;IAED,MAAMI,QAAQ,GAAG5E,KAAK,CAAC6E,WAAW,CAAC,CAAC;IACpC,MAAMC,mBAAmB,GAAG,EAAAZ,mBAAA,GAAAC,SAAS,CAACS,QAAQ,CAAC,cAAAV,mBAAA,uBAAnBA,mBAAA,CAAsBhE,UAAU,CAAC,KAAIiE,SAAS,CAACC,IAAI,CAAClE,UAAU,CAAC;IAC3F,MAAM6E,QAAQ,GAAGD,mBAAmB,CAACb,KAAK,GAAGa,mBAAmB,CAACtD,MAAM,CAAC;IAExE,OAAO;MACLwD,YAAY,EAAED,QAAQ,CAAC3B,QAAQ;MAC/B9C,YAAY,EAAE,iBAAiB;MAC/BgE,OAAO,EAAES,QAAQ,CAACT,OAAO,CAACW,GAAG,CAAC,CAACC,GAAG,EAAEC,GAAG,MAAM;QAC3C,GAAGD,GAAG;QACNtD,EAAE,EAAES,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG6C;MACnB,CAAC,CAAC,CAAC;MACHjF,UAAU,EAAEA,UAAU;MACtBF,KAAK,EAAEA;IACT,CAAC;EACH,CAAC;EAED,MAAMgE,iBAAiB,GAAGA,CAAChE,KAAK,EAAEE,UAAU,EAAE+D,KAAK,KAAK;IACtD,MAAMmB,UAAU,GAAG;MACjBf,IAAI,EAAE,CACJ;QAAEgB,IAAI,EAAE,GAAGrF,KAAK,4BAA4B;QAAEsF,OAAO,EAAE;MAAK,CAAC,EAC7D;QAAED,IAAI,EAAE,gBAAgBrF,KAAK,8BAA8B;QAAEsF,OAAO,EAAE;MAAK,CAAC,EAC5E;QAAED,IAAI,EAAE,GAAGrF,KAAK,uCAAuC;QAAEsF,OAAO,EAAE;MAAK,CAAC,CACzE;MACDb,MAAM,EAAE,CACN;QAAEY,IAAI,EAAE,GAAGrF,KAAK,0BAA0B;QAAEsF,OAAO,EAAEtF,KAAK,CAAC6E,WAAW,CAAC,CAAC,KAAK;MAAO,CAAC,EACrF;QAAEQ,IAAI,EAAE,GAAGrF,KAAK,gDAAgD;QAAEsF,OAAO,EAAE;MAAK,CAAC,CAClF;MACDZ,IAAI,EAAE,CACJ;QAAEW,IAAI,EAAE,GAAGrF,KAAK,2CAA2C;QAAEsF,OAAO,EAAEtF,KAAK,CAAC6E,WAAW,CAAC,CAAC,KAAK;MAAS,CAAC;IAE5G,CAAC;IAED,MAAMU,oBAAoB,GAAGH,UAAU,CAAClF,UAAU,CAAC;IACnD,MAAMsF,SAAS,GAAGD,oBAAoB,CAACtB,KAAK,GAAGsB,oBAAoB,CAAC/D,MAAM,CAAC;IAE3E,OAAO;MACLwD,YAAY,EAAEQ,SAAS,CAACH,IAAI;MAC5B/E,YAAY,EAAE,YAAY;MAC1BgE,OAAO,EAAE,CACP;QAAEC,UAAU,EAAE,MAAM;QAAEC,SAAS,EAAEgB,SAAS,CAACF,OAAO;QAAE1D,EAAE,EAAES,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG;MAAE,CAAC,EACxE;QAAEiC,UAAU,EAAE,OAAO;QAAEC,SAAS,EAAE,CAACgB,SAAS,CAACF,OAAO;QAAE1D,EAAE,EAAES,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG;MAAE,CAAC,CAC3E;MACDpC,UAAU,EAAEA,UAAU;MACtBF,KAAK,EAAEA;IACT,CAAC;EACH,CAAC;EAED,oBACER,OAAA;IAAKiG,KAAK,EAAE;MACVC,eAAe,EAAE,OAAO;MACxBC,YAAY,EAAE,MAAM;MACpBC,OAAO,EAAE,MAAM;MACfC,YAAY,EAAE,MAAM;MACpBC,SAAS,EAAE,8BAA8B;MACzCC,MAAM,EAAE;IACV,CAAE;IAAAC,QAAA,gBACAxG,OAAA;MAAIiG,KAAK,EAAE;QACTQ,QAAQ,EAAE,QAAQ;QAClBC,UAAU,EAAE,KAAK;QACjBC,KAAK,EAAE,SAAS;QAChBN,YAAY,EAAE,QAAQ;QACtBO,OAAO,EAAE,MAAM;QACfC,UAAU,EAAE,QAAQ;QACpBC,GAAG,EAAE;MACP,CAAE;MAAAN,QAAA,EAAC;IAEH;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAGLlH,OAAA;MAAKiG,KAAK,EAAE;QAAEI,YAAY,EAAE,QAAQ;QAAED,OAAO,EAAE,MAAM;QAAEF,eAAe,EAAE,SAAS;QAAEC,YAAY,EAAE;MAAM,CAAE;MAAAK,QAAA,eACvGxG,OAAA;QAAOiG,KAAK,EAAE;UAAEW,OAAO,EAAE,MAAM;UAAEC,UAAU,EAAE,QAAQ;UAAEC,GAAG,EAAE,QAAQ;UAAEK,MAAM,EAAE;QAAU,CAAE;QAAAX,QAAA,gBACxFxG,OAAA;UACEiE,IAAI,EAAC,UAAU;UACfmD,OAAO,EAAElG,aAAc;UACvBmG,QAAQ,EAAGC,CAAC,IAAKnG,gBAAgB,CAACmG,CAAC,CAACC,MAAM,CAACH,OAAO,CAAE;UACpDnB,KAAK,EAAE;YAAEuB,KAAK,EAAE,MAAM;YAAEC,MAAM,EAAE;UAAO;QAAE;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1C,CAAC,eACFlH,OAAA;UAAMiG,KAAK,EAAE;YAAES,UAAU,EAAE,KAAK;YAAEC,KAAK,EAAE;UAAU,CAAE;UAAAH,QAAA,EAAC;QAEtD;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,EAGLhG,aAAa,iBACZlB,OAAA;MAAKiG,KAAK,EAAE;QAAEI,YAAY,EAAE,QAAQ;QAAED,OAAO,EAAE,MAAM;QAAEF,eAAe,EAAE,SAAS;QAAEC,YAAY,EAAE,KAAK;QAAEI,MAAM,EAAE;MAAoB,CAAE;MAAAC,QAAA,gBACpIxG,OAAA;QAAIiG,KAAK,EAAE;UAAEyB,MAAM,EAAE,YAAY;UAAEf,KAAK,EAAE,SAAS;UAAEF,QAAQ,EAAE;QAAS,CAAE;QAAAD,QAAA,EAAC;MAAgB;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAChGlH,OAAA;QAAKiG,KAAK,EAAE;UAAEW,OAAO,EAAE,MAAM;UAAEe,mBAAmB,EAAE,gBAAgB;UAAEb,GAAG,EAAE;QAAO,CAAE;QAAAN,QAAA,gBAClFxG,OAAA;UAAAwG,QAAA,gBACExG,OAAA;YAAOiG,KAAK,EAAE;cAAEW,OAAO,EAAE,OAAO;cAAEP,YAAY,EAAE,QAAQ;cAAEK,UAAU,EAAE,KAAK;cAAEC,KAAK,EAAE;YAAU,CAAE;YAAAH,QAAA,EAAC;UAEjG;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACRlH,OAAA;YACEiE,IAAI,EAAC,MAAM;YACX2D,KAAK,EAAEtG,YAAa;YACpB+F,QAAQ,EAAGC,CAAC,IAAK/F,eAAe,CAAC+F,CAAC,CAACC,MAAM,CAACK,KAAK,CAAE;YACjDC,WAAW,EAAC,8BAA8B;YAC1C5B,KAAK,EAAE;cACLuB,KAAK,EAAE,MAAM;cACbpB,OAAO,EAAE,SAAS;cAClBG,MAAM,EAAE,mBAAmB;cAC3BJ,YAAY,EAAE,KAAK;cACnBM,QAAQ,EAAE;YACZ;UAAE;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eACNlH,OAAA;UAAAwG,QAAA,gBACExG,OAAA;YAAOiG,KAAK,EAAE;cAAEW,OAAO,EAAE,OAAO;cAAEP,YAAY,EAAE,QAAQ;cAAEK,UAAU,EAAE,KAAK;cAAEC,KAAK,EAAE;YAAU,CAAE;YAAAH,QAAA,EAAC;UAEjG;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACRlH,OAAA;YACEiE,IAAI,EAAC,QAAQ;YACb2D,KAAK,EAAElG,SAAU;YACjB2F,QAAQ,EAAGC,CAAC,IAAK3F,YAAY,CAACkC,IAAI,CAACiE,GAAG,CAAC,CAAC,EAAEC,QAAQ,CAACT,CAAC,CAACC,MAAM,CAACK,KAAK,CAAC,IAAI,EAAE,CAAC,CAAE;YAC3EI,GAAG,EAAC,GAAG;YACPF,GAAG,EAAC,KAAK;YACT7B,KAAK,EAAE;cACLuB,KAAK,EAAE,MAAM;cACbpB,OAAO,EAAE,SAAS;cAClBG,MAAM,EAAE,mBAAmB;cAC3BJ,YAAY,EAAE,KAAK;cACnBM,QAAQ,EAAE;YACZ;UAAE;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eACNlH,OAAA;QAAKiG,KAAK,EAAE;UAAEgC,SAAS,EAAE;QAAO,CAAE;QAAAzB,QAAA,gBAChCxG,OAAA;UAAOiG,KAAK,EAAE;YAAEW,OAAO,EAAE,OAAO;YAAEP,YAAY,EAAE,QAAQ;YAAEK,UAAU,EAAE,KAAK;YAAEC,KAAK,EAAE;UAAU,CAAE;UAAAH,QAAA,EAAC;QAEjG;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACRlH,OAAA;UACE4H,KAAK,EAAEpG,kBAAmB;UAC1B6F,QAAQ,EAAGC,CAAC,IAAK7F,qBAAqB,CAAC6F,CAAC,CAACC,MAAM,CAACK,KAAK,CAAE;UACvDC,WAAW,EAAC,sDAAsD;UAClEK,IAAI,EAAE,CAAE;UACRjC,KAAK,EAAE;YACLuB,KAAK,EAAE,MAAM;YACbpB,OAAO,EAAE,SAAS;YAClBG,MAAM,EAAE,mBAAmB;YAC3BJ,YAAY,EAAE,KAAK;YACnBM,QAAQ,EAAE,MAAM;YAChB0B,MAAM,EAAE;UACV;QAAE;UAAApB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN,EAGA,CAAChG,aAAa,iBACblB,OAAA;MAAKiG,KAAK,EAAE;QAAEI,YAAY,EAAE,QAAQ;QAAED,OAAO,EAAE,MAAM;QAAEF,eAAe,EAAE,SAAS;QAAEC,YAAY,EAAE,KAAK;QAAEI,MAAM,EAAE;MAAoB,CAAE;MAAAC,QAAA,gBACpIxG,OAAA;QAAIiG,KAAK,EAAE;UAAEyB,MAAM,EAAE,YAAY;UAAEf,KAAK,EAAE,SAAS;UAAEF,QAAQ,EAAE;QAAS,CAAE;QAAAD,QAAA,EAAC;MAAoB;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACpGlH,OAAA;QACE4H,KAAK,EAAExG,oBAAqB;QAC5BiG,QAAQ,EAAGC,CAAC,IAAKjG,uBAAuB,CAACiG,CAAC,CAACC,MAAM,CAACK,KAAK,CAAE;QACzD3B,KAAK,EAAE;UACLuB,KAAK,EAAE,MAAM;UACbpB,OAAO,EAAE,SAAS;UAClBG,MAAM,EAAE,mBAAmB;UAC3BJ,YAAY,EAAE,KAAK;UACnBM,QAAQ,EAAE,MAAM;UAChBP,eAAe,EAAE;QACnB,CAAE;QAAAM,QAAA,gBAEFxG,OAAA;UAAQ4H,KAAK,EAAC,EAAE;UAAApB,QAAA,EAAC;QAAoC;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EAC7D5G,gBAAgB,CAACmF,GAAG,CAAC2C,IAAI,iBACxBpI,OAAA;UAAsB4H,KAAK,EAAEQ,IAAI,CAAChG,EAAG;UAAAoE,QAAA,EAAE4B,IAAI,CAAC7F;QAAK,GAApC6F,IAAI,CAAChG,EAAE;UAAA2E,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAsC,CAC3D,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CACN,eAEDlH,OAAA;MAAKiG,KAAK,EAAE;QAAEW,OAAO,EAAE,MAAM;QAAEe,mBAAmB,EAAE,gBAAgB;QAAEb,GAAG,EAAE,MAAM;QAAET,YAAY,EAAE;MAAS,CAAE;MAAAG,QAAA,gBAC1GxG,OAAA;QAAAwG,QAAA,gBACExG,OAAA;UAAOiG,KAAK,EAAE;YAAEW,OAAO,EAAE,OAAO;YAAEP,YAAY,EAAE,QAAQ;YAAEK,UAAU,EAAE,KAAK;YAAEC,KAAK,EAAE;UAAU,CAAE;UAAAH,QAAA,EAAC;QAEjG;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACRlH,OAAA;UACEiE,IAAI,EAAC,MAAM;UACX2D,KAAK,EAAEpH,KAAM;UACb6G,QAAQ,EAAGC,CAAC,IAAK7G,QAAQ,CAAC6G,CAAC,CAACC,MAAM,CAACK,KAAK,CAAE;UAC1CC,WAAW,EAAC,uCAAuC;UACnD5B,KAAK,EAAE;YACLuB,KAAK,EAAE,MAAM;YACbpB,OAAO,EAAE,SAAS;YAClBG,MAAM,EAAE,mBAAmB;YAC3BJ,YAAY,EAAE,KAAK;YACnBM,QAAQ,EAAE;UACZ;QAAE;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eAENlH,OAAA;QAAAwG,QAAA,gBACExG,OAAA;UAAOiG,KAAK,EAAE;YAAEW,OAAO,EAAE,OAAO;YAAEP,YAAY,EAAE,QAAQ;YAAEK,UAAU,EAAE,KAAK;YAAEC,KAAK,EAAE;UAAU,CAAE;UAAAH,QAAA,EAAC;QAEjG;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACRlH,OAAA;UACE4H,KAAK,EAAElH,UAAW;UAClB2G,QAAQ,EAAGC,CAAC,IAAK3G,aAAa,CAAC2G,CAAC,CAACC,MAAM,CAACK,KAAK,CAAE;UAC/C3B,KAAK,EAAE;YACLuB,KAAK,EAAE,MAAM;YACbpB,OAAO,EAAE,SAAS;YAClBG,MAAM,EAAE,mBAAmB;YAC3BJ,YAAY,EAAE,KAAK;YACnBM,QAAQ,EAAE,MAAM;YAChBP,eAAe,EAAE;UACnB,CAAE;UAAAM,QAAA,gBAEFxG,OAAA;YAAQ4H,KAAK,EAAC,MAAM;YAAApB,QAAA,EAAC;UAAO;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACrClH,OAAA;YAAQ4H,KAAK,EAAC,QAAQ;YAAApB,QAAA,EAAC;UAAS;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACzClH,OAAA;YAAQ4H,KAAK,EAAC,MAAM;YAAApB,QAAA,EAAC;UAAO;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/B,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eAENlH,OAAA;QAAAwG,QAAA,gBACExG,OAAA;UAAOiG,KAAK,EAAE;YAAEW,OAAO,EAAE,OAAO;YAAEP,YAAY,EAAE,QAAQ;YAAEK,UAAU,EAAE,KAAK;YAAEC,KAAK,EAAE;UAAU,CAAE;UAAAH,QAAA,EAAC;QAEjG;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACRlH,OAAA;UACEiE,IAAI,EAAC,QAAQ;UACb2D,KAAK,EAAEhH,aAAc;UACrByG,QAAQ,EAAGC,CAAC,IAAKzG,gBAAgB,CAACgD,IAAI,CAACiE,GAAG,CAAC,CAAC,EAAEjE,IAAI,CAACmE,GAAG,CAAC,EAAE,EAAED,QAAQ,CAACT,CAAC,CAACC,MAAM,CAACK,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAE;UAC5FI,GAAG,EAAC,GAAG;UACPF,GAAG,EAAC,IAAI;UACR7B,KAAK,EAAE;YACLuB,KAAK,EAAE,MAAM;YACbpB,OAAO,EAAE,SAAS;YAClBG,MAAM,EAAE,mBAAmB;YAC3BJ,YAAY,EAAE,KAAK;YACnBM,QAAQ,EAAE;UACZ;QAAE;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eAENlH,OAAA;QAAAwG,QAAA,gBACExG,OAAA;UAAOiG,KAAK,EAAE;YAAEW,OAAO,EAAE,OAAO;YAAEP,YAAY,EAAE,QAAQ;YAAEK,UAAU,EAAE,KAAK;YAAEC,KAAK,EAAE;UAAU,CAAE;UAAAH,QAAA,EAAC;QAEjG;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACRlH,OAAA;UACE4H,KAAK,EAAE9G,YAAa;UACpBuG,QAAQ,EAAGC,CAAC,IAAKvG,eAAe,CAACuG,CAAC,CAACC,MAAM,CAACK,KAAK,CAAE;UACjD3B,KAAK,EAAE;YACLuB,KAAK,EAAE,MAAM;YACbpB,OAAO,EAAE,SAAS;YAClBG,MAAM,EAAE,mBAAmB;YAC3BJ,YAAY,EAAE,KAAK;YACnBM,QAAQ,EAAE,MAAM;YAChBP,eAAe,EAAE;UACnB,CAAE;UAAAM,QAAA,gBAEFxG,OAAA;YAAQ4H,KAAK,EAAC,iBAAiB;YAAApB,QAAA,EAAC;UAAe;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACxDlH,OAAA;YAAQ4H,KAAK,EAAC,YAAY;YAAApB,QAAA,EAAC;UAAU;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAENlH,OAAA;MACEqI,OAAO,EAAE5F,iBAAkB;MAC3B6F,QAAQ,EAAEtH,UAAW;MACrBiF,KAAK,EAAE;QACL,GAAGrG,YAAY,CAAC2I,OAAO;QACvBf,KAAK,EAAE,MAAM;QACbtB,eAAe,EAAElF,UAAU,GAAG,SAAS,GAAG,SAAS;QACnDmG,MAAM,EAAEnG,UAAU,GAAG,aAAa,GAAG,SAAS;QAC9C4F,OAAO,EAAE,MAAM;QACfC,UAAU,EAAE,QAAQ;QACpB2B,cAAc,EAAE,QAAQ;QACxB1B,GAAG,EAAE;MACP,CAAE;MAAAN,QAAA,EAEDxF,UAAU,gBACThB,OAAA,CAAAE,SAAA;QAAAsG,QAAA,gBACExG,OAAA;UAAKiG,KAAK,EAAE;YACVuB,KAAK,EAAE,MAAM;YACbC,MAAM,EAAE,MAAM;YACdlB,MAAM,EAAE,qBAAqB;YAC7BkC,SAAS,EAAE,mBAAmB;YAC9BtC,YAAY,EAAE,KAAK;YACnBuC,SAAS,EAAE;UACb;QAAE;UAAA3B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,2BAEP;MAAA,eAAE,CAAC,gBAEHlH,OAAA,CAAAE,SAAA;QAAAsG,QAAA,GAAE,kBACW,EAAC5F,aAAa,EAAC,YAC5B;MAAA,eAAE;IACH;MAAAmG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACK,CAAC,eAETlH,OAAA,CAACF,cAAc;MAAC8B,MAAM,EAAEA,MAAO;MAACE,WAAW,EAAEA;IAAY;MAAAiF,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAE5DlH,OAAA;MAAAwG,QAAA,EACG;AACT;AACA;AACA;AACA;AACA;IAAS;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV,CAAC;AAAC3G,EAAA,CA9fIJ,mBAAmB;EAAA,QAWmBN,QAAQ;AAAA;AAAA8I,EAAA,GAX9CxI,mBAAmB;AAggBzB,eAAeA,mBAAmB;AAAC,IAAAwI,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}