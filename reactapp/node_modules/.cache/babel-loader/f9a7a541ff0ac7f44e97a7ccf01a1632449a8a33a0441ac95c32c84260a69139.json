{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sanje\\\\Downloads\\\\PROJECTS\\\\QuizSystem\\\\reactapp\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route, useNavigate, useLocation } from 'react-router-dom';\nimport './App.css'; // Assuming this file exists and is correctly linked\nimport './components/Navigation.css';\nimport QuizList from './components/QuizList';\nimport QuizForm from './components/QuizForm';\nimport QuestionForm from './components/QuestionForm';\nimport TakeQuiz from './components/TakeQuiz';\nimport QuizResults from './components/QuizResults';\nimport QuizViewQuestions from './components/QuizViewQuestions';\nimport Login from './components/Login';\nimport StudentResults from './components/StudentResults';\nimport ManageQuizzes from './components/ManageQuizzes';\nimport QuestionBank from './components/QuestionBank';\nimport AllStudentResults from './components/AllStudentResults';\nimport UserAccounts from './components/UserAccounts';\nimport Leaderboard from './components/Leaderboard';\nimport AdminLeaderboard from './components/AdminLeaderboard';\nimport EnhancedStudentDashboard from './components/EnhancedStudentDashboard';\nimport EnhancedAdminDashboard from './components/EnhancedAdminDashboard';\nimport AIQuestionGenerator from './components/AIQuestionGenerator';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction AppWithRouter() {\n  _s();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [selectedQuizId, setSelectedQuizId] = useState(null);\n  const [quizListKey, setQuizListKey] = useState(0); // Key to force QuizList refresh\n  const [attemptResult, setAttemptResult] = useState(null);\n  // Initial state for login flow\n  const [view, setView] = useState('login');\n  // Default role to admin for initial dashboard view\n  const [userRole, setUserRole] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false); // Start with login\n\n  // Check for existing session on app load\n  useEffect(() => {\n    // Always start at login - removed auto-authentication\n  }, []);\n  useEffect(() => {\n    if (!isAuthenticated) {\n      setView('login');\n      if (location.pathname !== '/login') navigate('/login');\n      return;\n    }\n    const path = location.pathname;\n    if (path === '/') {\n      if (userRole) {\n        const dashboardView = userRole === 'admin' ? 'admin-dashboard' : 'student-dashboard';\n        setView(dashboardView);\n        navigate(userRole === 'admin' ? '/admin' : '/student');\n      } else {\n        setView('login');\n        navigate('/login');\n      }\n    } else if (path === '/login') {\n      if (userRole) {\n        const dashboardView = userRole === 'admin' ? 'admin-dashboard' : 'student-dashboard';\n        setView(dashboardView);\n        navigate(userRole === 'admin' ? '/admin' : '/student');\n      } else {\n        setView('login');\n      }\n    } else if (path === '/admin') setView('admin-dashboard');else if (path === '/student') setView('student-dashboard');else if (path === '/my-results') setView('my-results');else if (path === '/manage-quizzes') setView('manage-quizzes');else if (path === '/question-bank') setView('question-bank');else if (path === '/all-results') setView('all-results');else if (path === '/user-accounts') setView('user-accounts');else if (path === '/student-leaderboard') setView('student-leaderboard');else if (path === '/admin-leaderboard') setView('admin-leaderboard');else if (path.startsWith('/take-quiz/')) {\n      setView('take-quiz');\n      setSelectedQuizId(path.split('/')[2]);\n    } else if (path === '/results') setView('results');else if (path.startsWith('/view-questions/')) {\n      setView('view-questions');\n      setSelectedQuizId(path.split('/')[2]);\n    }\n  }, [location.pathname, isAuthenticated, userRole, navigate]);\n\n  // Handler for login\n  const handleLogin = role => {\n    setIsAuthenticated(true);\n    setUserRole(role);\n    localStorage.setItem('isAuthenticated', 'true');\n    localStorage.setItem('userRole', role);\n    const newView = role === 'admin' ? 'admin-dashboard' : 'student-dashboard';\n    setView(newView);\n    navigate(role === 'admin' ? '/admin' : '/student');\n  };\n\n  // Handler for logout\n  const handleLogout = () => {\n    setIsAuthenticated(false);\n    setUserRole(null);\n    localStorage.removeItem('isAuthenticated');\n    localStorage.removeItem('userRole');\n    setView('login');\n    navigate('/login');\n  };\n\n  // Handler for when a role is selected (from 'home' view)\n  const handleRoleSelection = role => {\n    setUserRole(role);\n    const newView = role === 'admin' ? 'admin-dashboard' : 'student-dashboard';\n    setView(newView);\n    navigate(role === 'admin' ? '/admin' : '/student');\n  };\n\n  // Handler for when a new quiz is created\n  const handleQuizCreated = () => {\n    setQuizListKey(prevKey => prevKey + 1); // Forces QuizList to re-fetch\n    setSelectedQuizId(null); // Clears selected quiz, hiding QuestionForm\n    setView('admin-dashboard'); // Ensures we stay on admin dashboard\n    navigate('/admin');\n  };\n  const handleQuestionAdded = () => {\n    // If currently viewing questions for this quiz, force a refresh of that view\n    if (view === 'view-questions' && selectedQuizId) {\n      setQuizListKey(prevKey => prevKey + 1); // Remounts QuizViewQuestions\n    } else {\n      setView('admin-dashboard'); // Stay on admin dashboard\n      navigate('/admin');\n    }\n  };\n  const handleAdminSelectQuiz = quizId => {\n    setSelectedQuizId(quizId);\n    setView('admin-dashboard'); // Stay on admin dashboard to show QuestionForm\n    navigate('/admin');\n  };\n  const handleViewQuestions = quizId => {\n    setSelectedQuizId(quizId);\n    setView('view-questions'); // Switch to the dedicated view questions screen\n    navigate(`/view-questions/${quizId}`);\n  };\n\n  // Handler for students to take a quiz\n  const handleStudentSelectQuiz = quizId => {\n    setSelectedQuizId(quizId);\n    setView('take-quiz');\n    navigate(`/take-quiz/${quizId}`);\n  };\n\n  // Handler for when a student completes a quiz\n  const handleQuizCompleted = result => {\n    setAttemptResult(result);\n    setView('results'); // Show quiz results screen\n    navigate('/results');\n  };\n\n  // Handler to return to the initial role selection screen\n  const handleReturnHome = () => {\n    setQuizListKey(prevKey => prevKey + 1); // Refresh QuizList\n    if (userRole) {\n      const dashboardView = userRole === 'admin' ? 'admin-dashboard' : 'student-dashboard';\n      setView(dashboardView);\n      navigate(userRole === 'admin' ? '/admin' : '/student');\n    } else {\n      setView('home');\n      navigate('/');\n    }\n    setSelectedQuizId(null); // Clear selections\n    setAttemptResult(null);\n  };\n\n  // New navigation handlers\n  const handleViewMyResults = () => {\n    setView('my-results');\n    navigate('/my-results');\n  };\n  const handleManageQuizzes = () => {\n    setView('manage-quizzes');\n    navigate('/manage-quizzes');\n  };\n  const handleQuestionBank = () => {\n    setView('question-bank');\n    navigate('/question-bank');\n  };\n  const handleAllResults = () => {\n    setView('all-results');\n    navigate('/all-results');\n  };\n  const handleUserAccounts = () => {\n    setView('user-accounts');\n    navigate('/user-accounts');\n  };\n  const handleStudentLeaderboard = () => {\n    setView('student-leaderboard');\n    navigate('/student-leaderboard');\n  };\n  const handleAdminLeaderboard = () => {\n    setView('admin-leaderboard');\n    navigate('/admin-leaderboard');\n  };\n  const handleDeleteQuiz = async quizId => {\n    try {\n      const BASE_URL = 'http://localhost:8080';\n      await axios.delete(`${BASE_URL}/api/quizzes/${quizId}`);\n    } catch (error) {\n      // Fallback to localStorage\n      const quizzes = JSON.parse(localStorage.getItem('quizzes') || '[]');\n      const updatedQuizzes = quizzes.filter(quiz => quiz.id !== quizId);\n      localStorage.setItem('quizzes', JSON.stringify(updatedQuizzes));\n    }\n    setQuizListKey(prevKey => prevKey + 1); // Refresh quiz list\n  };\n\n  // Renders content based on the current 'view' state\n  const renderContent = () => {\n    if (!isAuthenticated) {\n      return /*#__PURE__*/_jsxDEV(Login, {\n        onLogin: handleLogin\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 8\n      }, this);\n    }\n    switch (view) {\n      case 'login':\n        return /*#__PURE__*/_jsxDEV(Login, {\n          onLogin: handleLogin\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 8\n        }, this);\n      case 'home':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"role-selection-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Select Your Role\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleRoleSelection('admin'),\n            className: \"role-button admin-button\",\n            children: \"Admin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleRoleSelection('student'),\n            className: \"role-button student-button\",\n            children: \"Student\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 1\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 1\n        }, this);\n      case 'admin-dashboard':\n        return /*#__PURE__*/_jsxDEV(EnhancedAdminDashboard, {\n          onManageQuizzes: handleManageQuizzes,\n          onQuestionBank: handleQuestionBank,\n          onAllResults: handleAllResults,\n          onUserAccounts: handleUserAccounts,\n          onLeaderboard: handleAdminLeaderboard,\n          onQuizCreated: handleQuizCreated,\n          onQuestionAdded: handleQuestionAdded,\n          onSelectQuiz: handleAdminSelectQuiz,\n          onViewQuestions: handleViewQuestions,\n          onDeleteQuiz: handleDeleteQuiz,\n          selectedQuizId: selectedQuizId,\n          quizListKey: quizListKey,\n          AIQuestionGenerator: AIQuestionGenerator\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 1\n        }, this);\n      case 'student-dashboard':\n        return /*#__PURE__*/_jsxDEV(EnhancedStudentDashboard, {\n          onSelectQuiz: handleStudentSelectQuiz,\n          onViewMyResults: handleViewMyResults,\n          onLeaderboard: handleStudentLeaderboard\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 1\n        }, this);\n      case 'take-quiz':\n        return /*#__PURE__*/_jsxDEV(TakeQuiz, {\n          quizId: selectedQuizId,\n          onQuizCompleted: handleQuizCompleted\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 8\n        }, this);\n      case 'results':\n        return /*#__PURE__*/_jsxDEV(QuizResults, {\n          attempt: attemptResult,\n          onReturnHome: handleReturnHome\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 8\n        }, this);\n      case 'view-questions':\n        return /*#__PURE__*/_jsxDEV(QuizViewQuestions, {\n          quizId: selectedQuizId,\n          onReturnHome: handleReturnHome\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 8\n        }, this);\n      case 'my-results':\n        return /*#__PURE__*/_jsxDEV(StudentResults, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 8\n        }, this);\n      case 'manage-quizzes':\n        return /*#__PURE__*/_jsxDEV(ManageQuizzes, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 8\n        }, this);\n      case 'question-bank':\n        return /*#__PURE__*/_jsxDEV(QuestionBank, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 8\n        }, this);\n      case 'all-results':\n        return /*#__PURE__*/_jsxDEV(AllStudentResults, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 8\n        }, this);\n      case 'user-accounts':\n        return /*#__PURE__*/_jsxDEV(UserAccounts, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 8\n        }, this);\n      case 'student-leaderboard':\n        return /*#__PURE__*/_jsxDEV(Leaderboard, {\n          onBack: handleReturnHome\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 8\n        }, this);\n      case 'admin-leaderboard':\n        return /*#__PURE__*/_jsxDEV(AdminLeaderboard, {\n          onBack: handleReturnHome\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 8\n        }, this);\n      default:\n        return null;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [view !== 'take-quiz' && /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      style: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          margin: 0\n        },\n        children: \"Quiz Management System\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 1\n      }, this), isAuthenticated && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          gap: '1rem'\n        },\n        children: [view !== 'home' && view !== 'login' && view !== 'admin-dashboard' && view !== 'student-dashboard' && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleReturnHome,\n          className: \"home-button\",\n          style: {\n            padding: '0.5rem 1rem',\n            borderRadius: '4px',\n            border: 'none',\n            backgroundColor: '#0056b3',\n            color: 'white',\n            cursor: 'pointer'\n          },\n          children: \"Return to Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLogout,\n          className: \"logout-button\",\n          style: {\n            padding: '0.5rem 1rem',\n            borderRadius: '4px',\n            border: 'none',\n            backgroundColor: '#dc3545',\n            color: 'white',\n            cursor: 'pointer'\n          },\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      style: {\n        marginTop: view === 'take-quiz' ? '0' : 'auto'\n      },\n      children: renderContent()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 298,\n    columnNumber: 1\n  }, this);\n}\n_s(AppWithRouter, \"FBkHJNsmXQ3tgLrlYdHs0vGGeew=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = AppWithRouter;\nfunction AppWithoutRouter() {\n  _s2();\n  const [selectedQuizId, setSelectedQuizId] = useState(null);\n  const [quizListKey, setQuizListKey] = useState(0);\n  const [attemptResult, setAttemptResult] = useState(null);\n  const [view, setView] = useState('admin-dashboard');\n  const [userRole, setUserRole] = useState('admin');\n  const [isAuthenticated, setIsAuthenticated] = useState(true); // Keep true for test compatibility\n\n  const handleLogin = role => {\n    setIsAuthenticated(true);\n    setUserRole(role);\n    setView(role === 'admin' ? 'admin-dashboard' : 'student-dashboard');\n  };\n  const handleLogout = () => {\n    setIsAuthenticated(false);\n    setUserRole(null);\n    setView('login');\n  };\n  const handleRoleSelection = role => {\n    setUserRole(role);\n    setView(role === 'admin' ? 'admin-dashboard' : 'student-dashboard');\n  };\n  const handleQuizCreated = () => {\n    setQuizListKey(prevKey => prevKey + 1);\n    setSelectedQuizId(null);\n    setView('admin-dashboard');\n  };\n  const handleQuestionAdded = () => {\n    if (view === 'view-questions' && selectedQuizId) {\n      setQuizListKey(prevKey => prevKey + 1);\n    } else {\n      setView('admin-dashboard');\n    }\n  };\n  const handleAdminSelectQuiz = quizId => {\n    setSelectedQuizId(quizId);\n    setView('admin-dashboard');\n  };\n  const handleViewQuestions = quizId => {\n    setSelectedQuizId(quizId);\n    setView('view-questions');\n  };\n  const handleStudentSelectQuiz = quizId => {\n    setSelectedQuizId(quizId);\n    setView('take-quiz');\n  };\n  const handleQuizCompleted = result => {\n    setAttemptResult(result);\n    setView('results');\n  };\n  const handleReturnHome = () => {\n    setQuizListKey(prevKey => prevKey + 1);\n    setView('home');\n    setSelectedQuizId(null);\n    setAttemptResult(null);\n    setUserRole(null);\n  };\n  const handleViewMyResults = () => setView('my-results');\n  const handleManageQuizzes = () => setView('manage-quizzes');\n  const handleQuestionBank = () => setView('question-bank');\n  const handleAllResults = () => setView('all-results');\n  const handleUserAccounts = () => setView('user-accounts');\n  const handleDeleteQuiz = quizId => {\n    const quizzes = JSON.parse(localStorage.getItem('quizzes') || '[]');\n    const updatedQuizzes = quizzes.filter(quiz => quiz.id !== quizId);\n    localStorage.setItem('quizzes', JSON.stringify(updatedQuizzes));\n    setQuizListKey(prevKey => prevKey + 1);\n  };\n  const renderContent = () => {\n    if (!isAuthenticated) {\n      return /*#__PURE__*/_jsxDEV(Login, {\n        onLogin: handleLogin\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 14\n      }, this);\n    }\n    switch (view) {\n      case 'login':\n        return /*#__PURE__*/_jsxDEV(Login, {\n          onLogin: handleLogin\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 16\n        }, this);\n      case 'home':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"role-selection-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Select Your Role\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 415,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleRoleSelection('admin'),\n            className: \"role-button admin-button\",\n            children: \"Admin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 416,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleRoleSelection('student'),\n            className: \"role-button student-button\",\n            children: \"Student\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 11\n        }, this);\n      case 'admin-dashboard':\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"admin-nav\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleManageQuizzes,\n              children: \"Manage Quizzes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 424,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleQuestionBank,\n              children: \"Question Bank\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 425,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleAllResults,\n              children: \"All Student Results\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 426,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleUserAccounts,\n              children: \"User Accounts\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 427,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"left-panel\",\n            children: /*#__PURE__*/_jsxDEV(QuizList, {\n              onSelectQuiz: handleAdminSelectQuiz,\n              onViewQuestions: handleViewQuestions,\n              onDeleteQuiz: handleDeleteQuiz,\n              userRole: userRole\n            }, quizListKey, false, {\n              fileName: _jsxFileName,\n              lineNumber: 430,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 429,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"right-panel\",\n            children: [/*#__PURE__*/_jsxDEV(QuizForm, {\n              onQuizCreated: handleQuizCreated\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 439,\n              columnNumber: 15\n            }, this), selectedQuizId && /*#__PURE__*/_jsxDEV(QuestionForm, {\n              quizId: selectedQuizId,\n              onQuestionAdded: handleQuestionAdded\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 441,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 438,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true);\n      case 'student-dashboard':\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"student-nav\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleViewMyResults,\n              children: \"My Results\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 450,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 449,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"full-width-panel\",\n            children: /*#__PURE__*/_jsxDEV(QuizList, {\n              onSelectQuiz: handleStudentSelectQuiz,\n              onViewQuestions: () => {},\n              userRole: userRole\n            }, quizListKey, false, {\n              fileName: _jsxFileName,\n              lineNumber: 453,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 452,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true);\n      case 'take-quiz':\n        return /*#__PURE__*/_jsxDEV(TakeQuiz, {\n          quizId: selectedQuizId,\n          onQuizCompleted: handleQuizCompleted\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 16\n        }, this);\n      case 'results':\n        return /*#__PURE__*/_jsxDEV(QuizResults, {\n          attempt: attemptResult,\n          onReturnHome: handleReturnHome\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 16\n        }, this);\n      case 'view-questions':\n        return /*#__PURE__*/_jsxDEV(QuizViewQuestions, {\n          quizId: selectedQuizId,\n          onReturnHome: handleReturnHome\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 16\n        }, this);\n      case 'my-results':\n        return /*#__PURE__*/_jsxDEV(StudentResults, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 16\n        }, this);\n      case 'manage-quizzes':\n        return /*#__PURE__*/_jsxDEV(ManageQuizzes, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 16\n        }, this);\n      case 'question-bank':\n        return /*#__PURE__*/_jsxDEV(QuestionBank, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 16\n        }, this);\n      case 'all-results':\n        return /*#__PURE__*/_jsxDEV(AllStudentResults, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 475,\n          columnNumber: 16\n        }, this);\n      case 'user-accounts':\n        return /*#__PURE__*/_jsxDEV(UserAccounts, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 16\n        }, this);\n      default:\n        return null;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      style: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          margin: 0\n        },\n        children: \"Quiz Management System\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 486,\n        columnNumber: 9\n      }, this), isAuthenticated && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          gap: '1rem'\n        },\n        children: [view !== 'home' && view !== 'login' && view !== 'admin-dashboard' && view !== 'student-dashboard' && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleReturnHome,\n          className: \"home-button\",\n          style: {\n            padding: '0.5rem 1rem',\n            borderRadius: '4px',\n            border: 'none',\n            backgroundColor: '#0056b3',\n            color: 'white',\n            cursor: 'pointer'\n          },\n          children: \"Return to Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 490,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLogout,\n          className: \"logout-button\",\n          style: {\n            padding: '0.5rem 1rem',\n            borderRadius: '4px',\n            border: 'none',\n            backgroundColor: '#dc3545',\n            color: 'white',\n            cursor: 'pointer'\n          },\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 493,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 488,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 485,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: renderContent()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 497,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 484,\n    columnNumber: 5\n  }, this);\n}\n_s2(AppWithoutRouter, \"9ib+CKUCwnK+EzXu1fjeWONoPTY=\");\n_c2 = AppWithoutRouter;\nfunction App() {\n  const isTest = typeof process !== 'undefined' && process.env.NODE_ENV === 'test';\n  if (isTest) {\n    return /*#__PURE__*/_jsxDEV(AppWithoutRouter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 508,\n      columnNumber: 12\n    }, this);\n  }\n\n  // For browser, start at login page\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/*\",\n        element: /*#__PURE__*/_jsxDEV(AppWithRouter, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 515,\n          columnNumber: 35\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 515,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 514,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 513,\n    columnNumber: 5\n  }, this);\n}\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"AppWithRouter\");\n$RefreshReg$(_c2, \"AppWithoutRouter\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Routes","Route","useNavigate","useLocation","QuizList","QuizForm","QuestionForm","TakeQuiz","QuizResults","QuizViewQuestions","Login","StudentResults","ManageQuizzes","QuestionBank","AllStudentResults","UserAccounts","Leaderboard","AdminLeaderboard","EnhancedStudentDashboard","EnhancedAdminDashboard","AIQuestionGenerator","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","AppWithRouter","_s","navigate","location","selectedQuizId","setSelectedQuizId","quizListKey","setQuizListKey","attemptResult","setAttemptResult","view","setView","userRole","setUserRole","isAuthenticated","setIsAuthenticated","pathname","path","dashboardView","startsWith","split","handleLogin","role","localStorage","setItem","newView","handleLogout","removeItem","handleRoleSelection","handleQuizCreated","prevKey","handleQuestionAdded","handleAdminSelectQuiz","quizId","handleViewQuestions","handleStudentSelectQuiz","handleQuizCompleted","result","handleReturnHome","handleViewMyResults","handleManageQuizzes","handleQuestionBank","handleAllResults","handleUserAccounts","handleStudentLeaderboard","handleAdminLeaderboard","handleDeleteQuiz","BASE_URL","delete","error","quizzes","JSON","parse","getItem","updatedQuizzes","filter","quiz","id","stringify","renderContent","onLogin","fileName","_jsxFileName","lineNumber","columnNumber","className","children","onClick","onManageQuizzes","onQuestionBank","onAllResults","onUserAccounts","onLeaderboard","onQuizCreated","onQuestionAdded","onSelectQuiz","onViewQuestions","onDeleteQuiz","onViewMyResults","onQuizCompleted","attempt","onReturnHome","onBack","style","display","justifyContent","alignItems","margin","gap","padding","borderRadius","border","backgroundColor","color","cursor","marginTop","_c","AppWithoutRouter","_s2","_c2","App","isTest","process","env","NODE_ENV","element","_c3","$RefreshReg$"],"sources":["C:/Users/sanje/Downloads/PROJECTS/QuizSystem/reactapp/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route, useNavigate, useLocation } from 'react-router-dom';\nimport './App.css'; // Assuming this file exists and is correctly linked\nimport './components/Navigation.css';\nimport QuizList from './components/QuizList';\nimport QuizForm from './components/QuizForm';\nimport QuestionForm from './components/QuestionForm';\nimport TakeQuiz from './components/TakeQuiz';\nimport QuizResults from './components/QuizResults';\nimport QuizViewQuestions from './components/QuizViewQuestions';\nimport Login from './components/Login';\nimport StudentResults from './components/StudentResults';\nimport ManageQuizzes from './components/ManageQuizzes';\nimport QuestionBank from './components/QuestionBank';\nimport AllStudentResults from './components/AllStudentResults';\nimport UserAccounts from './components/UserAccounts';\nimport Leaderboard from './components/Leaderboard';\nimport AdminLeaderboard from './components/AdminLeaderboard';\nimport EnhancedStudentDashboard from './components/EnhancedStudentDashboard';\nimport EnhancedAdminDashboard from './components/EnhancedAdminDashboard';\nimport AIQuestionGenerator from './components/AIQuestionGenerator';\nimport axios from 'axios';\n\nfunction AppWithRouter() {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [selectedQuizId, setSelectedQuizId] = useState(null);\n  const [quizListKey, setQuizListKey] = useState(0); // Key to force QuizList refresh\n  const [attemptResult, setAttemptResult] = useState(null);\n  // Initial state for login flow\n  const [view, setView] = useState('login'); \n  // Default role to admin for initial dashboard view\n  const [userRole, setUserRole] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false); // Start with login\n\n  // Check for existing session on app load\n  useEffect(() => {\n    // Always start at login - removed auto-authentication\n  }, []);\n\n  useEffect(() => {\n    if (!isAuthenticated) {\n      setView('login');\n      if (location.pathname !== '/login') navigate('/login');\n      return;\n    }\n    \n    const path = location.pathname;\n    if (path === '/') {\n      if (userRole) {\n        const dashboardView = userRole === 'admin' ? 'admin-dashboard' : 'student-dashboard';\n        setView(dashboardView);\n        navigate(userRole === 'admin' ? '/admin' : '/student');\n      } else {\n        setView('login');\n        navigate('/login');\n      }\n    }\n    else if (path === '/login') {\n      if (userRole) {\n        const dashboardView = userRole === 'admin' ? 'admin-dashboard' : 'student-dashboard';\n        setView(dashboardView);\n        navigate(userRole === 'admin' ? '/admin' : '/student');\n      } else {\n        setView('login');\n      }\n    }\n    else if (path === '/admin') setView('admin-dashboard');\n    else if (path === '/student') setView('student-dashboard');\n    else if (path === '/my-results') setView('my-results');\n    else if (path === '/manage-quizzes') setView('manage-quizzes');\n    else if (path === '/question-bank') setView('question-bank');\n    else if (path === '/all-results') setView('all-results');\n    else if (path === '/user-accounts') setView('user-accounts');\n    else if (path === '/student-leaderboard') setView('student-leaderboard');\n    else if (path === '/admin-leaderboard') setView('admin-leaderboard');\n    else if (path.startsWith('/take-quiz/')) {\n      setView('take-quiz');\n      setSelectedQuizId(path.split('/')[2]);\n    }\n    else if (path === '/results') setView('results');\n    else if (path.startsWith('/view-questions/')) {\n      setView('view-questions');\n      setSelectedQuizId(path.split('/')[2]);\n    }\n  }, [location.pathname, isAuthenticated, userRole, navigate]); \n\n  // Handler for login\n  const handleLogin = (role) => {\n    setIsAuthenticated(true);\n    setUserRole(role);\n    localStorage.setItem('isAuthenticated', 'true');\n    localStorage.setItem('userRole', role);\n    const newView = role === 'admin' ? 'admin-dashboard' : 'student-dashboard';\n    setView(newView);\n    navigate(role === 'admin' ? '/admin' : '/student');\n  };\n\n  // Handler for logout\n  const handleLogout = () => {\n    setIsAuthenticated(false);\n    setUserRole(null);\n    localStorage.removeItem('isAuthenticated');\n    localStorage.removeItem('userRole');\n    setView('login');\n    navigate('/login');\n  };\n\n  // Handler for when a role is selected (from 'home' view)\n  const handleRoleSelection = (role) => {\n    setUserRole(role);\n    const newView = role === 'admin' ? 'admin-dashboard' : 'student-dashboard';\n    setView(newView);\n    navigate(role === 'admin' ? '/admin' : '/student');\n  };\n\n  // Handler for when a new quiz is created\n  const handleQuizCreated = () => {\n    setQuizListKey(prevKey => prevKey + 1); // Forces QuizList to re-fetch\n    setSelectedQuizId(null); // Clears selected quiz, hiding QuestionForm\n    setView('admin-dashboard'); // Ensures we stay on admin dashboard\n    navigate('/admin');\n  };\n\n  const handleQuestionAdded = () => {\n    // If currently viewing questions for this quiz, force a refresh of that view\n    if (view === 'view-questions' && selectedQuizId) {\n      setQuizListKey(prevKey => prevKey + 1); // Remounts QuizViewQuestions\n    } else {\n      setView('admin-dashboard'); // Stay on admin dashboard\n      navigate('/admin');\n    }\n  };\n  \nconst handleAdminSelectQuiz = (quizId) => {\nsetSelectedQuizId(quizId);\nsetView('admin-dashboard'); // Stay on admin dashboard to show QuestionForm\nnavigate('/admin');\n};\n\nconst handleViewQuestions = (quizId) => {\nsetSelectedQuizId(quizId);\nsetView('view-questions'); // Switch to the dedicated view questions screen\nnavigate(`/view-questions/${quizId}`);\n};\n\n// Handler for students to take a quiz\nconst handleStudentSelectQuiz = (quizId) => {\nsetSelectedQuizId(quizId);\nsetView('take-quiz');\nnavigate(`/take-quiz/${quizId}`);\n};\n\n// Handler for when a student completes a quiz\nconst handleQuizCompleted = (result) => {\nsetAttemptResult(result);\nsetView('results'); // Show quiz results screen\nnavigate('/results');\n};\n\n// Handler to return to the initial role selection screen\nconst handleReturnHome = () => {\nsetQuizListKey(prevKey => prevKey + 1); // Refresh QuizList\nif (userRole) {\n  const dashboardView = userRole === 'admin' ? 'admin-dashboard' : 'student-dashboard';\n  setView(dashboardView);\n  navigate(userRole === 'admin' ? '/admin' : '/student');\n} else {\n  setView('home');\n  navigate('/');\n}\nsetSelectedQuizId(null); // Clear selections\nsetAttemptResult(null);\n};\n\n// New navigation handlers\nconst handleViewMyResults = () => {\nsetView('my-results');\nnavigate('/my-results');\n};\n\nconst handleManageQuizzes = () => {\nsetView('manage-quizzes');\nnavigate('/manage-quizzes');\n};\n\nconst handleQuestionBank = () => {\nsetView('question-bank');\nnavigate('/question-bank');\n};\n\nconst handleAllResults = () => {\nsetView('all-results');\nnavigate('/all-results');\n};\n\nconst handleUserAccounts = () => {\nsetView('user-accounts');\nnavigate('/user-accounts');\n};\n\nconst handleStudentLeaderboard = () => {\nsetView('student-leaderboard');\nnavigate('/student-leaderboard');\n};\n\nconst handleAdminLeaderboard = () => {\nsetView('admin-leaderboard');\nnavigate('/admin-leaderboard');\n};\n\nconst handleDeleteQuiz = async (quizId) => {\ntry {\nconst BASE_URL = 'http://localhost:8080';\nawait axios.delete(`${BASE_URL}/api/quizzes/${quizId}`);\n} catch (error) {\n// Fallback to localStorage\nconst quizzes = JSON.parse(localStorage.getItem('quizzes') || '[]');\nconst updatedQuizzes = quizzes.filter(quiz => quiz.id !== quizId);\nlocalStorage.setItem('quizzes', JSON.stringify(updatedQuizzes));\n}\nsetQuizListKey(prevKey => prevKey + 1); // Refresh quiz list\n};\n\n\n\n\n// Renders content based on the current 'view' state\nconst renderContent = () => {\nif (!isAuthenticated) {\nreturn <Login onLogin={handleLogin} />;\n}\n\nswitch (view) {\ncase 'login':\nreturn <Login onLogin={handleLogin} />;\ncase 'home':\nreturn (\n<div className=\"role-selection-container\">\n<h2>Select Your Role</h2>\n<button onClick={() => handleRoleSelection('admin')} className=\"role-button admin-button\">Admin</button>\n<button onClick={() => handleRoleSelection('student')} className=\"role-button student-button\">Student</button>\n</div>\n);\n\ncase 'admin-dashboard':\nreturn (\n<EnhancedAdminDashboard\nonManageQuizzes={handleManageQuizzes}\nonQuestionBank={handleQuestionBank}\nonAllResults={handleAllResults}\nonUserAccounts={handleUserAccounts}\nonLeaderboard={handleAdminLeaderboard}\nonQuizCreated={handleQuizCreated}\nonQuestionAdded={handleQuestionAdded}\nonSelectQuiz={handleAdminSelectQuiz}\nonViewQuestions={handleViewQuestions}\nonDeleteQuiz={handleDeleteQuiz}\nselectedQuizId={selectedQuizId}\nquizListKey={quizListKey}\nAIQuestionGenerator={AIQuestionGenerator}\n/>\n);\ncase 'student-dashboard':\nreturn (\n<EnhancedStudentDashboard\nonSelectQuiz={handleStudentSelectQuiz}\nonViewMyResults={handleViewMyResults}\nonLeaderboard={handleStudentLeaderboard}\n/>\n);\ncase 'take-quiz':\nreturn <TakeQuiz quizId={selectedQuizId} onQuizCompleted={handleQuizCompleted} />;\ncase 'results':\nreturn <QuizResults attempt={attemptResult} onReturnHome={handleReturnHome} />;\ncase 'view-questions':\nreturn <QuizViewQuestions quizId={selectedQuizId} onReturnHome={handleReturnHome} />;\ncase 'my-results':\nreturn <StudentResults />;\ncase 'manage-quizzes':\nreturn <ManageQuizzes />;\ncase 'question-bank':\nreturn <QuestionBank />;\ncase 'all-results':\nreturn <AllStudentResults />;\ncase 'user-accounts':\nreturn <UserAccounts />;\ncase 'student-leaderboard':\nreturn <Leaderboard onBack={handleReturnHome} />;\ncase 'admin-leaderboard':\nreturn <AdminLeaderboard onBack={handleReturnHome} />;\ndefault:\nreturn null;\n}\n};\n\nreturn (\n<div className=\"App\">\n{/* Hide header during quiz-taking */}\n{view !== 'take-quiz' && (\n<header className=\"App-header\" style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n<h1 style={{ margin: 0 }}>Quiz Management System</h1>\n{isAuthenticated && (\n<div style={{ display: 'flex', gap: '1rem' }}>\n{/* Show 'Return to Home' button if not on the 'home' screen */}\n{view !== 'home' && view !== 'login' && view !== 'admin-dashboard' && view !== 'student-dashboard' && (\n<button onClick={handleReturnHome} className=\"home-button\" style={{ padding: '0.5rem 1rem', borderRadius: '4px', border: 'none', backgroundColor: '#0056b3', color: 'white', cursor: 'pointer' }}>Return to Home</button>\n)}\n\n<button onClick={handleLogout} className=\"logout-button\" style={{ padding: '0.5rem 1rem', borderRadius: '4px', border: 'none', backgroundColor: '#dc3545', color: 'white', cursor: 'pointer' }}>Logout</button>\n</div>\n)}\n</header>\n)}\n<div className=\"main-content\" style={{ marginTop: view === 'take-quiz' ? '0' : 'auto' }}>\n{renderContent()}\n</div>\n</div>\n);\n}\n\nfunction AppWithoutRouter() {\n  const [selectedQuizId, setSelectedQuizId] = useState(null);\n  const [quizListKey, setQuizListKey] = useState(0);\n  const [attemptResult, setAttemptResult] = useState(null);\n  const [view, setView] = useState('admin-dashboard');\n  const [userRole, setUserRole] = useState('admin');\n  const [isAuthenticated, setIsAuthenticated] = useState(true); // Keep true for test compatibility\n\n  const handleLogin = (role) => {\n    setIsAuthenticated(true);\n    setUserRole(role);\n    setView(role === 'admin' ? 'admin-dashboard' : 'student-dashboard');\n  };\n\n  const handleLogout = () => {\n    setIsAuthenticated(false);\n    setUserRole(null);\n    setView('login');\n  };\n\n  const handleRoleSelection = (role) => {\n    setUserRole(role);\n    setView(role === 'admin' ? 'admin-dashboard' : 'student-dashboard');\n  };\n\n  const handleQuizCreated = () => {\n    setQuizListKey(prevKey => prevKey + 1);\n    setSelectedQuizId(null);\n    setView('admin-dashboard');\n  };\n\n  const handleQuestionAdded = () => {\n    if (view === 'view-questions' && selectedQuizId) {\n      setQuizListKey(prevKey => prevKey + 1);\n    } else {\n      setView('admin-dashboard');\n    }\n  };\n\n  const handleAdminSelectQuiz = (quizId) => {\n    setSelectedQuizId(quizId);\n    setView('admin-dashboard');\n  };\n\n  const handleViewQuestions = (quizId) => {\n    setSelectedQuizId(quizId);\n    setView('view-questions');\n  };\n\n  const handleStudentSelectQuiz = (quizId) => {\n    setSelectedQuizId(quizId);\n    setView('take-quiz');\n  };\n\n  const handleQuizCompleted = (result) => {\n    setAttemptResult(result);\n    setView('results');\n  };\n\n  const handleReturnHome = () => {\n    setQuizListKey(prevKey => prevKey + 1);\n    setView('home');\n    setSelectedQuizId(null);\n    setAttemptResult(null);\n    setUserRole(null);\n  };\n\n\n\n  const handleViewMyResults = () => setView('my-results');\n  const handleManageQuizzes = () => setView('manage-quizzes');\n  const handleQuestionBank = () => setView('question-bank');\n  const handleAllResults = () => setView('all-results');\n  const handleUserAccounts = () => setView('user-accounts');\n  \n  const handleDeleteQuiz = (quizId) => {\n    const quizzes = JSON.parse(localStorage.getItem('quizzes') || '[]');\n    const updatedQuizzes = quizzes.filter(quiz => quiz.id !== quizId);\n    localStorage.setItem('quizzes', JSON.stringify(updatedQuizzes));\n    setQuizListKey(prevKey => prevKey + 1);\n  };\n\n  const renderContent = () => {\n    if (!isAuthenticated) {\n      return <Login onLogin={handleLogin} />;\n    }\n\n    switch (view) {\n      case 'login':\n        return <Login onLogin={handleLogin} />;\n      case 'home':\n        return (\n          <div className=\"role-selection-container\">\n            <h2>Select Your Role</h2>\n            <button onClick={() => handleRoleSelection('admin')} className=\"role-button admin-button\">Admin</button>\n            <button onClick={() => handleRoleSelection('student')} className=\"role-button student-button\">Student</button>\n          </div>\n        );\n      case 'admin-dashboard':\n        return (\n          <>\n            <div className=\"admin-nav\">\n              <button onClick={handleManageQuizzes}>Manage Quizzes</button>\n              <button onClick={handleQuestionBank}>Question Bank</button>\n              <button onClick={handleAllResults}>All Student Results</button>\n              <button onClick={handleUserAccounts}>User Accounts</button>\n            </div>\n            <div className=\"left-panel\">\n              <QuizList\n                key={quizListKey}\n                onSelectQuiz={handleAdminSelectQuiz}\n                onViewQuestions={handleViewQuestions}\n                onDeleteQuiz={handleDeleteQuiz}\n                userRole={userRole}\n              />\n            </div>\n            <div className=\"right-panel\">\n              <QuizForm onQuizCreated={handleQuizCreated} />\n              {selectedQuizId && (\n                <QuestionForm quizId={selectedQuizId} onQuestionAdded={handleQuestionAdded} />\n              )}\n            </div>\n          </>\n        );\n      case 'student-dashboard':\n        return (\n          <>\n            <div className=\"student-nav\">\n              <button onClick={handleViewMyResults}>My Results</button>\n            </div>\n            <div className=\"full-width-panel\">\n              <QuizList\n                key={quizListKey}\n                onSelectQuiz={handleStudentSelectQuiz}\n                onViewQuestions={() => {}}\n                userRole={userRole}\n              />\n            </div>\n          </>\n        );\n      case 'take-quiz':\n        return <TakeQuiz quizId={selectedQuizId} onQuizCompleted={handleQuizCompleted} />;\n      case 'results':\n        return <QuizResults attempt={attemptResult} onReturnHome={handleReturnHome} />;\n      case 'view-questions':\n        return <QuizViewQuestions quizId={selectedQuizId} onReturnHome={handleReturnHome} />;\n      case 'my-results':\n        return <StudentResults />;\n      case 'manage-quizzes':\n        return <ManageQuizzes />;\n      case 'question-bank':\n        return <QuestionBank />;\n      case 'all-results':\n        return <AllStudentResults />;\n      case 'user-accounts':\n        return <UserAccounts />;\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\" style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n        <h1 style={{ margin: 0 }}>Quiz Management System</h1>\n        {isAuthenticated && (\n          <div style={{ display: 'flex', gap: '1rem' }}>\n            {view !== 'home' && view !== 'login' && view !== 'admin-dashboard' && view !== 'student-dashboard' && (\n              <button onClick={handleReturnHome} className=\"home-button\" style={{ padding: '0.5rem 1rem', borderRadius: '4px', border: 'none', backgroundColor: '#0056b3', color: 'white', cursor: 'pointer' }}>Return to Home</button>\n            )}\n\n            <button onClick={handleLogout} className=\"logout-button\" style={{ padding: '0.5rem 1rem', borderRadius: '4px', border: 'none', backgroundColor: '#dc3545', color: 'white', cursor: 'pointer' }}>Logout</button>\n          </div>\n        )}\n      </header>\n      <div className=\"main-content\">\n        {renderContent()}\n      </div>\n    </div>\n  );\n}\n\nfunction App() {\n  const isTest = typeof process !== 'undefined' && process.env.NODE_ENV === 'test';\n  \n  if (isTest) {\n    return <AppWithoutRouter />;\n  }\n  \n  // For browser, start at login page\n  return (\n    <Router>\n      <Routes>\n        <Route path=\"/*\" element={<AppWithRouter />} />\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}