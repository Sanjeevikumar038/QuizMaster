{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sanje\\\\Downloads\\\\PROJECTS\\\\QuizSystem\\\\reactapp\\\\src\\\\components\\\\AIQuestionGenerator.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { buttonStyles } from './buttonStyles';\nimport { useToast, ToastContainer } from './Toast';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AIQuestionGenerator = ({\n  quizId,\n  onQuestionsGenerated,\n  availableQuizzes = []\n}) => {\n  _s();\n  const [topic, setTopic] = useState('');\n  const [difficulty, setDifficulty] = useState('medium');\n  const [questionCount, setQuestionCount] = useState(5);\n  const [questionType, setQuestionType] = useState('MULTIPLE_CHOICE');\n  const [generating, setGenerating] = useState(false);\n  const [createNewQuiz, setCreateNewQuiz] = useState(true);\n  const [selectedExistingQuiz, setSelectedExistingQuiz] = useState('');\n  const [newQuizTitle, setNewQuizTitle] = useState('');\n  const [newQuizDescription, setNewQuizDescription] = useState('');\n  const [timeLimit, setTimeLimit] = useState(30);\n  const {\n    toasts,\n    addToast,\n    removeToast\n  } = useToast();\n\n  // Auto-fill topic when existing quiz is selected\n  useEffect(() => {\n    if (!createNewQuiz && selectedExistingQuiz && availableQuizzes.length > 0) {\n      const selectedQuiz = availableQuizzes.find(q => q.id.toString() === selectedExistingQuiz);\n      if (selectedQuiz) {\n        // Extract topic from quiz title (first word usually)\n        const extractedTopic = selectedQuiz.title.split(' ')[0];\n        setTopic(extractedTopic);\n      }\n    }\n  }, [selectedExistingQuiz, createNewQuiz, availableQuizzes]);\n  const generateQuestions = async () => {\n    if (!topic.trim()) {\n      addToast('Please enter a topic', 'error');\n      return;\n    }\n    if (createNewQuiz && (!newQuizTitle.trim() || !newQuizDescription.trim())) {\n      addToast('Please fill in quiz title and description', 'error');\n      return;\n    }\n    if (!createNewQuiz && !selectedExistingQuiz) {\n      addToast('Please select an existing quiz', 'error');\n      return;\n    }\n    setGenerating(true);\n    try {\n      let targetQuizId = createNewQuiz ? null : selectedExistingQuiz;\n\n      // Create new quiz if needed\n      if (createNewQuiz) {\n        const newQuiz = {\n          id: Date.now(),\n          title: newQuizTitle,\n          description: newQuizDescription,\n          timeLimit: timeLimit\n        };\n        try {\n          // Try API first\n          const response = await fetch('http://localhost:8080/api/quizzes', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(newQuiz)\n          });\n          if (response.ok) {\n            const savedQuiz = await response.json();\n            targetQuizId = savedQuiz.id;\n          } else {\n            targetQuizId = newQuiz.id;\n          }\n        } catch (apiError) {\n          // Fallback to localStorage ID\n          targetQuizId = newQuiz.id;\n        }\n\n        // Always save to localStorage for immediate visibility\n        const existingQuizzes = JSON.parse(localStorage.getItem('quizzes') || '[]');\n        existingQuizzes.push({\n          ...newQuiz,\n          id: targetQuizId\n        });\n        localStorage.setItem('quizzes', JSON.stringify(existingQuizzes));\n        addToast(`Created new quiz: ${newQuizTitle}`, 'success');\n      }\n\n      // Generate questions with real AI\n      let generatedQuestions;\n      try {\n        generatedQuestions = await generateWithOpenAI(topic, difficulty, questionCount, questionType);\n      } catch (error) {\n        console.error('Failed to generate with OpenAI, using templates:', error);\n        addToast('OpenAI failed, using template questions', 'warning');\n        generatedQuestions = generateTemplateQuestions(topic, difficulty, questionCount, questionType);\n      }\n\n      // Save questions to the main quiz system\n      try {\n        // Try API first\n        for (const question of generatedQuestions) {\n          const questionData = {\n            ...question,\n            id: Date.now() + Math.random(),\n            quizId: targetQuizId\n          };\n          try {\n            await fetch(`http://localhost:8080/api/quizzes/${targetQuizId}/questions`, {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify(questionData)\n            });\n          } catch (apiError) {\n            // Fallback to localStorage if API fails\n            const existingQuestions = JSON.parse(localStorage.getItem('aiGeneratedQuestions') || '{}');\n            if (!existingQuestions[targetQuizId]) {\n              existingQuestions[targetQuizId] = [];\n            }\n            existingQuestions[targetQuizId].push(questionData);\n            localStorage.setItem('aiGeneratedQuestions', JSON.stringify(existingQuestions));\n          }\n        }\n\n        // Also update the quiz in localStorage for immediate visibility\n        const quizzes = JSON.parse(localStorage.getItem('quizzes') || '[]');\n        const quizIndex = quizzes.findIndex(q => q.id.toString() === targetQuizId.toString());\n        if (quizIndex !== -1) {\n          if (!quizzes[quizIndex].questions) {\n            quizzes[quizIndex].questions = [];\n          }\n          generatedQuestions.forEach(question => {\n            quizzes[quizIndex].questions.push({\n              ...question,\n              id: Date.now() + Math.random(),\n              quizId: targetQuizId\n            });\n          });\n          localStorage.setItem('quizzes', JSON.stringify(quizzes));\n        }\n      } catch (error) {\n        console.error('Error saving questions:', error);\n      }\n      addToast(`Generated ${questionCount} questions successfully!`, 'success');\n\n      // Trigger dashboard refresh to show new quiz and questions\n      window.dispatchEvent(new Event('questionsUpdated'));\n      window.dispatchEvent(new Event('quizCreated'));\n      onQuestionsGenerated(generatedQuestions);\n\n      // Reset form\n      setTopic('');\n      setQuestionCount(5);\n      setNewQuizTitle('');\n      setNewQuizDescription('');\n    } catch (error) {\n      addToast('Failed to generate questions. Please try again.', 'error');\n    } finally {\n      setGenerating(false);\n    }\n  };\n  const generateWithOpenAI = async (topic, difficulty, count, type) => {\n    const API_KEY = process.env.REACT_APP_OPENAI_API_KEY;\n    console.log('API Key check:', API_KEY ? 'Present' : 'Missing');\n    if (!API_KEY || API_KEY === 'your-openai-api-key-here') {\n      console.log('No valid API key, using templates');\n      addToast('OpenAI API key not configured. Using template questions.', 'warning');\n      return generateTemplateQuestions(topic, difficulty, count, type);\n    }\n    console.log(`Generating ${count} questions about ${topic} with OpenAI`);\n    addToast('Generating questions with OpenAI...', 'info');\n    const prompt = createPrompt(topic, difficulty, count, type);\n    console.log('OpenAI Prompt:', prompt);\n    try {\n      const response = await fetch('https://api.openai.com/v1/chat/completions', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${API_KEY}`\n        },\n        body: JSON.stringify({\n          model: 'gpt-3.5-turbo',\n          messages: [{\n            role: 'user',\n            content: prompt\n          }],\n          temperature: 0.3,\n          max_tokens: 3000\n        })\n      });\n      if (!response.ok) {\n        const errorText = await response.text();\n        console.error('OpenAI API Error Response:', errorText);\n        throw new Error(`OpenAI API error: ${response.status} - ${errorText}`);\n      }\n      const data = await response.json();\n      console.log('OpenAI Response:', data);\n      const generatedContent = data.choices[0].message.content;\n      console.log('Generated Content:', generatedContent);\n      addToast('Successfully generated questions with OpenAI!', 'success');\n      return parseAIResponse(generatedContent, topic, difficulty, type);\n    } catch (error) {\n      console.error('OpenAI API failed:', error);\n\n      // Try free alternative API if OpenAI fails\n      if (error.message.includes('quota') || error.message.includes('429')) {\n        addToast('OpenAI quota exceeded. Trying free alternative...', 'warning');\n        return await generateWithFreeAI(topic, difficulty, count, type);\n      }\n      addToast(`OpenAI API failed: ${error.message}`, 'error');\n      throw error;\n    }\n  };\n  const createPrompt = (topic, difficulty, count, type) => {\n    const topicExamples = {\n      'app development': 'mobile app development, React Native, Flutter, iOS, Android',\n      'dbms': 'database management systems, SQL, normalization, ACID properties, indexing',\n      'cloud computing': 'AWS, Azure, virtualization, containers, microservices',\n      'machine learning': 'algorithms, neural networks, supervised learning, data science',\n      'web development': 'HTML, CSS, JavaScript, frameworks, responsive design'\n    };\n    const context = topicExamples[topic.toLowerCase()] || topic;\n    return `Generate ${count} ${difficulty} level multiple choice questions about ${topic}.\n\nContext: Focus on ${context}\n\nReturn only this JSON format:\n[\n  {\n    \"questionText\": \"Specific question about ${topic}?\",\n    \"questionType\": \"${type}\",\n    \"options\": [\n      {\"optionText\": \"Correct answer\", \"isCorrect\": true},\n      {\"optionText\": \"Wrong option 1\", \"isCorrect\": false},\n      {\"optionText\": \"Wrong option 2\", \"isCorrect\": false},\n      {\"optionText\": \"Wrong option 3\", \"isCorrect\": false}\n    ]\n  }\n]`;\n  };\n  const parseAIResponse = (content, topic, difficulty, type) => {\n    try {\n      // Clean the response - remove any markdown formatting\n      let cleanContent = content.trim();\n      if (cleanContent.startsWith('```json')) {\n        cleanContent = cleanContent.replace(/```json\\n?/, '').replace(/\\n?```$/, '');\n      }\n      if (cleanContent.startsWith('```')) {\n        cleanContent = cleanContent.replace(/```\\n?/, '').replace(/\\n?```$/, '');\n      }\n      const questions = JSON.parse(cleanContent);\n      if (!Array.isArray(questions)) {\n        throw new Error('Response is not an array');\n      }\n      return questions.map((q, index) => ({\n        ...q,\n        id: Date.now() + index,\n        difficulty: difficulty,\n        topic: topic,\n        options: q.options.map((opt, idx) => ({\n          ...opt,\n          id: Date.now() + index * 100 + idx\n        }))\n      }));\n    } catch (error) {\n      console.error('Failed to parse AI response:', error, 'Content:', content);\n      addToast('Failed to parse AI response. Using template questions.', 'warning');\n      return generateTemplateQuestions(topic, difficulty, questionCount, type);\n    }\n  };\n  const generateTemplateQuestions = (topic, difficulty, count, type) => {\n    const questions = [];\n    for (let i = 0; i < count; i++) {\n      if (type === 'MULTIPLE_CHOICE') {\n        questions.push(generateMCQ(topic, difficulty, i + 1));\n      } else {\n        questions.push(generateTrueFalse(topic, difficulty, i + 1));\n      }\n    }\n    return questions;\n  };\n  const generateMCQ = (topic, difficulty, index) => {\n    var _templates$topicKey;\n    const templates = {\n      java: {\n        easy: [{\n          question: `What is the correct way to declare a variable in ${topic}?`,\n          options: [{\n            optionText: 'int x = 5;',\n            isCorrect: true\n          }, {\n            optionText: 'integer x = 5;',\n            isCorrect: false\n          }, {\n            optionText: 'var x = 5;',\n            isCorrect: false\n          }, {\n            optionText: 'x = 5;',\n            isCorrect: false\n          }]\n        }, {\n          question: `Which keyword is used to create a class in ${topic}?`,\n          options: [{\n            optionText: 'class',\n            isCorrect: true\n          }, {\n            optionText: 'Class',\n            isCorrect: false\n          }, {\n            optionText: 'new',\n            isCorrect: false\n          }, {\n            optionText: 'create',\n            isCorrect: false\n          }]\n        }, {\n          question: `What is the main method signature in ${topic}?`,\n          options: [{\n            optionText: 'public static void main(String[] args)',\n            isCorrect: true\n          }, {\n            optionText: 'public void main(String[] args)',\n            isCorrect: false\n          }, {\n            optionText: 'static void main(String[] args)',\n            isCorrect: false\n          }, {\n            optionText: 'public main(String[] args)',\n            isCorrect: false\n          }]\n        }],\n        medium: [{\n          question: `What is the output of System.out.println(\"Hello\".length()) in ${topic}?`,\n          options: [{\n            optionText: '5',\n            isCorrect: true\n          }, {\n            optionText: '4',\n            isCorrect: false\n          }, {\n            optionText: '6',\n            isCorrect: false\n          }, {\n            optionText: 'Error',\n            isCorrect: false\n          }]\n        }, {\n          question: `Which collection class allows duplicate elements in ${topic}?`,\n          options: [{\n            optionText: 'ArrayList',\n            isCorrect: true\n          }, {\n            optionText: 'HashSet',\n            isCorrect: false\n          }, {\n            optionText: 'TreeSet',\n            isCorrect: false\n          }, {\n            optionText: 'LinkedHashSet',\n            isCorrect: false\n          }]\n        }, {\n          question: `What is inheritance in ${topic}?`,\n          options: [{\n            optionText: 'A class acquiring properties of another class',\n            isCorrect: true\n          }, {\n            optionText: 'Creating multiple objects',\n            isCorrect: false\n          }, {\n            optionText: 'Hiding implementation details',\n            isCorrect: false\n          }, {\n            optionText: 'Method overloading',\n            isCorrect: false\n          }]\n        }],\n        hard: [{\n          question: `What is the time complexity of HashMap get() operation in ${topic}?`,\n          options: [{\n            optionText: 'O(1) average case',\n            isCorrect: true\n          }, {\n            optionText: 'O(log n)',\n            isCorrect: false\n          }, {\n            optionText: 'O(n)',\n            isCorrect: false\n          }, {\n            optionText: 'O(n²)',\n            isCorrect: false\n          }]\n        }]\n      },\n      react: {\n        easy: [{\n          question: `How do you create a functional component in ${topic}?`,\n          options: [{\n            optionText: 'function MyComponent() { return <div></div>; }',\n            isCorrect: true\n          }, {\n            optionText: 'class MyComponent() { return <div></div>; }',\n            isCorrect: false\n          }, {\n            optionText: 'component MyComponent() { return <div></div>; }',\n            isCorrect: false\n          }, {\n            optionText: 'const MyComponent = <div></div>;',\n            isCorrect: false\n          }]\n        }, {\n          question: `What is JSX in ${topic}?`,\n          options: [{\n            optionText: 'JavaScript XML syntax extension',\n            isCorrect: true\n          }, {\n            optionText: 'A CSS framework',\n            isCorrect: false\n          }, {\n            optionText: 'A database query language',\n            isCorrect: false\n          }, {\n            optionText: 'A testing library',\n            isCorrect: false\n          }]\n        }, {\n          question: `Which hook is used for state management in ${topic}?`,\n          options: [{\n            optionText: 'useState',\n            isCorrect: true\n          }, {\n            optionText: 'useEffect',\n            isCorrect: false\n          }, {\n            optionText: 'useContext',\n            isCorrect: false\n          }, {\n            optionText: 'useReducer',\n            isCorrect: false\n          }]\n        }],\n        medium: [{\n          question: `What is the purpose of useEffect in ${topic}?`,\n          options: [{\n            optionText: 'Handle side effects and lifecycle events',\n            isCorrect: true\n          }, {\n            optionText: 'Manage component state',\n            isCorrect: false\n          }, {\n            optionText: 'Create new components',\n            isCorrect: false\n          }, {\n            optionText: 'Style components',\n            isCorrect: false\n          }]\n        }, {\n          question: `How do you pass data from parent to child in ${topic}?`,\n          options: [{\n            optionText: 'Through props',\n            isCorrect: true\n          }, {\n            optionText: 'Through state',\n            isCorrect: false\n          }, {\n            optionText: 'Through context only',\n            isCorrect: false\n          }, {\n            optionText: 'Through refs',\n            isCorrect: false\n          }]\n        }, {\n          question: `What is the Virtual DOM in ${topic}?`,\n          options: [{\n            optionText: 'A JavaScript representation of the real DOM',\n            isCorrect: true\n          }, {\n            optionText: 'A CSS framework',\n            isCorrect: false\n          }, {\n            optionText: 'A database',\n            isCorrect: false\n          }, {\n            optionText: 'A testing tool',\n            isCorrect: false\n          }]\n        }],\n        hard: [{\n          question: `What is the difference between useMemo and useCallback in ${topic}?`,\n          options: [{\n            optionText: 'useMemo memoizes values, useCallback memoizes functions',\n            isCorrect: true\n          }, {\n            optionText: 'They are the same',\n            isCorrect: false\n          }, {\n            optionText: 'useMemo is for state, useCallback is for effects',\n            isCorrect: false\n          }, {\n            optionText: 'useCallback is deprecated',\n            isCorrect: false\n          }]\n        }]\n      },\n      python: {\n        easy: [{\n          question: `How do you create a list in ${topic}?`,\n          options: [{\n            optionText: 'my_list = []',\n            isCorrect: true\n          }, {\n            optionText: 'my_list = ()',\n            isCorrect: false\n          }, {\n            optionText: 'my_list = {}',\n            isCorrect: false\n          }, {\n            optionText: 'list my_list',\n            isCorrect: false\n          }]\n        }, {\n          question: `What is the correct way to define a function in ${topic}?`,\n          options: [{\n            optionText: 'def my_function():',\n            isCorrect: true\n          }, {\n            optionText: 'function my_function():',\n            isCorrect: false\n          }, {\n            optionText: 'func my_function():',\n            isCorrect: false\n          }, {\n            optionText: 'define my_function():',\n            isCorrect: false\n          }]\n        }],\n        medium: [{\n          question: `What is the output of len(\"Python\") in ${topic}?`,\n          options: [{\n            optionText: '6',\n            isCorrect: true\n          }, {\n            optionText: '5',\n            isCorrect: false\n          }, {\n            optionText: '7',\n            isCorrect: false\n          }, {\n            optionText: 'Error',\n            isCorrect: false\n          }]\n        }, {\n          question: `What is list comprehension in ${topic}?`,\n          options: [{\n            optionText: 'A concise way to create lists',\n            isCorrect: true\n          }, {\n            optionText: 'A type of loop',\n            isCorrect: false\n          }, {\n            optionText: 'A function',\n            isCorrect: false\n          }, {\n            optionText: 'A class method',\n            isCorrect: false\n          }]\n        }],\n        hard: [{\n          question: `What is a decorator in ${topic}?`,\n          options: [{\n            optionText: 'A function that modifies another function',\n            isCorrect: true\n          }, {\n            optionText: 'A type of variable',\n            isCorrect: false\n          }, {\n            optionText: 'A loop construct',\n            isCorrect: false\n          }, {\n            optionText: 'An error handler',\n            isCorrect: false\n          }]\n        }]\n      }\n    };\n    const topicKey = topic.toLowerCase();\n    const difficultyQuestions = ((_templates$topicKey = templates[topicKey]) === null || _templates$topicKey === void 0 ? void 0 : _templates$topicKey[difficulty]) || templates.java[difficulty];\n\n    // Use a more varied selection to avoid repetition\n    const questionIndex = (index * 3 + Math.floor(index / 2)) % difficultyQuestions.length;\n    const template = difficultyQuestions[questionIndex];\n    return {\n      questionText: template.question,\n      questionType: 'MULTIPLE_CHOICE',\n      options: template.options.map((opt, idx) => ({\n        ...opt,\n        id: Date.now() + idx + index * 100\n      })),\n      difficulty: difficulty,\n      topic: topic\n    };\n  };\n  const generateTrueFalse = (topic, difficulty, index) => {\n    const statements = {\n      easy: [{\n        text: `${topic} is a programming language`,\n        correct: true\n      }, {\n        text: `Variables in ${topic} must be declared before use`,\n        correct: true\n      }, {\n        text: `${topic} supports object-oriented programming`,\n        correct: true\n      }],\n      medium: [{\n        text: `${topic} is compiled to bytecode`,\n        correct: topic.toLowerCase() === 'java'\n      }, {\n        text: `${topic} uses garbage collection for memory management`,\n        correct: true\n      }],\n      hard: [{\n        text: `${topic} supports multiple inheritance of classes`,\n        correct: topic.toLowerCase() === 'python'\n      }]\n    };\n    const difficultyStatements = statements[difficulty];\n    const statement = difficultyStatements[index % difficultyStatements.length];\n    return {\n      questionText: statement.text,\n      questionType: 'TRUE_FALSE',\n      options: [{\n        optionText: 'True',\n        isCorrect: statement.correct,\n        id: Date.now() + 1\n      }, {\n        optionText: 'False',\n        isCorrect: !statement.correct,\n        id: Date.now() + 2\n      }],\n      difficulty: difficulty,\n      topic: topic\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundColor: 'white',\n      borderRadius: '12px',\n      padding: '2rem',\n      marginBottom: '2rem',\n      boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)',\n      border: '2px solid #e5e7eb'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      style: {\n        fontSize: '1.5rem',\n        fontWeight: '700',\n        color: '#1f2937',\n        marginBottom: '1rem',\n        display: 'flex',\n        alignItems: 'center',\n        gap: '0.5rem'\n      },\n      children: \"\\uD83E\\uDD16 AI Question Generator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 562,\n      columnNumber: 7\n    }, this), (!process.env.REACT_APP_OPENAI_API_KEY || process.env.REACT_APP_OPENAI_API_KEY === 'your-openai-api-key-here') && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: '#fef3c7',\n        border: '1px solid #fde68a',\n        borderRadius: '8px',\n        padding: '1rem',\n        marginBottom: '1rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          margin: '0 0 0.5rem 0',\n          fontWeight: '600',\n          color: '#92400e'\n        },\n        children: \"\\u26A0\\uFE0F OpenAI API Key Required\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 582,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          margin: 0,\n          fontSize: '0.875rem',\n          color: '#92400e'\n        },\n        children: \"Add REACT_APP_OPENAI_API_KEY to your .env file for real AI generation. Currently using template questions.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 585,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 575,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '1.5rem',\n        padding: '1rem',\n        backgroundColor: '#f8fafc',\n        borderRadius: '8px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          gap: '0.5rem',\n          cursor: 'pointer'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: createNewQuiz,\n          onChange: e => setCreateNewQuiz(e.target.checked),\n          style: {\n            width: '18px',\n            height: '18px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 594,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontWeight: '600',\n            color: '#374151'\n          },\n          children: \"Create new quiz with AI questions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 600,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 593,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 592,\n      columnNumber: 7\n    }, this), createNewQuiz && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '1.5rem',\n        padding: '1rem',\n        backgroundColor: '#eff6ff',\n        borderRadius: '8px',\n        border: '1px solid #bfdbfe'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        style: {\n          margin: '0 0 1rem 0',\n          color: '#1e40af',\n          fontSize: '1.1rem'\n        },\n        children: \"New Quiz Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 609,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'grid',\n          gridTemplateColumns: 'repeat(2, 1fr)',\n          gap: '1rem'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              display: 'block',\n              marginBottom: '0.5rem',\n              fontWeight: '600',\n              color: '#374151'\n            },\n            children: \"Quiz Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 612,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newQuizTitle,\n            onChange: e => setNewQuizTitle(e.target.value),\n            placeholder: \"e.g., Java Fundamentals Quiz\",\n            style: {\n              width: '100%',\n              padding: '0.75rem',\n              border: '1px solid #d1d5db',\n              borderRadius: '6px',\n              fontSize: '1rem'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 615,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 611,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              display: 'block',\n              marginBottom: '0.5rem',\n              fontWeight: '600',\n              color: '#374151'\n            },\n            children: \"Time Limit (minutes)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 630,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: timeLimit,\n            onChange: e => setTimeLimit(Math.max(1, parseInt(e.target.value) || 30)),\n            min: \"1\",\n            max: \"180\",\n            style: {\n              width: '100%',\n              padding: '0.75rem',\n              border: '1px solid #d1d5db',\n              borderRadius: '6px',\n              fontSize: '1rem'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 633,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 629,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 610,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '1rem'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            display: 'block',\n            marginBottom: '0.5rem',\n            fontWeight: '600',\n            color: '#374151'\n          },\n          children: \"Quiz Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 650,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: newQuizDescription,\n          onChange: e => setNewQuizDescription(e.target.value),\n          placeholder: \"Brief description of the quiz content and objectives\",\n          rows: 3,\n          style: {\n            width: '100%',\n            padding: '0.75rem',\n            border: '1px solid #d1d5db',\n            borderRadius: '6px',\n            fontSize: '1rem',\n            resize: 'vertical'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 653,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 649,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 608,\n      columnNumber: 9\n    }, this), !createNewQuiz && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '1.5rem',\n        padding: '1rem',\n        backgroundColor: '#fef3c7',\n        borderRadius: '8px',\n        border: '1px solid #fde68a'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        style: {\n          margin: '0 0 1rem 0',\n          color: '#92400e',\n          fontSize: '1.1rem'\n        },\n        children: \"Select Existing Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 674,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedExistingQuiz,\n        onChange: e => setSelectedExistingQuiz(e.target.value),\n        style: {\n          width: '100%',\n          padding: '0.75rem',\n          border: '1px solid #d1d5db',\n          borderRadius: '6px',\n          fontSize: '1rem',\n          backgroundColor: 'white'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Choose a quiz to add questions to...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 687,\n          columnNumber: 13\n        }, this), availableQuizzes.map(quiz => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: quiz.id,\n          children: quiz.title\n        }, quiz.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 689,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 675,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 673,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'grid',\n        gridTemplateColumns: 'repeat(2, 1fr)',\n        gap: '1rem',\n        marginBottom: '1.5rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            display: 'block',\n            marginBottom: '0.5rem',\n            fontWeight: '600',\n            color: '#374151'\n          },\n          children: \"Topic/Subject\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 697,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: topic,\n          onChange: e => setTopic(e.target.value),\n          placeholder: !createNewQuiz ? \"Auto-filled from selected quiz\" : \"e.g., Java, Python, React, JavaScript\",\n          readOnly: !createNewQuiz && selectedExistingQuiz,\n          style: {\n            width: '100%',\n            padding: '0.75rem',\n            border: '1px solid #d1d5db',\n            borderRadius: '6px',\n            fontSize: '1rem',\n            backgroundColor: !createNewQuiz && selectedExistingQuiz ? '#f9fafb' : 'white',\n            cursor: !createNewQuiz && selectedExistingQuiz ? 'not-allowed' : 'text'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 700,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 696,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            display: 'block',\n            marginBottom: '0.5rem',\n            fontWeight: '600',\n            color: '#374151'\n          },\n          children: \"Difficulty Level\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 719,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: difficulty,\n          onChange: e => setDifficulty(e.target.value),\n          style: {\n            width: '100%',\n            padding: '0.75rem',\n            border: '1px solid #d1d5db',\n            borderRadius: '6px',\n            fontSize: '1rem',\n            backgroundColor: 'white'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"easy\",\n            children: \"\\uD83D\\uDFE2 Easy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 734,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"medium\",\n            children: \"\\uD83D\\uDFE1 Medium\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 735,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"hard\",\n            children: \"\\uD83D\\uDD34 Hard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 736,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 722,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 718,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            display: 'block',\n            marginBottom: '0.5rem',\n            fontWeight: '600',\n            color: '#374151'\n          },\n          children: \"Number of Questions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 741,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: questionCount,\n          onChange: e => setQuestionCount(Math.max(1, Math.min(20, parseInt(e.target.value) || 1))),\n          min: \"1\",\n          max: \"20\",\n          style: {\n            width: '100%',\n            padding: '0.75rem',\n            border: '1px solid #d1d5db',\n            borderRadius: '6px',\n            fontSize: '1rem'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 744,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 740,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            display: 'block',\n            marginBottom: '0.5rem',\n            fontWeight: '600',\n            color: '#374151'\n          },\n          children: \"Question Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 761,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: questionType,\n          onChange: e => setQuestionType(e.target.value),\n          style: {\n            width: '100%',\n            padding: '0.75rem',\n            border: '1px solid #d1d5db',\n            borderRadius: '6px',\n            fontSize: '1rem',\n            backgroundColor: 'white'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"MULTIPLE_CHOICE\",\n            children: \"Multiple Choice\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 776,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"TRUE_FALSE\",\n            children: \"True/False\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 777,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 764,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 760,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 695,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: generateQuestions,\n      disabled: generating,\n      style: {\n        ...buttonStyles.primary,\n        width: '100%',\n        backgroundColor: generating ? '#9ca3af' : '#8b5cf6',\n        cursor: generating ? 'not-allowed' : 'pointer',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        gap: '0.5rem'\n      },\n      children: generating ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '20px',\n            height: '20px',\n            border: '2px solid #ffffff40',\n            borderTop: '2px solid #ffffff',\n            borderRadius: '50%',\n            animation: 'spin 1s linear infinite'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 798,\n          columnNumber: 13\n        }, this), \"Generating Questions...\"]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [\"\\u2728 Generate \", questionCount, \" Questions\"]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 782,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {\n      toasts: toasts,\n      removeToast: removeToast\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 815,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      children: `\n          @keyframes spin {\n            0% { transform: rotate(0deg); }\n            100% { transform: rotate(360deg); }\n          }\n        `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 817,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 554,\n    columnNumber: 5\n  }, this);\n};\n_s(AIQuestionGenerator, \"86mB4Ja2AQO1db0NAkJtGmykw1w=\", false, function () {\n  return [useToast];\n});\n_c = AIQuestionGenerator;\nexport default AIQuestionGenerator;\nvar _c;\n$RefreshReg$(_c, \"AIQuestionGenerator\");","map":{"version":3,"names":["React","useState","useEffect","buttonStyles","useToast","ToastContainer","jsxDEV","_jsxDEV","Fragment","_Fragment","AIQuestionGenerator","quizId","onQuestionsGenerated","availableQuizzes","_s","topic","setTopic","difficulty","setDifficulty","questionCount","setQuestionCount","questionType","setQuestionType","generating","setGenerating","createNewQuiz","setCreateNewQuiz","selectedExistingQuiz","setSelectedExistingQuiz","newQuizTitle","setNewQuizTitle","newQuizDescription","setNewQuizDescription","timeLimit","setTimeLimit","toasts","addToast","removeToast","length","selectedQuiz","find","q","id","toString","extractedTopic","title","split","generateQuestions","trim","targetQuizId","newQuiz","Date","now","description","response","fetch","method","headers","body","JSON","stringify","ok","savedQuiz","json","apiError","existingQuizzes","parse","localStorage","getItem","push","setItem","generatedQuestions","generateWithOpenAI","error","console","generateTemplateQuestions","question","questionData","Math","random","existingQuestions","quizzes","quizIndex","findIndex","questions","forEach","window","dispatchEvent","Event","count","type","API_KEY","process","env","REACT_APP_OPENAI_API_KEY","log","prompt","createPrompt","model","messages","role","content","temperature","max_tokens","errorText","text","Error","status","data","generatedContent","choices","message","parseAIResponse","includes","generateWithFreeAI","topicExamples","context","toLowerCase","cleanContent","startsWith","replace","Array","isArray","map","index","options","opt","idx","i","generateMCQ","generateTrueFalse","_templates$topicKey","templates","java","easy","optionText","isCorrect","medium","hard","react","python","topicKey","difficultyQuestions","questionIndex","floor","template","questionText","statements","correct","difficultyStatements","statement","style","backgroundColor","borderRadius","padding","marginBottom","boxShadow","border","children","fontSize","fontWeight","color","display","alignItems","gap","fileName","_jsxFileName","lineNumber","columnNumber","margin","cursor","checked","onChange","e","target","width","height","gridTemplateColumns","value","placeholder","max","parseInt","min","marginTop","rows","resize","quiz","readOnly","onClick","disabled","primary","justifyContent","borderTop","animation","_c","$RefreshReg$"],"sources":["C:/Users/sanje/Downloads/PROJECTS/QuizSystem/reactapp/src/components/AIQuestionGenerator.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { buttonStyles } from './buttonStyles';\nimport { useToast, ToastContainer } from './Toast';\n\nconst AIQuestionGenerator = ({ quizId, onQuestionsGenerated, availableQuizzes = [] }) => {\n  const [topic, setTopic] = useState('');\n  const [difficulty, setDifficulty] = useState('medium');\n  const [questionCount, setQuestionCount] = useState(5);\n  const [questionType, setQuestionType] = useState('MULTIPLE_CHOICE');\n  const [generating, setGenerating] = useState(false);\n  const [createNewQuiz, setCreateNewQuiz] = useState(true);\n  const [selectedExistingQuiz, setSelectedExistingQuiz] = useState('');\n  const [newQuizTitle, setNewQuizTitle] = useState('');\n  const [newQuizDescription, setNewQuizDescription] = useState('');\n  const [timeLimit, setTimeLimit] = useState(30);\n  const { toasts, addToast, removeToast } = useToast();\n\n  // Auto-fill topic when existing quiz is selected\n  useEffect(() => {\n    if (!createNewQuiz && selectedExistingQuiz && availableQuizzes.length > 0) {\n      const selectedQuiz = availableQuizzes.find(q => q.id.toString() === selectedExistingQuiz);\n      if (selectedQuiz) {\n        // Extract topic from quiz title (first word usually)\n        const extractedTopic = selectedQuiz.title.split(' ')[0];\n        setTopic(extractedTopic);\n      }\n    }\n  }, [selectedExistingQuiz, createNewQuiz, availableQuizzes]);\n\n  const generateQuestions = async () => {\n    if (!topic.trim()) {\n      addToast('Please enter a topic', 'error');\n      return;\n    }\n    \n    if (createNewQuiz && (!newQuizTitle.trim() || !newQuizDescription.trim())) {\n      addToast('Please fill in quiz title and description', 'error');\n      return;\n    }\n    \n    if (!createNewQuiz && !selectedExistingQuiz) {\n      addToast('Please select an existing quiz', 'error');\n      return;\n    }\n\n    setGenerating(true);\n    \n    try {\n      let targetQuizId = createNewQuiz ? null : selectedExistingQuiz;\n      \n      // Create new quiz if needed\n      if (createNewQuiz) {\n        const newQuiz = {\n          id: Date.now(),\n          title: newQuizTitle,\n          description: newQuizDescription,\n          timeLimit: timeLimit\n        };\n        \n        try {\n          // Try API first\n          const response = await fetch('http://localhost:8080/api/quizzes', {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(newQuiz)\n          });\n          \n          if (response.ok) {\n            const savedQuiz = await response.json();\n            targetQuizId = savedQuiz.id;\n          } else {\n            targetQuizId = newQuiz.id;\n          }\n        } catch (apiError) {\n          // Fallback to localStorage ID\n          targetQuizId = newQuiz.id;\n        }\n        \n        // Always save to localStorage for immediate visibility\n        const existingQuizzes = JSON.parse(localStorage.getItem('quizzes') || '[]');\n        existingQuizzes.push({ ...newQuiz, id: targetQuizId });\n        localStorage.setItem('quizzes', JSON.stringify(existingQuizzes));\n        \n        addToast(`Created new quiz: ${newQuizTitle}`, 'success');\n      }\n      \n      // Generate questions with real AI\n      let generatedQuestions;\n      try {\n        generatedQuestions = await generateWithOpenAI(topic, difficulty, questionCount, questionType);\n      } catch (error) {\n        console.error('Failed to generate with OpenAI, using templates:', error);\n        addToast('OpenAI failed, using template questions', 'warning');\n        generatedQuestions = generateTemplateQuestions(topic, difficulty, questionCount, questionType);\n      }\n      \n      // Save questions to the main quiz system\n      try {\n        // Try API first\n        for (const question of generatedQuestions) {\n          const questionData = {\n            ...question,\n            id: Date.now() + Math.random(),\n            quizId: targetQuizId\n          };\n          \n          try {\n            await fetch(`http://localhost:8080/api/quizzes/${targetQuizId}/questions`, {\n              method: 'POST',\n              headers: { 'Content-Type': 'application/json' },\n              body: JSON.stringify(questionData)\n            });\n          } catch (apiError) {\n            // Fallback to localStorage if API fails\n            const existingQuestions = JSON.parse(localStorage.getItem('aiGeneratedQuestions') || '{}');\n            if (!existingQuestions[targetQuizId]) {\n              existingQuestions[targetQuizId] = [];\n            }\n            existingQuestions[targetQuizId].push(questionData);\n            localStorage.setItem('aiGeneratedQuestions', JSON.stringify(existingQuestions));\n          }\n        }\n        \n        // Also update the quiz in localStorage for immediate visibility\n        const quizzes = JSON.parse(localStorage.getItem('quizzes') || '[]');\n        const quizIndex = quizzes.findIndex(q => q.id.toString() === targetQuizId.toString());\n        if (quizIndex !== -1) {\n          if (!quizzes[quizIndex].questions) {\n            quizzes[quizIndex].questions = [];\n          }\n          generatedQuestions.forEach(question => {\n            quizzes[quizIndex].questions.push({\n              ...question,\n              id: Date.now() + Math.random(),\n              quizId: targetQuizId\n            });\n          });\n          localStorage.setItem('quizzes', JSON.stringify(quizzes));\n        }\n        \n      } catch (error) {\n        console.error('Error saving questions:', error);\n      }\n      \n      addToast(`Generated ${questionCount} questions successfully!`, 'success');\n      \n      // Trigger dashboard refresh to show new quiz and questions\n      window.dispatchEvent(new Event('questionsUpdated'));\n      window.dispatchEvent(new Event('quizCreated'));\n      \n      onQuestionsGenerated(generatedQuestions);\n      \n      // Reset form\n      setTopic('');\n      setQuestionCount(5);\n      setNewQuizTitle('');\n      setNewQuizDescription('');\n      \n    } catch (error) {\n      addToast('Failed to generate questions. Please try again.', 'error');\n    } finally {\n      setGenerating(false);\n    }\n  };\n\n  const generateWithOpenAI = async (topic, difficulty, count, type) => {\n    const API_KEY = process.env.REACT_APP_OPENAI_API_KEY;\n    \n    console.log('API Key check:', API_KEY ? 'Present' : 'Missing');\n    \n    if (!API_KEY || API_KEY === 'your-openai-api-key-here') {\n      console.log('No valid API key, using templates');\n      addToast('OpenAI API key not configured. Using template questions.', 'warning');\n      return generateTemplateQuestions(topic, difficulty, count, type);\n    }\n\n    console.log(`Generating ${count} questions about ${topic} with OpenAI`);\n    addToast('Generating questions with OpenAI...', 'info');\n\n    const prompt = createPrompt(topic, difficulty, count, type);\n    console.log('OpenAI Prompt:', prompt);\n    \n    try {\n      const response = await fetch('https://api.openai.com/v1/chat/completions', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${API_KEY}`\n        },\n        body: JSON.stringify({\n          model: 'gpt-3.5-turbo',\n          messages: [{\n            role: 'user',\n            content: prompt\n          }],\n          temperature: 0.3,\n          max_tokens: 3000\n        })\n      });\n\n      if (!response.ok) {\n        const errorText = await response.text();\n        console.error('OpenAI API Error Response:', errorText);\n        throw new Error(`OpenAI API error: ${response.status} - ${errorText}`);\n      }\n\n      const data = await response.json();\n      console.log('OpenAI Response:', data);\n      const generatedContent = data.choices[0].message.content;\n      console.log('Generated Content:', generatedContent);\n      \n      addToast('Successfully generated questions with OpenAI!', 'success');\n      return parseAIResponse(generatedContent, topic, difficulty, type);\n    } catch (error) {\n      console.error('OpenAI API failed:', error);\n      \n      // Try free alternative API if OpenAI fails\n      if (error.message.includes('quota') || error.message.includes('429')) {\n        addToast('OpenAI quota exceeded. Trying free alternative...', 'warning');\n        return await generateWithFreeAI(topic, difficulty, count, type);\n      }\n      \n      addToast(`OpenAI API failed: ${error.message}`, 'error');\n      throw error;\n    }\n  };\n\n  const createPrompt = (topic, difficulty, count, type) => {\n    const topicExamples = {\n      'app development': 'mobile app development, React Native, Flutter, iOS, Android',\n      'dbms': 'database management systems, SQL, normalization, ACID properties, indexing',\n      'cloud computing': 'AWS, Azure, virtualization, containers, microservices',\n      'machine learning': 'algorithms, neural networks, supervised learning, data science',\n      'web development': 'HTML, CSS, JavaScript, frameworks, responsive design'\n    };\n    \n    const context = topicExamples[topic.toLowerCase()] || topic;\n    \n    return `Generate ${count} ${difficulty} level multiple choice questions about ${topic}.\n\nContext: Focus on ${context}\n\nReturn only this JSON format:\n[\n  {\n    \"questionText\": \"Specific question about ${topic}?\",\n    \"questionType\": \"${type}\",\n    \"options\": [\n      {\"optionText\": \"Correct answer\", \"isCorrect\": true},\n      {\"optionText\": \"Wrong option 1\", \"isCorrect\": false},\n      {\"optionText\": \"Wrong option 2\", \"isCorrect\": false},\n      {\"optionText\": \"Wrong option 3\", \"isCorrect\": false}\n    ]\n  }\n]`;\n  };\n\n  const parseAIResponse = (content, topic, difficulty, type) => {\n    try {\n      // Clean the response - remove any markdown formatting\n      let cleanContent = content.trim();\n      if (cleanContent.startsWith('```json')) {\n        cleanContent = cleanContent.replace(/```json\\n?/, '').replace(/\\n?```$/, '');\n      }\n      if (cleanContent.startsWith('```')) {\n        cleanContent = cleanContent.replace(/```\\n?/, '').replace(/\\n?```$/, '');\n      }\n      \n      const questions = JSON.parse(cleanContent);\n      \n      if (!Array.isArray(questions)) {\n        throw new Error('Response is not an array');\n      }\n      \n      return questions.map((q, index) => ({\n        ...q,\n        id: Date.now() + index,\n        difficulty: difficulty,\n        topic: topic,\n        options: q.options.map((opt, idx) => ({\n          ...opt,\n          id: Date.now() + index * 100 + idx\n        }))\n      }));\n    } catch (error) {\n      console.error('Failed to parse AI response:', error, 'Content:', content);\n      addToast('Failed to parse AI response. Using template questions.', 'warning');\n      return generateTemplateQuestions(topic, difficulty, questionCount, type);\n    }\n  };\n\n  const generateTemplateQuestions = (topic, difficulty, count, type) => {\n    const questions = [];\n    for (let i = 0; i < count; i++) {\n      if (type === 'MULTIPLE_CHOICE') {\n        questions.push(generateMCQ(topic, difficulty, i + 1));\n      } else {\n        questions.push(generateTrueFalse(topic, difficulty, i + 1));\n      }\n    }\n    return questions;\n  };\n\n  const generateMCQ = (topic, difficulty, index) => {\n    const templates = {\n      java: {\n        easy: [\n          {\n            question: `What is the correct way to declare a variable in ${topic}?`,\n            options: [\n              { optionText: 'int x = 5;', isCorrect: true },\n              { optionText: 'integer x = 5;', isCorrect: false },\n              { optionText: 'var x = 5;', isCorrect: false },\n              { optionText: 'x = 5;', isCorrect: false }\n            ]\n          },\n          {\n            question: `Which keyword is used to create a class in ${topic}?`,\n            options: [\n              { optionText: 'class', isCorrect: true },\n              { optionText: 'Class', isCorrect: false },\n              { optionText: 'new', isCorrect: false },\n              { optionText: 'create', isCorrect: false }\n            ]\n          },\n          {\n            question: `What is the main method signature in ${topic}?`,\n            options: [\n              { optionText: 'public static void main(String[] args)', isCorrect: true },\n              { optionText: 'public void main(String[] args)', isCorrect: false },\n              { optionText: 'static void main(String[] args)', isCorrect: false },\n              { optionText: 'public main(String[] args)', isCorrect: false }\n            ]\n          }\n        ],\n        medium: [\n          {\n            question: `What is the output of System.out.println(\"Hello\".length()) in ${topic}?`,\n            options: [\n              { optionText: '5', isCorrect: true },\n              { optionText: '4', isCorrect: false },\n              { optionText: '6', isCorrect: false },\n              { optionText: 'Error', isCorrect: false }\n            ]\n          },\n          {\n            question: `Which collection class allows duplicate elements in ${topic}?`,\n            options: [\n              { optionText: 'ArrayList', isCorrect: true },\n              { optionText: 'HashSet', isCorrect: false },\n              { optionText: 'TreeSet', isCorrect: false },\n              { optionText: 'LinkedHashSet', isCorrect: false }\n            ]\n          },\n          {\n            question: `What is inheritance in ${topic}?`,\n            options: [\n              { optionText: 'A class acquiring properties of another class', isCorrect: true },\n              { optionText: 'Creating multiple objects', isCorrect: false },\n              { optionText: 'Hiding implementation details', isCorrect: false },\n              { optionText: 'Method overloading', isCorrect: false }\n            ]\n          }\n        ],\n        hard: [\n          {\n            question: `What is the time complexity of HashMap get() operation in ${topic}?`,\n            options: [\n              { optionText: 'O(1) average case', isCorrect: true },\n              { optionText: 'O(log n)', isCorrect: false },\n              { optionText: 'O(n)', isCorrect: false },\n              { optionText: 'O(n²)', isCorrect: false }\n            ]\n          }\n        ]\n      },\n      react: {\n        easy: [\n          {\n            question: `How do you create a functional component in ${topic}?`,\n            options: [\n              { optionText: 'function MyComponent() { return <div></div>; }', isCorrect: true },\n              { optionText: 'class MyComponent() { return <div></div>; }', isCorrect: false },\n              { optionText: 'component MyComponent() { return <div></div>; }', isCorrect: false },\n              { optionText: 'const MyComponent = <div></div>;', isCorrect: false }\n            ]\n          },\n          {\n            question: `What is JSX in ${topic}?`,\n            options: [\n              { optionText: 'JavaScript XML syntax extension', isCorrect: true },\n              { optionText: 'A CSS framework', isCorrect: false },\n              { optionText: 'A database query language', isCorrect: false },\n              { optionText: 'A testing library', isCorrect: false }\n            ]\n          },\n          {\n            question: `Which hook is used for state management in ${topic}?`,\n            options: [\n              { optionText: 'useState', isCorrect: true },\n              { optionText: 'useEffect', isCorrect: false },\n              { optionText: 'useContext', isCorrect: false },\n              { optionText: 'useReducer', isCorrect: false }\n            ]\n          }\n        ],\n        medium: [\n          {\n            question: `What is the purpose of useEffect in ${topic}?`,\n            options: [\n              { optionText: 'Handle side effects and lifecycle events', isCorrect: true },\n              { optionText: 'Manage component state', isCorrect: false },\n              { optionText: 'Create new components', isCorrect: false },\n              { optionText: 'Style components', isCorrect: false }\n            ]\n          },\n          {\n            question: `How do you pass data from parent to child in ${topic}?`,\n            options: [\n              { optionText: 'Through props', isCorrect: true },\n              { optionText: 'Through state', isCorrect: false },\n              { optionText: 'Through context only', isCorrect: false },\n              { optionText: 'Through refs', isCorrect: false }\n            ]\n          },\n          {\n            question: `What is the Virtual DOM in ${topic}?`,\n            options: [\n              { optionText: 'A JavaScript representation of the real DOM', isCorrect: true },\n              { optionText: 'A CSS framework', isCorrect: false },\n              { optionText: 'A database', isCorrect: false },\n              { optionText: 'A testing tool', isCorrect: false }\n            ]\n          }\n        ],\n        hard: [\n          {\n            question: `What is the difference between useMemo and useCallback in ${topic}?`,\n            options: [\n              { optionText: 'useMemo memoizes values, useCallback memoizes functions', isCorrect: true },\n              { optionText: 'They are the same', isCorrect: false },\n              { optionText: 'useMemo is for state, useCallback is for effects', isCorrect: false },\n              { optionText: 'useCallback is deprecated', isCorrect: false }\n            ]\n          }\n        ]\n      },\n      python: {\n        easy: [\n          {\n            question: `How do you create a list in ${topic}?`,\n            options: [\n              { optionText: 'my_list = []', isCorrect: true },\n              { optionText: 'my_list = ()', isCorrect: false },\n              { optionText: 'my_list = {}', isCorrect: false },\n              { optionText: 'list my_list', isCorrect: false }\n            ]\n          },\n          {\n            question: `What is the correct way to define a function in ${topic}?`,\n            options: [\n              { optionText: 'def my_function():', isCorrect: true },\n              { optionText: 'function my_function():', isCorrect: false },\n              { optionText: 'func my_function():', isCorrect: false },\n              { optionText: 'define my_function():', isCorrect: false }\n            ]\n          }\n        ],\n        medium: [\n          {\n            question: `What is the output of len(\"Python\") in ${topic}?`,\n            options: [\n              { optionText: '6', isCorrect: true },\n              { optionText: '5', isCorrect: false },\n              { optionText: '7', isCorrect: false },\n              { optionText: 'Error', isCorrect: false }\n            ]\n          },\n          {\n            question: `What is list comprehension in ${topic}?`,\n            options: [\n              { optionText: 'A concise way to create lists', isCorrect: true },\n              { optionText: 'A type of loop', isCorrect: false },\n              { optionText: 'A function', isCorrect: false },\n              { optionText: 'A class method', isCorrect: false }\n            ]\n          }\n        ],\n        hard: [\n          {\n            question: `What is a decorator in ${topic}?`,\n            options: [\n              { optionText: 'A function that modifies another function', isCorrect: true },\n              { optionText: 'A type of variable', isCorrect: false },\n              { optionText: 'A loop construct', isCorrect: false },\n              { optionText: 'An error handler', isCorrect: false }\n            ]\n          }\n        ]\n      }\n    };\n\n    const topicKey = topic.toLowerCase();\n    const difficultyQuestions = templates[topicKey]?.[difficulty] || templates.java[difficulty];\n    \n    // Use a more varied selection to avoid repetition\n    const questionIndex = (index * 3 + Math.floor(index / 2)) % difficultyQuestions.length;\n    const template = difficultyQuestions[questionIndex];\n    \n    return {\n      questionText: template.question,\n      questionType: 'MULTIPLE_CHOICE',\n      options: template.options.map((opt, idx) => ({\n        ...opt,\n        id: Date.now() + idx + index * 100\n      })),\n      difficulty: difficulty,\n      topic: topic\n    };\n  };\n\n  const generateTrueFalse = (topic, difficulty, index) => {\n    const statements = {\n      easy: [\n        { text: `${topic} is a programming language`, correct: true },\n        { text: `Variables in ${topic} must be declared before use`, correct: true },\n        { text: `${topic} supports object-oriented programming`, correct: true }\n      ],\n      medium: [\n        { text: `${topic} is compiled to bytecode`, correct: topic.toLowerCase() === 'java' },\n        { text: `${topic} uses garbage collection for memory management`, correct: true }\n      ],\n      hard: [\n        { text: `${topic} supports multiple inheritance of classes`, correct: topic.toLowerCase() === 'python' }\n      ]\n    };\n\n    const difficultyStatements = statements[difficulty];\n    const statement = difficultyStatements[index % difficultyStatements.length];\n    \n    return {\n      questionText: statement.text,\n      questionType: 'TRUE_FALSE',\n      options: [\n        { optionText: 'True', isCorrect: statement.correct, id: Date.now() + 1 },\n        { optionText: 'False', isCorrect: !statement.correct, id: Date.now() + 2 }\n      ],\n      difficulty: difficulty,\n      topic: topic\n    };\n  };\n\n  return (\n    <div style={{\n      backgroundColor: 'white',\n      borderRadius: '12px',\n      padding: '2rem',\n      marginBottom: '2rem',\n      boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)',\n      border: '2px solid #e5e7eb'\n    }}>\n      <h3 style={{\n        fontSize: '1.5rem',\n        fontWeight: '700',\n        color: '#1f2937',\n        marginBottom: '1rem',\n        display: 'flex',\n        alignItems: 'center',\n        gap: '0.5rem'\n      }}>\n        🤖 AI Question Generator\n      </h3>\n      \n      {(!process.env.REACT_APP_OPENAI_API_KEY || process.env.REACT_APP_OPENAI_API_KEY === 'your-openai-api-key-here') && (\n        <div style={{\n          backgroundColor: '#fef3c7',\n          border: '1px solid #fde68a',\n          borderRadius: '8px',\n          padding: '1rem',\n          marginBottom: '1rem'\n        }}>\n          <p style={{ margin: '0 0 0.5rem 0', fontWeight: '600', color: '#92400e' }}>\n            ⚠️ OpenAI API Key Required\n          </p>\n          <p style={{ margin: 0, fontSize: '0.875rem', color: '#92400e' }}>\n            Add REACT_APP_OPENAI_API_KEY to your .env file for real AI generation. Currently using template questions.\n          </p>\n        </div>\n      )}\n      \n      {/* Quiz Creation Toggle */}\n      <div style={{ marginBottom: '1.5rem', padding: '1rem', backgroundColor: '#f8fafc', borderRadius: '8px' }}>\n        <label style={{ display: 'flex', alignItems: 'center', gap: '0.5rem', cursor: 'pointer' }}>\n          <input\n            type=\"checkbox\"\n            checked={createNewQuiz}\n            onChange={(e) => setCreateNewQuiz(e.target.checked)}\n            style={{ width: '18px', height: '18px' }}\n          />\n          <span style={{ fontWeight: '600', color: '#374151' }}>\n            Create new quiz with AI questions\n          </span>\n        </label>\n      </div>\n      \n      {/* New Quiz Form */}\n      {createNewQuiz && (\n        <div style={{ marginBottom: '1.5rem', padding: '1rem', backgroundColor: '#eff6ff', borderRadius: '8px', border: '1px solid #bfdbfe' }}>\n          <h4 style={{ margin: '0 0 1rem 0', color: '#1e40af', fontSize: '1.1rem' }}>New Quiz Details</h4>\n          <div style={{ display: 'grid', gridTemplateColumns: 'repeat(2, 1fr)', gap: '1rem' }}>\n            <div>\n              <label style={{ display: 'block', marginBottom: '0.5rem', fontWeight: '600', color: '#374151' }}>\n                Quiz Title\n              </label>\n              <input\n                type=\"text\"\n                value={newQuizTitle}\n                onChange={(e) => setNewQuizTitle(e.target.value)}\n                placeholder=\"e.g., Java Fundamentals Quiz\"\n                style={{\n                  width: '100%',\n                  padding: '0.75rem',\n                  border: '1px solid #d1d5db',\n                  borderRadius: '6px',\n                  fontSize: '1rem'\n                }}\n              />\n            </div>\n            <div>\n              <label style={{ display: 'block', marginBottom: '0.5rem', fontWeight: '600', color: '#374151' }}>\n                Time Limit (minutes)\n              </label>\n              <input\n                type=\"number\"\n                value={timeLimit}\n                onChange={(e) => setTimeLimit(Math.max(1, parseInt(e.target.value) || 30))}\n                min=\"1\"\n                max=\"180\"\n                style={{\n                  width: '100%',\n                  padding: '0.75rem',\n                  border: '1px solid #d1d5db',\n                  borderRadius: '6px',\n                  fontSize: '1rem'\n                }}\n              />\n            </div>\n          </div>\n          <div style={{ marginTop: '1rem' }}>\n            <label style={{ display: 'block', marginBottom: '0.5rem', fontWeight: '600', color: '#374151' }}>\n              Quiz Description\n            </label>\n            <textarea\n              value={newQuizDescription}\n              onChange={(e) => setNewQuizDescription(e.target.value)}\n              placeholder=\"Brief description of the quiz content and objectives\"\n              rows={3}\n              style={{\n                width: '100%',\n                padding: '0.75rem',\n                border: '1px solid #d1d5db',\n                borderRadius: '6px',\n                fontSize: '1rem',\n                resize: 'vertical'\n              }}\n            />\n          </div>\n        </div>\n      )}\n      \n      {/* Existing Quiz Selector */}\n      {!createNewQuiz && (\n        <div style={{ marginBottom: '1.5rem', padding: '1rem', backgroundColor: '#fef3c7', borderRadius: '8px', border: '1px solid #fde68a' }}>\n          <h4 style={{ margin: '0 0 1rem 0', color: '#92400e', fontSize: '1.1rem' }}>Select Existing Quiz</h4>\n          <select\n            value={selectedExistingQuiz}\n            onChange={(e) => setSelectedExistingQuiz(e.target.value)}\n            style={{\n              width: '100%',\n              padding: '0.75rem',\n              border: '1px solid #d1d5db',\n              borderRadius: '6px',\n              fontSize: '1rem',\n              backgroundColor: 'white'\n            }}\n          >\n            <option value=\"\">Choose a quiz to add questions to...</option>\n            {availableQuizzes.map(quiz => (\n              <option key={quiz.id} value={quiz.id}>{quiz.title}</option>\n            ))}\n          </select>\n        </div>\n      )}\n\n      <div style={{ display: 'grid', gridTemplateColumns: 'repeat(2, 1fr)', gap: '1rem', marginBottom: '1.5rem' }}>\n        <div>\n          <label style={{ display: 'block', marginBottom: '0.5rem', fontWeight: '600', color: '#374151' }}>\n            Topic/Subject\n          </label>\n          <input\n            type=\"text\"\n            value={topic}\n            onChange={(e) => setTopic(e.target.value)}\n            placeholder={!createNewQuiz ? \"Auto-filled from selected quiz\" : \"e.g., Java, Python, React, JavaScript\"}\n            readOnly={!createNewQuiz && selectedExistingQuiz}\n            style={{\n              width: '100%',\n              padding: '0.75rem',\n              border: '1px solid #d1d5db',\n              borderRadius: '6px',\n              fontSize: '1rem',\n              backgroundColor: (!createNewQuiz && selectedExistingQuiz) ? '#f9fafb' : 'white',\n              cursor: (!createNewQuiz && selectedExistingQuiz) ? 'not-allowed' : 'text'\n            }}\n          />\n        </div>\n\n        <div>\n          <label style={{ display: 'block', marginBottom: '0.5rem', fontWeight: '600', color: '#374151' }}>\n            Difficulty Level\n          </label>\n          <select\n            value={difficulty}\n            onChange={(e) => setDifficulty(e.target.value)}\n            style={{\n              width: '100%',\n              padding: '0.75rem',\n              border: '1px solid #d1d5db',\n              borderRadius: '6px',\n              fontSize: '1rem',\n              backgroundColor: 'white'\n            }}\n          >\n            <option value=\"easy\">🟢 Easy</option>\n            <option value=\"medium\">🟡 Medium</option>\n            <option value=\"hard\">🔴 Hard</option>\n          </select>\n        </div>\n\n        <div>\n          <label style={{ display: 'block', marginBottom: '0.5rem', fontWeight: '600', color: '#374151' }}>\n            Number of Questions\n          </label>\n          <input\n            type=\"number\"\n            value={questionCount}\n            onChange={(e) => setQuestionCount(Math.max(1, Math.min(20, parseInt(e.target.value) || 1)))}\n            min=\"1\"\n            max=\"20\"\n            style={{\n              width: '100%',\n              padding: '0.75rem',\n              border: '1px solid #d1d5db',\n              borderRadius: '6px',\n              fontSize: '1rem'\n            }}\n          />\n        </div>\n\n        <div>\n          <label style={{ display: 'block', marginBottom: '0.5rem', fontWeight: '600', color: '#374151' }}>\n            Question Type\n          </label>\n          <select\n            value={questionType}\n            onChange={(e) => setQuestionType(e.target.value)}\n            style={{\n              width: '100%',\n              padding: '0.75rem',\n              border: '1px solid #d1d5db',\n              borderRadius: '6px',\n              fontSize: '1rem',\n              backgroundColor: 'white'\n            }}\n          >\n            <option value=\"MULTIPLE_CHOICE\">Multiple Choice</option>\n            <option value=\"TRUE_FALSE\">True/False</option>\n          </select>\n        </div>\n      </div>\n\n      <button\n        onClick={generateQuestions}\n        disabled={generating}\n        style={{\n          ...buttonStyles.primary,\n          width: '100%',\n          backgroundColor: generating ? '#9ca3af' : '#8b5cf6',\n          cursor: generating ? 'not-allowed' : 'pointer',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          gap: '0.5rem'\n        }}\n      >\n        {generating ? (\n          <>\n            <div style={{\n              width: '20px',\n              height: '20px',\n              border: '2px solid #ffffff40',\n              borderTop: '2px solid #ffffff',\n              borderRadius: '50%',\n              animation: 'spin 1s linear infinite'\n            }} />\n            Generating Questions...\n          </>\n        ) : (\n          <>\n            ✨ Generate {questionCount} Questions\n          </>\n        )}\n      </button>\n\n      <ToastContainer toasts={toasts} removeToast={removeToast} />\n      \n      <style>\n        {`\n          @keyframes spin {\n            0% { transform: rotate(0deg); }\n            100% { transform: rotate(360deg); }\n          }\n        `}\n      </style>\n    </div>\n  );\n};\n\nexport default AIQuestionGenerator;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}